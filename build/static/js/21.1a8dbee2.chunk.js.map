{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/EditTwoTone.js","../node_modules/@ant-design/icons/es/icons/EditTwoTone.js","components/settings/Password.js","components/settings/Profile.js","pages/Settings.js"],"names":["EditTwoTone","primaryColor","secondaryColor","props","ref","React","AntdIcon","Object","assign","icon","EditTwoToneSvg","displayName","Password","useState","password","setPassword","resetPassword","a","user","JSON","parse","localStorage","getItem","id","_id","fetch","method","headers","body","stringify","then","res","json","f","failed","message","success","error","className","style","width","placeholder","onChange","e","target","value","onClick","marginLeft","margin","Profile","name","setName","email","setEmail","fail","postData","clear","setItem","for","type","autocomplete","defaultValue","firstName","lastName","linkStyles","Settings","history","useHistory","showProfile","setShowProfile","showPassword","setShowPassword","xmlns","fill","viewBox","stroke","d","push","strokeLinecap","strokeLinejoin","strokeWidth"],"mappings":"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","file":"static/js/21.1a8dbee2.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar EditTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M761.1 288.3L687.8 215 325.1 577.6l-15.6 89 88.9-15.7z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32zm-622.3-84c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89z\", \"fill\": primaryColor } }] }; }, \"name\": \"edit\", \"theme\": \"twotone\" };\nexport default EditTwoTone;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditTwoToneSvg from \"@ant-design/icons-svg/es/asn/EditTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EditTwoTone = function EditTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: EditTwoToneSvg\n  }));\n};\n\nEditTwoTone.displayName = 'EditTwoTone';\nexport default /*#__PURE__*/React.forwardRef(EditTwoTone);","import React, { useState } from \"react\";\nimport { Button, Input, message } from \"antd\";\nimport { EditTwoTone } from \"@ant-design/icons\";\n\nconst Password = () => {\n  const [password, setPassword] = useState(\"\");\n\n  const success = () => {\n    message.success(\"Password updated\");\n  };\n\n  const fail = (f) => {\n    message.error(`${f}`);\n  };\n\n  const resetPassword = async () => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const id = user._id;\n    await fetch(`/api/v1/auth/resetPassword/user/${id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.failed === false) {\n          success();\n        } else {\n          fail(res.message);\n        }\n      });\n  };\n\n  return (\n    <div className=\"m-5 p-1\" >\n      <h3>Password Reset</h3>\n      <Input\n        style={{ width: '50%'}}\n        placeholder=\"Enter new Password ... \"\n        onChange={(e) => {\n          setPassword(e.target.value);\n        }}\n      />\n      <Button onClick={resetPassword} style={{ marginLeft: 10, margin: 5 }}>\n        <EditTwoTone />\n      </Button>\n    </div>\n  );\n};\n\nexport default Password;\n","import React, { useState } from \"react\";\nimport { message } from \"antd\";\n\nconst Profile = () => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n\n  const success = () => {\n    message.success(\"Information updated!\");\n  };\n\n  const fail = () => {\n    message.error(\"Information failed to update\");\n  };\n\n  async function postData() {\n    await fetch(`/api/v1/auth/profile`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name ? name : user.name,\n        email: email ? email : user.email,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.fail === false) {\n          localStorage.clear();\n          localStorage.setItem(\"user\", JSON.stringify(res.user));\n          success();\n        } else {\n          fail();\n        }\n      });\n  }\n\n  return (\n    <div>\n      <div className=\"py-6 px-4 sm:p-6 lg:pb-8\">\n        <div>\n          <h2 className=\"text-lg leading-6 font-medium text-gray-900\">Profile</h2>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            This information will be displayed publicly so be careful what you\n            share.\n          </p>\n        </div>\n\n        <div className=\"mt-6 flex flex-col lg:flex-row\">\n          <div className=\"flex-grow space-y-6\">\n            <div>\n              <label\n                for=\"firstname\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                First Name\n              </label>\n              <div className=\"mt-1 rounded-md shadow-sm flex\">\n                <input\n                  type=\"text\"\n                  name=\"firstname\"\n                  id=\"firstname\"\n                  autocomplete=\"firstname\"\n                  className=\"focus:ring-light-blue-500 focus:border-light-blue-500 flex-grow block w-full min-w-0 rounded-none rounded-r-md sm:text-sm border-gray-300\"\n                  defaultValue={user.firstName}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n            </div>\n            <div>\n              <label\n                for=\"lastname\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                Last Name\n              </label>\n              <div className=\"mt-1 rounded-md shadow-sm flex\">\n                <input\n                  type=\"text\"\n                  name=\"lastname\"\n                  id=\"lastname\"\n                  autocomplete=\"lastname\"\n                  className=\"focus:ring-light-blue-500 focus:border-light-blue-500 flex-grow block w-full min-w-0 rounded-none rounded-r-md sm:text-sm border-gray-300\"\n                  defaultValue={user.lastName}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n            </div>\n            <div>\n              <label\n                for=\"office\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                Office\n              </label>\n              <div className=\"mt-1 rounded-md shadow-sm flex\">\n                <input\n                  type=\"text\"\n                  name=\"office\"\n                  id=\"office\"\n                  className=\"focus:ring-light-blue-500 focus:border-light-blue-500 flex-grow block w-full min-w-0 rounded-none rounded-r-md sm:text-sm border-gray-300\"\n                  defaultValue={null}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n            </div>\n            <div>\n              <label\n                for=\"email\"\n                className=\"block text-sm font-medium text-gray-700\"\n              >\n                Email\n              </label>\n              <div className=\"mt-1 rounded-md shadow-sm flex\">\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  autocomplete=\"email\"\n                  className=\"focus:ring-light-blue-500 focus:border-light-blue-500 flex-grow block w-full min-w-0 rounded-none rounded-r-md sm:text-sm border-gray-300\"\n                  defaultValue={user.email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        \n      </div>\n\n      <div className=\"mt-4 py-4 px-4 flex justify-end sm:px-6\">\n        <button\n          onClick={async () => {\n            await postData()\n          } }\n          type=\"submit\"\n          className=\"ml-5 bg-light-blue-700 border border-transparent rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-white hover:bg-light-blue-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-light-blue-500\"\n        >\n          Save\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport Password from \"../components/settings/Password\";\nimport Profile from \"../components/settings/Profile\";\n\nconst linkStyles = {\n  active:\n    \"bg-teal-50 border-teal-500 text-teal-700 hover:bg-teal-50 hover:text-teal-700 group border-l-4 px-3 py-2 flex items-center text-sm font-medium\",\n  inactive:\n    \"border-transparent text-gray-900 hover:bg-gray-50 hover:text-gray-900 group mt-1 border-l-4 px-3 py-2 flex items-center text-sm font-medium\",\n};\n\nconst Settings = () => {\n  const history = useHistory();\n\n  const [showProfile, setShowProfile] = useState(true);\n  const [showPassword, setShowPassword] = useState(false);\n\n  function logout() {\n    localStorage.clear();\n    history.push(\"/login\");\n  }\n\n  return (\n    <div>\n      <main className=\"relative\">\n        <div className=\"max-w-screen-xl mx-auto pb-6 px-4 sm:px-6 lg:pb-16 lg:px-8\">\n          <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n            <div className=\"divide-y divide-gray-200 lg:grid lg:grid-cols-12 lg:divide-y-0 lg:divide-x\">\n              <aside className=\"py-6 lg:col-span-3\">\n                <nav>\n                  <Link\n                    onClick={() => {\n                      setShowProfile(true);\n                      setShowPassword(false);\n                    }}\n                    className={\n                      showProfile ? linkStyles.active : linkStyles.inactive\n                    }\n                    aria-current=\"page\"\n                  >\n                    <svg\n                      className=\"text-teal-500 group-hover:text-teal-500 flex-shrink-0 -ml-1 mr-3 h-6 w-6\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                      aria-hidden=\"true\"\n                    >\n                      <path\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        stroke-width=\"2\"\n                        d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                      />\n                    </svg>\n                    <span className=\"truncate\">Profile</span>\n                  </Link>\n\n                  <Link\n                    onClick={() => {\n                      setShowProfile(false);\n                      setShowPassword(true);\n                    }}\n                    className={\n                      showPassword ? linkStyles.active : linkStyles.inactive\n                    }\n                  >\n                    <svg\n                      className=\"text-gray-400 group-hover:text-gray-500 flex-shrink-0 -ml-1 mr-3 h-6 w-6\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                      aria-hidden=\"true\"\n                    >\n                      <path\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        stroke-width=\"2\"\n                        d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\"\n                      />\n                    </svg>\n                    <span className=\"truncate\">Password</span>\n                  </Link>\n                  <Link\n                    onClick={() => logout()}\n                    className={linkStyles.inactive}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"text-gray-400 group-hover:text-gray-500 flex-shrink-0 -ml-1 mr-3 h-6 w-6\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                      />\n                    </svg>\n                    <span className=\"truncate\">Log Out</span>\n                  </Link>\n                </nav>\n              </aside>\n              <div className=\"divide-y divide-gray-200 lg:col-span-9\">\n                <div className={`${showProfile ? \"\" : \"hidden\"}`}>\n                  <Profile />\n                </div>\n                <div className={`${showPassword ? \"\" : \"hidden\"}`}>\n                  <Password />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Settings;\n"],"sourceRoot":""}