{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/LockOutlined.js","../node_modules/@ant-design/icons/es/icons/LockOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/EyeTwoTone.js","../node_modules/@ant-design/icons/es/icons/EyeTwoTone.js","../node_modules/validator/es/lib/util/assertString.js","../node_modules/validator/es/lib/util/merge.js","../node_modules/validator/es/lib/isByteLength.js","../node_modules/validator/es/lib/isFQDN.js","../node_modules/validator/es/lib/isIP.js","../node_modules/validator/es/lib/isEmail.js","pages/auth/logo.png","pages/auth/Login.js"],"names":["LockOutlined","props","ref","React","AntdIcon","Object","assign","icon","LockOutlinedSvg","displayName","EyeTwoTone","primaryColor","secondaryColor","EyeTwoToneSvg","_typeof","obj","Symbol","iterator","constructor","prototype","assertString","input","String","invalidType","name","TypeError","concat","merge","arguments","length","undefined","defaults","key","isByteLength","str","options","min","max","len","encodeURI","split","default_fqdn_options","require_tld","allow_underscores","allow_trailing_dot","allow_numeric_tld","IPv4SegmentFormat","IPv4AddressFormat","IPv4AddressRegExp","RegExp","IPv6SegmentFormat","IPv6AddressRegExp","isIP","version","test","parts","sort","a","b","default_email_options","allow_display_name","require_display_name","allow_utf8_local_part","blacklisted_chars","ignore_max_length","splitNameAddress","emailUserPart","gmailUserPart","quotedEmailUser","emailUserUtf8Part","quotedEmailUserUtf8","isEmail","display_email","match","display_name","replace","endsWith","substr","display_name_without_quotes","trim","validateDisplayName","domain","pop","user","join","lower_domain","toLowerCase","domain_specific_validation","username","_user_parts","i","substring","tld","every","part","isFQDN","allow_ip_domain","startsWith","noBracketdomain","slice","pattern","user_parts","_i","search","Login","history","useHistory","useState","password","setPassword","email","setEmail","toggle","setToggle","error","setError","errorNotification","message","description","duration","args","notification","open","signin","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","auth","localStorage","setItem","setTimeout","push","class","spinning","src","logo","alt","for","onChange","e","target","value","placeholder","id","type","autocomplete","required","className","Password","prefix","iconRender","visible","EyeInvisibleOutlined","onClick"],"mappings":"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","file":"static/js/23.20726969.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar LockOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\" } }] }, \"name\": \"lock\", \"theme\": \"outlined\" };\nexport default LockOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockOutlinedSvg from \"@ant-design/icons-svg/es/asn/LockOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockOutlined = function LockOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: LockOutlinedSvg\n  }));\n};\n\nLockOutlined.displayName = 'LockOutlined';\nexport default /*#__PURE__*/React.forwardRef(LockOutlined);","// This icon file is generated automatically.\nvar EyeTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M81.8 537.8a60.3 60.3 0 010-51.5C176.6 286.5 319.8 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c-192.1 0-335.4-100.5-430.2-300.2z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 258c-161.3 0-279.4 81.8-362.7 254C232.6 684.2 350.7 766 512 766c161.4 0 279.5-81.8 362.7-254C791.4 339.8 673.3 258 512 258zm-4 430c-97.2 0-176-78.8-176-176s78.8-176 176-176 176 78.8 176 176-78.8 176-176 176z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258s279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766z\", \"fill\": primaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M508 336c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\", \"fill\": primaryColor } }] }; }, \"name\": \"eye\", \"theme\": \"twotone\" };\nexport default EyeTwoTone;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EyeTwoToneSvg from \"@ant-design/icons-svg/es/asn/EyeTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EyeTwoTone = function EyeTwoTone(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: EyeTwoToneSvg\n  }));\n};\n\nEyeTwoTone.displayName = 'EyeTwoTone';\nexport default /*#__PURE__*/React.forwardRef(EyeTwoTone);","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nexport default function assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n\n  if (!isString) {\n    var invalidType = _typeof(input);\n\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}","export default function merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments.length > 1 ? arguments[1] : undefined;\n\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n\n  return obj;\n}","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport assertString from './util/assertString';\n/* eslint-disable prefer-rest-params */\n\nexport default function isByteLength(str, options) {\n  assertString(str);\n  var min;\n  var max;\n\n  if (_typeof(options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isByteLength(str, min [, max])\n    min = arguments[1];\n    max = arguments[2];\n  }\n\n  var len = encodeURI(str).split(/%..|./).length - 1;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}","import assertString from './util/assertString';\nimport merge from './util/merge';\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false\n};\nexport default function isFQDN(str, options) {\n  assertString(str);\n  options = merge(options, default_fqdn_options);\n  /* Remove the optional trailing dot before checking validity */\n\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n\n    if (!/^([a-z\\u00a1-\\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    } // disallow spaces && special characers\n\n\n    if (/[\\s\\u2002-\\u200B\\u202F\\u205F\\u3000\\uFEFF\\uDB40\\uDC20\\u00A9\\uFFFD]/.test(tld)) {\n      return false;\n    }\n  } // reject numeric TLDs\n\n\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n\n  return parts.every(function (part) {\n    if (part.length > 63) {\n      return false;\n    }\n\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    } // disallow full-width chars\n\n\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    } // disallow parts starting or ending with hyphen\n\n\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n\n    return true;\n  });\n}","import assertString from './util/assertString';\n/**\n11.3.  Examples\n\n   The following addresses\n\n             fe80::1234 (on the 1st link of the node)\n             ff02::5678 (on the 5th link of the node)\n             ff08::9abc (on the 10th organization of the node)\n\n   would be represented as follows:\n\n             fe80::1234%1\n             ff02::5678%5\n             ff08::9abc%10\n\n   (Here we assume a natural translation from a zone index to the\n   <zone_id> part, where the Nth zone of any scope is translated into\n   \"N\".)\n\n   If we use interface names as <zone_id>, those addresses could also be\n   represented as follows:\n\n            fe80::1234%ne0\n            ff02::5678%pvc1.3\n            ff08::9abc%interface10\n\n   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n   to the 5th link, and \"interface10\" belongs to the 10th organization.\n * * */\n\nvar IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nvar IPv4AddressFormat = \"(\".concat(IPv4SegmentFormat, \"[.]){3}\").concat(IPv4SegmentFormat);\nvar IPv4AddressRegExp = new RegExp(\"^\".concat(IPv4AddressFormat, \"$\"));\nvar IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nvar IPv6AddressRegExp = new RegExp('^(' + \"(?:\".concat(IPv6SegmentFormat, \":){7}(?:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){6}(?:\").concat(IPv4AddressFormat, \"|:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){5}(?::\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,2}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){4}(?:(:\").concat(IPv6SegmentFormat, \"){0,1}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,3}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){3}(?:(:\").concat(IPv6SegmentFormat, \"){0,2}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,4}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){2}(?:(:\").concat(IPv6SegmentFormat, \"){0,3}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,5}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){1}(?:(:\").concat(IPv6SegmentFormat, \"){0,4}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,6}|:)|\") + \"(?::((?::\".concat(IPv6SegmentFormat, \"){0,5}:\").concat(IPv4AddressFormat, \"|(?::\").concat(IPv6SegmentFormat, \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\nexport default function isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  assertString(str);\n  version = String(version);\n\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  }\n\n  if (version === '4') {\n    if (!IPv4AddressRegExp.test(str)) {\n      return false;\n    }\n\n    var parts = str.split('.').sort(function (a, b) {\n      return a - b;\n    });\n    return parts[3] <= 255;\n  }\n\n  if (version === '6') {\n    return !!IPv6AddressRegExp.test(str);\n  }\n\n  return false;\n}","import assertString from './util/assertString';\nimport merge from './util/merge';\nimport isByteLength from './isByteLength';\nimport isFQDN from './isFQDN';\nimport isIP from './isIP';\nvar default_email_options = {\n  allow_display_name: false,\n  require_display_name: false,\n  allow_utf8_local_part: true,\n  require_tld: true,\n  blacklisted_chars: '',\n  ignore_max_length: false\n};\n/* eslint-disable max-len */\n\n/* eslint-disable no-control-regex */\n\nvar splitNameAddress = /^([^\\x00-\\x1F\\x7F-\\x9F\\cX]+)</i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar gmailUserPart = /^[a-z\\d]+$/;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\nvar defaultMaxEmailLength = 254;\n/* eslint-enable max-len */\n\n/* eslint-enable no-control-regex */\n\n/**\n * Validate display name according to the RFC2822: https://tools.ietf.org/html/rfc2822#appendix-A.1.2\n * @param {String} display_name\n */\n\nfunction validateDisplayName(display_name) {\n  var display_name_without_quotes = display_name.replace(/^\"(.+)\"$/, '$1'); // display name with only spaces is not valid\n\n  if (!display_name_without_quotes.trim()) {\n    return false;\n  } // check whether display name contains illegal character\n\n\n  var contains_illegal = /[\\.\";<>]/.test(display_name_without_quotes);\n\n  if (contains_illegal) {\n    // if contains illegal characters,\n    // must to be enclosed in double-quotes, otherwise it's not a valid display name\n    if (display_name_without_quotes === display_name) {\n      return false;\n    } // the quotes in display name must start with character symbol \\\n\n\n    var all_start_with_back_slash = display_name_without_quotes.split('\"').length === display_name_without_quotes.split('\\\\\"').length;\n\n    if (!all_start_with_back_slash) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default function isEmail(str, options) {\n  assertString(str);\n  options = merge(options, default_email_options);\n\n  if (options.require_display_name || options.allow_display_name) {\n    var display_email = str.match(splitNameAddress);\n\n    if (display_email) {\n      var display_name = display_email[1]; // Remove display name and angle brackets to get email address\n      // Can be done in the regex but will introduce a ReDOS (See  #1597 for more info)\n\n      str = str.replace(display_name, '').replace(/(^<|>$)/g, ''); // sometimes need to trim the last space to get the display name\n      // because there may be a space between display name and email address\n      // eg. myname <address@gmail.com>\n      // the display name is `myname` instead of `myname `, so need to trim the last space\n\n      if (display_name.endsWith(' ')) {\n        display_name = display_name.substr(0, display_name.length - 1);\n      }\n\n      if (!validateDisplayName(display_name)) {\n        return false;\n      }\n    } else if (options.require_display_name) {\n      return false;\n    }\n  }\n\n  if (!options.ignore_max_length && str.length > defaultMaxEmailLength) {\n    return false;\n  }\n\n  var parts = str.split('@');\n  var domain = parts.pop();\n  var user = parts.join('@');\n  var lower_domain = domain.toLowerCase();\n\n  if (options.domain_specific_validation && (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com')) {\n    /*\n      Previously we removed dots for gmail addresses before validating.\n      This was removed because it allows `multiple..dots@gmail.com`\n      to be reported as valid, but it is not.\n      Gmail only normalizes single dots, removing them from here is pointless,\n      should be done in normalizeEmail\n    */\n    user = user.toLowerCase(); // Removing sub-address from username before gmail validation\n\n    var username = user.split('+')[0]; // Dots are not included in gmail length restriction\n\n    if (!isByteLength(username.replace('.', ''), {\n      min: 6,\n      max: 30\n    })) {\n      return false;\n    }\n\n    var _user_parts = username.split('.');\n\n    for (var i = 0; i < _user_parts.length; i++) {\n      if (!gmailUserPart.test(_user_parts[i])) {\n        return false;\n      }\n    }\n  }\n\n  if (options.ignore_max_length === false && (!isByteLength(user, {\n    max: 64\n  }) || !isByteLength(domain, {\n    max: 254\n  }))) {\n    return false;\n  }\n\n  if (!isFQDN(domain, {\n    require_tld: options.require_tld\n  })) {\n    if (!options.allow_ip_domain) {\n      return false;\n    }\n\n    if (!isIP(domain)) {\n      if (!domain.startsWith('[') || !domain.endsWith(']')) {\n        return false;\n      }\n\n      var noBracketdomain = domain.substr(1, domain.length - 2);\n\n      if (noBracketdomain.length === 0 || !isIP(noBracketdomain)) {\n        return false;\n      }\n    }\n  }\n\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\n  }\n\n  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\n  var user_parts = user.split('.');\n\n  for (var _i = 0; _i < user_parts.length; _i++) {\n    if (!pattern.test(user_parts[_i])) {\n      return false;\n    }\n  }\n\n  if (options.blacklisted_chars) {\n    if (user.search(new RegExp(\"[\".concat(options.blacklisted_chars, \"]+\"), 'g')) !== -1) return false;\n  }\n\n  return true;\n}","export default __webpack_public_path__ + \"static/media/logo.e7b12301.png\";","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Spin, Input, notification } from \"antd\";\r\nimport {\r\n  LockOutlined,\r\n  EyeInvisibleOutlined,\r\n  EyeTwoTone,\r\n} from \"@ant-design/icons\";\r\nimport isEmail from 'validator/es/lib/isEmail';\r\n\r\nimport logo from \"./logo.png\";\r\n\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [toggle, setToggle] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const errorNotification = async () => {\r\n    const args = await {\r\n      message: \"Login Error\",\r\n      description: [error],\r\n      duration: 3,\r\n    };\r\n    await notification.open(args);\r\n    setToggle(false);\r\n  };\r\n\r\n  async function signin() {\r\n    try {\r\n      await fetch(`/api/v1/auth/login`, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then(async (data) => {\r\n          console.log(data);\r\n          if (!data.error && data.auth === true) {\r\n            localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n            setToggle(true);\r\n            setTimeout(() => {\r\n              history.push(\"/\");\r\n            }, 1000);\r\n          } else {\r\n            await setError(data.error)\r\n            await errorNotification();\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n        <Spin spinning={toggle}>\r\n          <div class=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n            <img\r\n              class=\"mx-auto h-24 w-auto\"\r\n              src={logo}\r\n              alt=\"logo hasnt loaded properly\"\r\n            />\r\n            <h2 class=\"mt-2 text-center text-3xl font-extrabold text-gray-900\">\r\n              Sign in to your account\r\n            </h2>\r\n          </div>\r\n\r\n          <div class=\"mt-4 sm:mx-auto sm:w-full sm:max-w-md\">\r\n            <div class=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n              <div class=\"space-y-6\">\r\n                <div>\r\n                  <label\r\n                    for=\"email\"\r\n                    class=\"block text-sm font-medium text-gray-700\"\r\n                  >\r\n                    Email address\r\n                  </label>\r\n                  <div class=\"mt-1\">\r\n                    <Input\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      placeholder=\"Email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      autocomplete=\"email\"\r\n                      required\r\n                      className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label\r\n                    for=\"password\"\r\n                    class=\"block text-sm font-medium text-gray-700\"\r\n                  >\r\n                    Password\r\n                  </label>\r\n                  <div class=\"mt-1\">\r\n                    <Input.Password\r\n                      prefix={<LockOutlined />}\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      iconRender={(visible) =>\r\n                        visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n                      }\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      autocomplete=\"current-password\"\r\n                      required\r\n                      className=\"px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <button\r\n                    onClick={async () => {\r\n                      setToggle(true);\r\n                      if(isEmail(email)) {\r\n                        signin()\r\n                      } else {\r\n                        setError('Invalid Email')\r\n                        await setTimeout(() => {\r\n                          errorNotification()\r\n                        }, 1000)\r\n                      }\r\n                    }}\r\n                    className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                  >\r\n                    Sign in\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}