{"version":3,"sources":["pages/History.js"],"names":["Table","useState","tickets","setTickets","a","fetch","method","headers","then","res","json","useEffect","getHistory","className","scope","map","ticket","badge","p","priority","name","client","issue","assignedTo","firstName","lastName","isComplete","to","pathname","id","state","Card","class","_id","History"],"mappings":"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","file":"static/js/18.806e1838.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Table = () => {\r\n  const [tickets, setTickets] = useState([]);\r\n\r\n  async function getHistory() {\r\n    await fetch(`/api/v1/tickets/all`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setTickets(res.tickets);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getHistory();\r\n  }, []);\r\n\r\n  const high = \"bg-red-100 text-red-800\";\r\n  const low = \"bg-blue-100 text-blue-800\";\r\n  const normal = \"bg-green-100 text-green-800\";\r\n\r\n  return (\r\n    <div className=\"max-w-screen-xl mx-auto pb-6 px-4 sm:px-6 lg:pb-16 lg:px-10 -mt-8\">\r\n      <div className=\"flex flex-col\">\r\n        <div className=\" overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n          <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n            <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Name\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Client\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Priority\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Issue\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Engineer\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Status\r\n                    </th>\r\n                    <th scope=\"col\" className=\"relative px-6 py-3\">\r\n                      <span className=\"sr-only\">Edit</span>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tickets\r\n                    ? tickets.map((ticket) => {\r\n                        let p = ticket.priority;\r\n                        let badge;\r\n\r\n                        if (p === \"Low\") {\r\n                          badge = low;\r\n                        }\r\n                        if (p === \"normal\") {\r\n                          badge = normal;\r\n                        }\r\n                        if (p === \"High\") {\r\n                          badge = high;\r\n                        }\r\n\r\n                        return (\r\n                          <tr className=\"bg-white\">\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                              {ticket.name || \"\"}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                              {ticket.client.name || \"\"}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                              <span\r\n                                className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${badge}`}\r\n                              >\r\n                                {ticket.priority || \"\"}\r\n                              </span>\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                              {ticket.issue || \"\"}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                              {ticket.assignedTo\r\n                                ? ticket.assignedTo.firstName +\r\n                                  \" \" +\r\n                                  ticket.assignedTo.lastName\r\n                                : \"not assigned\"}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                              {ticket.isComplete ? \"Completed\" : \"Issued\"}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                              <Link\r\n                                to={{\r\n                                  pathname: `tickets/${ticket.id}`,\r\n                                  state: ticket,\r\n                                }}\r\n                                className=\"text-indigo-600 hover:text-indigo-900\"\r\n                              >\r\n                                view\r\n                              </Link>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })\r\n                    : \"\"}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Card = () => {\r\n  const [tickets, setTickets] = useState([]);\r\n\r\n  async function getHistory() {\r\n    await fetch(`/api/v1/tickets/all`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setTickets(res.tickets);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getHistory();\r\n  }, []);\r\n\r\n  const high = \"bg-red-100 text-red-800\";\r\n  const low = \"bg-blue-100 text-blue-800\";\r\n  const normal = \"bg-green-100 text-green-800\";\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto md:-mx-6 lg:-mx-8 mt-10\">\r\n      <div className=\"py-2 align-middle inline-block min-w-full md:px-6 lg:px-8\">\r\n        <div className=\"overflow-hidden md:rounded-lg\">\r\n          {tickets.map((ticket) => {\r\n            let p = ticket.priority;\r\n            let badge;\r\n\r\n            if (p === \"Low\") {\r\n              badge = low;\r\n            }\r\n            if (p === \"normal\") {\r\n              badge = normal;\r\n            }\r\n            if (p === \"High\") {\r\n              badge = high;\r\n            }\r\n\r\n            return (\r\n              <div className=\"flex justify-start\">\r\n                <div class=\"w-full mb-2 border\">\r\n                  <div class=\"px-4 py-4\">\r\n                    <div>\r\n                      <h1 class=\"font-semibold leading-tight text-2xl text-gray-800 hover:text-gray-800 ml-1\">\r\n                        {ticket.name}\r\n                      </h1>\r\n                      <p className=\" px-2\">Client: {ticket.client.name}</p>\r\n                    </div>\r\n                    <span\r\n                      className={`inline-flex items-center px-2.5 py-0.5 m-1 rounded-full text-xs font-medium ${badge}`}\r\n                    >\r\n                      {ticket.priority}\r\n                    </span>\r\n                    <p class=\"text-gray-900 m-2\">{ticket.issue}</p>\r\n                    <div class=\"text-gray-700 text-sm font-bold p-2 m-2\">\r\n                      <Link\r\n                        to={{\r\n                          pathname: `tickets/${ticket._id}`,\r\n                          state: ticket,\r\n                        }}\r\n                        class=\"float-right\"\r\n                      >\r\n                        View Full Ticket\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst History = () => {\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div className=\"hidden sm:block\">\r\n        <Table />\r\n      </div>\r\n      <div className=\"sm:hidden\">\r\n        <Card />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n"],"sourceRoot":""}