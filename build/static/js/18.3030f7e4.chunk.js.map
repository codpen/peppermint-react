{"version":3,"sources":["assets/server_down.svg","../node_modules/react-query/es/core/queryObserver.js","../node_modules/react-query/es/react/QueryErrorResetBoundary.js","../node_modules/react-query/es/react/useBaseQuery.js","../node_modules/react-query/es/react/useQuery.js","pages/History.js"],"names":["QueryObserver","_Subscribable","client","options","_this","call","this","trackedProps","previousSelectError","bindMethods","setOptions","_inheritsLoose","_proto","prototype","remove","bind","refetch","onSubscribe","listeners","length","currentQuery","addObserver","shouldFetchOnMount","executeFetch","updateTimers","onUnsubscribe","destroy","shouldFetchOnReconnect","query","enabled","refetchOnReconnect","isStale","shouldFetchOnWindowFocus","refetchOnWindowFocus","clearTimers","removeObserver","notifyOptions","prevOptions","prevQuery","defaultQueryObserverOptions","Error","queryKey","updateQuery","mounted","hasListeners","shouldFetchOptionally","updateResult","staleTime","updateStaleTimeout","refetchInterval","updateRefetchInterval","getOptimisticResult","defaultedOptions","getQueryCache","build","createResult","getCurrentResult","currentResult","trackResult","result","_this2","trackedResult","Object","keys","forEach","key","defineProperty","configurable","enumerable","get","typedKey","includes","push","getNextResult","_this3","Promise","resolve","reject","unsubscribe","subscribe","isFetching","isError","throwOnError","error","getCurrentQuery","fetch","fetchOptimistic","_this4","then","fetchOptions","_this5","promise","catch","noop","_this6","clearStaleTimeout","isServer","isValidTimeout","timeout","timeUntilStale","dataUpdatedAt","staleTimeoutId","setTimeout","_this7","clearRefetchInterval","refetchIntervalId","setInterval","refetchIntervalInBackground","focusManager","isFocused","clearTimeout","undefined","clearInterval","data","prevResult","prevResultState","currentResultState","prevResultOptions","currentResultOptions","queryChange","queryInitialState","state","currentQueryInitialState","prevQueryResult","previousQueryResult","errorUpdatedAt","status","isPreviousData","isPlaceholderData","optimisticResults","fetchOnMount","fetchOptionally","keepPreviousData","dataUpdateCount","isSuccess","select","structuralSharing","replaceEqualDeep","selectError","getLogger","Date","now","placeholderData","isLoading","isIdle","failureCount","fetchFailureCount","isFetched","errorUpdateCount","isFetchedAfterMount","isLoadingError","isRefetchError","shouldNotifyListeners","_this$options","notifyOnChangeProps","notifyOnChangePropsExclusions","includedProps","some","changed","isIncluded","x","isExcluded","shallowEqualObjects","defaultNotifyOptions","cache","notify","_extends","onQueryUpdate","action","type","onSuccess","isCancelledError","onError","_this8","notifyManager","batch","onSettled","listener","Subscribable","retryOnMount","shouldLoadOnMount","refetchOnMount","shouldRefetchOnMount","isStaleByTime","createValue","_isReset","clearReset","reset","isReset","QueryErrorResetBoundaryContext","React","createContext","useBaseQuery","Observer","mountedRef","useRef","forceUpdate","useState","queryClient","useQueryClient","errorResetBoundary","useContext","batchCalls","suspense","useErrorBoundary","observer","useEffect","current","_ref","useQuery","arg1","arg2","arg3","parseQueryArgs","Table","props","className","scope","tickets","map","ticket","badge","p","priority","id","name","issue","assignedTo","firstName","lastName","isComplete","to","pathname","Card","setTickets","a","method","headers","res","json","getHistory","_id","fetchAllTickets","History","src","server","alt"],"mappings":"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","file":"static/js/18.3030f7e4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/server_down.532ea75d.svg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { isServer, isValidTimeout, noop, replaceEqualDeep, shallowEqualObjects, timeUntilStale } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { focusManager } from './focusManager';\nimport { Subscribable } from './subscribable';\nimport { getLogger } from './logger';\nimport { isCancelledError } from './retryer';\nexport var QueryObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueryObserver, _Subscribable);\n\n  function QueryObserver(client, options) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.options = options;\n    _this.trackedProps = [];\n    _this.previousSelectError = null;\n\n    _this.bindMethods();\n\n    _this.setOptions(options);\n\n    return _this;\n  }\n\n  var _proto = QueryObserver.prototype;\n\n  _proto.bindMethods = function bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  };\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.shouldFetchOnReconnect = function shouldFetchOnReconnect() {\n    return _shouldFetchOnReconnect(this.currentQuery, this.options);\n  };\n\n  _proto.shouldFetchOnWindowFocus = function shouldFetchOnWindowFocus() {\n    return _shouldFetchOnWindowFocus(this.currentQuery, this.options);\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.clearTimers();\n    this.currentQuery.removeObserver(this);\n  };\n\n  _proto.setOptions = function setOptions(options, notifyOptions) {\n    var prevOptions = this.options;\n    var prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryObserverOptions(options);\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    var mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    } // Update refetch interval if needed\n\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.refetchInterval !== prevOptions.refetchInterval)) {\n      this.updateRefetchInterval();\n    }\n  };\n\n  _proto.getOptimisticResult = function getOptimisticResult(options) {\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return this.createResult(query, defaultedOptions);\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.currentResult;\n  };\n\n  _proto.trackResult = function trackResult(result) {\n    var _this2 = this;\n\n    var trackedResult = {};\n    Object.keys(result).forEach(function (key) {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: function get() {\n          var typedKey = key;\n\n          if (!_this2.trackedProps.includes(typedKey)) {\n            _this2.trackedProps.push(typedKey);\n          }\n\n          return result[typedKey];\n        }\n      });\n    });\n    return trackedResult;\n  };\n\n  _proto.getNextResult = function getNextResult(options) {\n    var _this3 = this;\n\n    return new Promise(function (resolve, reject) {\n      var unsubscribe = _this3.subscribe(function (result) {\n        if (!result.isFetching) {\n          unsubscribe();\n\n          if (result.isError && (options == null ? void 0 : options.throwOnError)) {\n            reject(result.error);\n          } else {\n            resolve(result);\n          }\n        }\n      });\n    });\n  };\n\n  _proto.getCurrentQuery = function getCurrentQuery() {\n    return this.currentQuery;\n  };\n\n  _proto.remove = function remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  };\n\n  _proto.refetch = function refetch(options) {\n    return this.fetch(options);\n  };\n\n  _proto.fetchOptimistic = function fetchOptimistic(options) {\n    var _this4 = this;\n\n    var defaultedOptions = this.client.defaultQueryObserverOptions(options);\n    var query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    return query.fetch().then(function () {\n      return _this4.createResult(query, defaultedOptions);\n    });\n  };\n\n  _proto.fetch = function fetch(fetchOptions) {\n    var _this5 = this;\n\n    return this.executeFetch(fetchOptions).then(function () {\n      _this5.updateResult();\n\n      return _this5.currentResult;\n    });\n  };\n\n  _proto.executeFetch = function executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    var promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions == null ? void 0 : fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  };\n\n  _proto.updateStaleTimeout = function updateStaleTimeout() {\n    var _this6 = this;\n\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    var time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    var timeout = time + 1;\n    this.staleTimeoutId = setTimeout(function () {\n      if (!_this6.currentResult.isStale) {\n        _this6.updateResult();\n      }\n    }, timeout);\n  };\n\n  _proto.updateRefetchInterval = function updateRefetchInterval() {\n    var _this7 = this;\n\n    this.clearRefetchInterval();\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.options.refetchInterval)) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(function () {\n      if (_this7.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        _this7.executeFetch();\n      }\n    }, this.options.refetchInterval);\n  };\n\n  _proto.updateTimers = function updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval();\n  };\n\n  _proto.clearTimers = function clearTimers() {\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n  };\n\n  _proto.clearStaleTimeout = function clearStaleTimeout() {\n    clearTimeout(this.staleTimeoutId);\n    this.staleTimeoutId = undefined;\n  };\n\n  _proto.clearRefetchInterval = function clearRefetchInterval() {\n    clearInterval(this.refetchIntervalId);\n    this.refetchIntervalId = undefined;\n  };\n\n  _proto.createResult = function createResult(query, options) {\n    var prevQuery = this.currentQuery;\n    var prevOptions = this.options;\n    var prevResult = this.currentResult;\n    var prevResultState = this.currentResultState;\n    var prevResultOptions = this.currentResultOptions;\n    var queryChange = query !== prevQuery;\n    var queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    var prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    var state = query.state;\n    var dataUpdatedAt = state.dataUpdatedAt,\n        error = state.error,\n        errorUpdatedAt = state.errorUpdatedAt,\n        isFetching = state.isFetching,\n        status = state.status;\n    var isPreviousData = false;\n    var isPlaceholderData = false;\n    var data; // Optimistically set result in fetching state if needed\n\n    if (options.optimisticResults) {\n      var mounted = this.hasListeners();\n      var fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      var fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        isFetching = true;\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdateCount && (prevQueryResult == null ? void 0 : prevQueryResult.isSuccess) && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n        // Memoize select result\n        if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === (prevResultOptions == null ? void 0 : prevResultOptions.select) && !this.previousSelectError) {\n          data = prevResult.data;\n        } else {\n          try {\n            data = options.select(state.data);\n\n            if (options.structuralSharing !== false) {\n              data = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, data);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      } // Use query data\n      else {\n          data = state.data;\n        } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      var placeholderData; // Memoize placeholder data\n\n      if ((prevResult == null ? void 0 : prevResult.isPlaceholderData) && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n\n            if (options.structuralSharing !== false) {\n              placeholderData = replaceEqualDeep(prevResult == null ? void 0 : prevResult.data, placeholderData);\n            }\n\n            this.previousSelectError = null;\n          } catch (selectError) {\n            getLogger().error(selectError);\n            error = selectError;\n            this.previousSelectError = selectError;\n            errorUpdatedAt = Date.now();\n            status = 'error';\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = placeholderData;\n        isPlaceholderData = true;\n      }\n    }\n\n    var result = {\n      status: status,\n      isLoading: status === 'loading',\n      isSuccess: status === 'success',\n      isError: status === 'error',\n      isIdle: status === 'idle',\n      data: data,\n      dataUpdatedAt: dataUpdatedAt,\n      error: error,\n      errorUpdatedAt: errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching: isFetching,\n      isLoadingError: status === 'error' && state.dataUpdatedAt === 0,\n      isPlaceholderData: isPlaceholderData,\n      isPreviousData: isPreviousData,\n      isRefetchError: status === 'error' && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  };\n\n  _proto.shouldNotifyListeners = function shouldNotifyListeners(result, prevResult) {\n    if (!prevResult) {\n      return true;\n    }\n\n    if (result === prevResult) {\n      return false;\n    }\n\n    var _this$options = this.options,\n        notifyOnChangeProps = _this$options.notifyOnChangeProps,\n        notifyOnChangePropsExclusions = _this$options.notifyOnChangePropsExclusions;\n\n    if (!notifyOnChangeProps && !notifyOnChangePropsExclusions) {\n      return true;\n    }\n\n    if (notifyOnChangeProps === 'tracked' && !this.trackedProps.length) {\n      return true;\n    }\n\n    var includedProps = notifyOnChangeProps === 'tracked' ? this.trackedProps : notifyOnChangeProps;\n    return Object.keys(result).some(function (key) {\n      var typedKey = key;\n      var changed = result[typedKey] !== prevResult[typedKey];\n      var isIncluded = includedProps == null ? void 0 : includedProps.some(function (x) {\n        return x === key;\n      });\n      var isExcluded = notifyOnChangePropsExclusions == null ? void 0 : notifyOnChangePropsExclusions.some(function (x) {\n        return x === key;\n      });\n      return changed && !isExcluded && (!includedProps || isIncluded);\n    });\n  };\n\n  _proto.updateResult = function updateResult(notifyOptions) {\n    var prevResult = this.currentResult;\n    this.currentResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify if something has changed\n\n    if (shallowEqualObjects(this.currentResult, prevResult)) {\n      return;\n    } // Determine which callbacks to trigger\n\n\n    var defaultNotifyOptions = {\n      cache: true\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && this.shouldNotifyListeners(this.currentResult, prevResult)) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify(_extends({}, defaultNotifyOptions, notifyOptions));\n  };\n\n  _proto.updateQuery = function updateQuery() {\n    var query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    var prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  };\n\n  _proto.onQueryUpdate = function onQueryUpdate(action) {\n    var notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  };\n\n  _proto.notify = function notify(notifyOptions) {\n    var _this8 = this;\n\n    notifyManager.batch(function () {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        _this8.options.onSuccess == null ? void 0 : _this8.options.onSuccess(_this8.currentResult.data);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(_this8.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        _this8.options.onError == null ? void 0 : _this8.options.onError(_this8.currentResult.error);\n        _this8.options.onSettled == null ? void 0 : _this8.options.onSettled(undefined, _this8.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        _this8.listeners.forEach(function (listener) {\n          listener(_this8.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        _this8.client.getQueryCache().notify({\n          query: _this8.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  };\n\n  return QueryObserver;\n}(Subscribable);\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldRefetchOnMount(query, options) {\n  return options.enabled !== false && query.state.dataUpdatedAt > 0 && (options.refetchOnMount === 'always' || options.refetchOnMount !== false && isStale(query, options));\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || shouldRefetchOnMount(query, options);\n}\n\nfunction _shouldFetchOnReconnect(query, options) {\n  return options.enabled !== false && (options.refetchOnReconnect === 'always' || options.refetchOnReconnect !== false && isStale(query, options));\n}\n\nfunction _shouldFetchOnWindowFocus(query, options) {\n  return options.enabled !== false && (options.refetchOnWindowFocus === 'always' || options.refetchOnWindowFocus !== false && isStale(query, options));\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}","import React from 'react'; // CONTEXT\n\nfunction createValue() {\n  var _isReset = false;\n  return {\n    clearReset: function clearReset() {\n      _isReset = false;\n    },\n    reset: function reset() {\n      _isReset = true;\n    },\n    isReset: function isReset() {\n      return _isReset;\n    }\n  };\n}\n\nvar QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nexport var useQueryErrorResetBoundary = function useQueryErrorResetBoundary() {\n  return React.useContext(QueryErrorResetBoundaryContext);\n}; // COMPONENT\n\nexport var QueryErrorResetBoundary = function QueryErrorResetBoundary(_ref) {\n  var children = _ref.children;\n  var value = React.useMemo(function () {\n    return createValue();\n  }, []);\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};","import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useBaseQuery(options, Observer) {\n  var mountedRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      forceUpdate = _React$useState[1];\n\n  var queryClient = useQueryClient();\n  var errorResetBoundary = useQueryErrorResetBoundary();\n  var defaultedOptions = queryClient.defaultQueryObserverOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions.optimisticResults = true; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n\n  var _React$useState2 = React.useState(function () {\n    return new Observer(queryClient, defaultedOptions);\n  }),\n      observer = _React$useState2[0];\n\n  var result = observer.getOptimisticResult(defaultedOptions);\n  React.useEffect(function () {\n    mountedRef.current = true;\n    errorResetBoundary.clearReset();\n    var unsubscribe = observer.subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        forceUpdate(function (x) {\n          return x + 1;\n        });\n      }\n    })); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [errorResetBoundary, observer]);\n  React.useEffect(function () {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (defaultedOptions.suspense && result.isLoading) {\n    throw observer.fetchOptimistic(defaultedOptions).then(function (_ref) {\n      var data = _ref.data;\n      defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n    }).catch(function (error) {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n      defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n    });\n  } // Handle error boundary\n\n\n  if ((defaultedOptions.suspense || defaultedOptions.useErrorBoundary) && result.isError && !result.isFetching) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  if (defaultedOptions.notifyOnChangeProps === 'tracked') {\n    result = observer.trackResult(result);\n  }\n\n  return result;\n}","import { QueryObserver } from '../core';\nimport { parseQueryArgs } from '../core/utils';\nimport { useBaseQuery } from './useBaseQuery'; // HOOK\n\nexport function useQuery(arg1, arg2, arg3) {\n  var parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { Spin } from \"antd\";\n\nimport server from '../assets/server_down.svg'\n\nconst Table = (props) => {\n  const high = \"bg-red-100 text-red-800\";\n  const low = \"bg-blue-100 text-blue-800\";\n  const normal = \"bg-green-100 text-green-800\";\n\n  return (\n    <div className=\"mx-auto pb-6 px-4 sm:px-6 lg:pb-16 lg:px-10\">\n      {/* <div className=\"flex flex-row\">\n        <div className=\"w-44 mr-4\">\n          <input\n            onChange={(e) => props.setId(e.target.value)}\n            type=\"number\"\n            name=\"ticketid\"\n            id=\"ticketid\"\n            className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n            placeholder=\"Search by Ticket ID\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          onClick={() => {\n            props.filterTickets();\n          }}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-4 w-4\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n            />\n          </svg>\n        </button>\n        <button\n          type=\"button\"\n          className=\"ml-3\"\n          onClick={() => props.fetchAllTickets()}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-4 w-4\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n            />\n          </svg>\n        </button>\n      </div> */}\n      <div className=\"flex flex-col\">\n        <div className=\" overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th\n                      scope=\"col\"\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                    >\n                      Id\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                    >\n                      Name\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                    >\n                      Client\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                    >\n                      Priority\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                    >\n                      Issue\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                    >\n                      Engineer\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                    >\n                      Status\n                    </th>\n                    <th scope=\"col\" className=\"relative px-6 py-3\">\n                      <span className=\"sr-only\">Edit</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {props.tickets.map((ticket) => {\n                    let p = ticket.priority;\n                    let badge;\n\n                    if (p === \"Low\") {\n                      badge = low;\n                    }\n                    if (p === \"Normal\") {\n                      badge = normal;\n                    }\n                    if (p === \"High\") {\n                      badge = high;\n                    }\n\n                    return (\n                      <tr className=\"bg-white\" key={ticket.id}>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                          {ticket.id}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                          {ticket.name}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          {ticket.client.name}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          <span\n                            className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${badge}`}\n                          >\n                            {ticket.priority}\n                          </span>\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          {ticket.issue}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          {ticket.assignedTo\n                            ? ticket.assignedTo.firstName +\n                            \" \" +\n                            ticket.assignedTo.lastName\n                            : \"not assigned\"}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                          {ticket.isComplete ? \"Completed\" : \"Issued\"}\n                        </td>\n                        <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                          <Link\n                            to={{\n                              pathname: `tickets/${ticket.id}`,\n                              state: ticket,\n                            }}\n                            className=\"text-indigo-600 hover:text-indigo-900\"\n                          >\n                            view\n                          </Link>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Card = () => {\n  const [tickets, setTickets] = useState([]);\n\n  async function getHistory() {\n    await fetch(`/api/v1/tickets/all`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setTickets(res.tickets);\n      });\n  }\n\n  useEffect(() => {\n    getHistory();\n  }, []);\n\n  const high = \"bg-red-100 text-red-800\";\n  const low = \"bg-blue-100 text-blue-800\";\n  const normal = \"bg-green-100 text-green-800\";\n\n  return (\n    <div className=\"overflow-x-auto md:-mx-6 lg:-mx-8 mt-10\">\n      <div className=\"py-2 align-middle inline-block min-w-full md:px-6 lg:px-8\">\n        <div className=\"overflow-hidden md:rounded-lg\">\n          {tickets.map((ticket) => {\n            let p = ticket.priority;\n            let badge;\n\n            if (p === \"Low\") {\n              badge = low;\n            }\n            if (p === \"normal\") {\n              badge = normal;\n            }\n            if (p === \"High\") {\n              badge = high;\n            }\n\n            return (\n              <div className=\"flex justify-start\" key={ticket.id}>\n                <div className=\"w-full mb-2 border\">\n                  <div className=\"px-4 py-4\">\n                    <div>\n                      <h1 className=\"font-semibold leading-tight text-2xl text-gray-800 hover:text-gray-800 ml-1\">\n                        {ticket.name}\n                      </h1>\n                      <p className=\" px-2\">Client: {ticket.client.name}</p>\n                    </div>\n                    <span\n                      className={`inline-flex items-center px-2.5 py-0.5 m-1 rounded-full text-xs font-medium ${badge}`}\n                    >\n                      {ticket.priority}\n                    </span>\n                    <p className=\"text-gray-900 m-2\">{ticket.issue}</p>\n                    <div className=\"text-gray-700 text-sm font-bold p-2 m-2\">\n                      <Link\n                        to={{\n                          pathname: `tickets/${ticket._id}`,\n                          state: ticket,\n                        }}\n                        className=\"float-right\"\n                      >\n                        View Full Ticket\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst fetchAllTickets = async () => {\n  const res = await fetch(\"/api/v1/tickets/all\");\n  return res.json();\n};\n\nconst History = () => {\n  const { data, status } = useQuery(\"fetchAllTickets\", fetchAllTickets);\n\n  return (\n    <div className=\" mx-auto pb-6 px-4 sm:px-6 lg:pb-16 lg:px-10 flex flex-col\">\n      <div className=\"sm:px-6 md:px-8 ml-2\">\n        <div className=\"flex flex-row\">\n          <h1 className=\"text-2xl font-semibold text-gray-900\">History</h1>\n        </div>\n      </div>\n      <div className=\"flex flex-col\">\n        {status === \"loading\" && (\n          <div className=\"min-h-screen flex flex-col justify-center items-center py-12 sm:px-6 lg:px-8\">\n            <h2> Loading data ... </h2>\n            <Spin />\n          </div>\n        )}\n\n        {status === \"error\" && (\n          <div className=\"min-h-screen flex flex-col justify-center items-center py-12 sm:px-6 lg:px-8\">\n            <h2 className=\"text-2xl font-bold\"> Error fetching data ... </h2>\n            <img src={server} className=\"h-96 w-96\" alt=\"error\" />\n          </div>\n        )}\n\n        {status === \"success\" && (\n          <div>\n            {data.tickets.length === 0 ? (\n              <div className=\"min-h-screen flex flex-col justify-center items-center py-12 sm:px-6 lg:px-8\">\n                <p>No tickets have been created</p>\n              </div>\n            ) : (\n              <div key={data.tickets.id}>\n                <div className=\"hidden sm:block\">\n                  <Table tickets={data.tickets} />\n                </div>\n                <div className=\"sm:hidden\">\n                  <Card tickets={data.tickets} />\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default History;\n"],"sourceRoot":""}