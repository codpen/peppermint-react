[{"D:\\Git\\winter\\client\\src\\index.js":"1","D:\\Git\\winter\\client\\src\\Context\\GlobalState.js":"2","D:\\Git\\winter\\client\\src\\App.js":"3","D:\\Git\\winter\\client\\src\\utils.js":"4","D:\\Git\\winter\\client\\src\\Context\\AppReducer.js":"5","D:\\Git\\winter\\client\\src\\pages\\Monitor.js":"6","D:\\Git\\winter\\client\\src\\pages\\Reg.js":"7","D:\\Git\\winter\\client\\src\\pages\\Ticket.js":"8","D:\\Git\\winter\\client\\src\\pages\\Home.js":"9","D:\\Git\\winter\\client\\src\\pages\\Login.js":"10","D:\\Git\\winter\\client\\src\\component\\Navigation.js":"11","D:\\Git\\winter\\client\\src\\component\\admin\\SideNav.js":"12","D:\\Git\\winter\\client\\src\\pages\\admin\\Dash.js":"13","D:\\Git\\winter\\client\\src\\pages\\admin\\Analytics.js":"14","D:\\Git\\winter\\client\\src\\component\\OpenTicket.js":"15","D:\\Git\\winter\\client\\src\\component\\UnissuedTicket.js":"16","D:\\Git\\winter\\client\\src\\component\\CreateTodo.js":"17","D:\\Git\\winter\\client\\src\\component\\ListTodo.js":"18","D:\\Git\\winter\\client\\src\\component\\TicketStats.js":"19","D:\\Git\\winter\\client\\src\\component\\ListNote.js":"20","D:\\Git\\winter\\client\\src\\component\\Setings.js":"21","D:\\Git\\winter\\client\\src\\component\\admin\\CreateUser.js":"22","D:\\Git\\winter\\client\\src\\component\\NewTicket.js":"23"},{"size":614,"mtime":1607724298113,"results":"24","hashOfConfig":"25"},{"size":6183,"mtime":1607693850678,"results":"26","hashOfConfig":"25"},{"size":1775,"mtime":1607735910390,"results":"27","hashOfConfig":"25"},{"size":48,"mtime":1607284653162,"results":"28","hashOfConfig":"25"},{"size":1288,"mtime":1607554855806,"results":"29","hashOfConfig":"25"},{"size":1102,"mtime":1606939518254,"results":"30","hashOfConfig":"25"},{"size":2694,"mtime":1606939727522,"results":"31","hashOfConfig":"25"},{"size":797,"mtime":1607710175551,"results":"32","hashOfConfig":"25"},{"size":3940,"mtime":1607718773010,"results":"33","hashOfConfig":"25"},{"size":2470,"mtime":1607710175551,"results":"34","hashOfConfig":"25"},{"size":5436,"mtime":1607710175545,"results":"35","hashOfConfig":"25"},{"size":1323,"mtime":1607710175549,"results":"36","hashOfConfig":"25"},{"size":1348,"mtime":1607718985599,"results":"37","hashOfConfig":"25"},{"size":167,"mtime":1607710175552,"results":"38","hashOfConfig":"25"},{"size":1865,"mtime":1607710175546,"results":"39","hashOfConfig":"25"},{"size":2173,"mtime":1607710175548,"results":"40","hashOfConfig":"25"},{"size":794,"mtime":1607710175543,"results":"41","hashOfConfig":"25"},{"size":1967,"mtime":1607710175544,"results":"42","hashOfConfig":"25"},{"size":2489,"mtime":1607710175547,"results":"43","hashOfConfig":"25"},{"size":2918,"mtime":1607710175543,"results":"44","hashOfConfig":"25"},{"size":431,"mtime":1607710175547,"results":"45","hashOfConfig":"25"},{"size":3370,"mtime":1607710175548,"results":"46","hashOfConfig":"25"},{"size":3277,"mtime":1607710175545,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1t8oi2s",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\Git\\winter\\client\\src\\index.js",[],["103","104"],"D:\\Git\\winter\\client\\src\\Context\\GlobalState.js",[],"D:\\Git\\winter\\client\\src\\App.js",["105","106","107"],"D:\\Git\\winter\\client\\src\\utils.js",[],"D:\\Git\\winter\\client\\src\\Context\\AppReducer.js",[],"D:\\Git\\winter\\client\\src\\pages\\Monitor.js",[],"D:\\Git\\winter\\client\\src\\pages\\Reg.js",[],"D:\\Git\\winter\\client\\src\\pages\\Ticket.js",["108"],"import React, { useEffect } from \"react\";\r\n//import { Grid, Col, Table, Modal, Button, Nav } from \"rsuite\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import { baseUrl } from \"../utils\";\r\n\r\nimport OpenTickets from \"../component/OpenTicket\";\r\nimport UnissuedTickets from \"../component/UnissuedTicket\";\r\n\r\nconst Ticket = () => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const call = async () => {\r\n      const res = localStorage.getItem(\"jwt\");\r\n      console.log(res);\r\n      if (!res) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        return console.log(\"logged in\");\r\n      }\r\n    };\r\n    call();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ margin: 25 }}>\r\n      <OpenTickets />\r\n      <UnissuedTickets />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ticket;\r\n","D:\\Git\\winter\\client\\src\\pages\\Home.js",["109"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Content,\r\n  Divider,\r\n  Button,\r\n  Icon,\r\n  Input,\r\n} from \"rsuite\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../component/Navigation\";\r\nimport CreateTodo from \"../component/CreateTodo\";\r\nimport ListTodo from \"../component/ListTodo\";\r\nimport TicketStats from \"../component/TicketStats\";\r\nimport ListNote from \"../component/ListNote\";\r\n\r\n// import { baseUrl } from \"../utils\";\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\n\r\nconst Todo = () => {\r\n  return (\r\n    <div className=\"Todo-Container\">\r\n      <h3>Todo List</h3>\r\n      <Divider />\r\n      <CreateTodo />\r\n      <ListTodo />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Notes = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const { saveNote } = useContext(GlobalContext);\r\n\r\n  const open = () => setModalIsOpen(true);\r\n  const close = () => setModalIsOpen(false);\r\n\r\n  return (\r\n    <div className=\"Notes-Container\">\r\n      <h3>\r\n        Notes\r\n        <Button onClick={open} style={{ float: \"right\" }}>\r\n          <Icon icon=\"plus\" />\r\n          <Popup modal open={modalIsOpen} nested={true}>\r\n            <div className=\"modal\">\r\n              <Button className=\"close\" onClick={close}>\r\n                &times;\r\n              </Button>\r\n              <div className=\"header\">\r\n                {\" \"}\r\n                <Input\r\n                  placeholder=\"Enter Note title here...\"\r\n                  onChange={setTitle}\r\n                />\r\n              </div>\r\n              <div className=\"content\">\r\n                <Input\r\n                  placeholder=\"Enter Note here...\"\r\n                  rows={10}\r\n                  componentClass=\"textarea\"\r\n                  onChange={setText}\r\n                />\r\n              </div>\r\n              <div className=\"actions\">\r\n                <Button\r\n                  style={{ marginRight: 20 }}\r\n                  className=\"button\"\r\n                  onClick={() => {\r\n                    console.log(\"Data sent\");\r\n                    saveNote(text, title);\r\n                    close();\r\n                  }}\r\n                >\r\n                  Save Note\r\n                </Button>\r\n                <Button\r\n                  className=\"button\"\r\n                  onClick={() => {\r\n                    console.log(\"modal closed \");\r\n                    close();\r\n                  }}\r\n                >\r\n                  Close\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Popup>\r\n        </Button>\r\n      </h3>\r\n      <Divider />\r\n      <ListNote />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Issues = () => {\r\n  return (\r\n    <div className=\"Right-Container\">\r\n      <TicketStats />\r\n      <Divider />\r\n      <CompanyNews />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CompanyNews = () => {\r\n  return (\r\n    <div className=\"News-Container\">\r\n      <h4>Latest News</h4>\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Home = () => {\r\n  // const [data, setData] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const call = async () => {\r\n      const res = localStorage.getItem(\"jwt\");\r\n      console.log(res);\r\n      if (!res) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        return console.log(\"logged in\");\r\n      }\r\n    };\r\n    call();\r\n  }, []);\r\n\r\n  // console.log(data)\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Header>\r\n          <Navigation />\r\n        </Header>\r\n\r\n        <Container>\r\n          <Content>\r\n            <Todo />\r\n          </Content>\r\n        </Container>\r\n\r\n        <Container>\r\n          <Notes />\r\n        </Container>\r\n\r\n        <Container>\r\n          <Issues />\r\n        </Container>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\Git\\winter\\client\\src\\pages\\Login.js",["110"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  EyeInvisibleOutlined,\r\n  EyeTwoTone,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\n\r\n// import { baseUrl } from '../utils'\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const { signin } = useContext(GlobalContext);\r\n\r\n  const onSubmit = async () => {\r\n    signin(email, password);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n      >\r\n        <h1>Member Login</h1>\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            style={{ width: 300 }}\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            style={{ width: 300 }}\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            iconRender={(visible) =>\r\n              visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n            }\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <a className=\"login-form-forgot\" href=\"\">\r\n            Forgot password\r\n          </a>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n            onClick={() => {\r\n              onSubmit();\r\n              setTimeout(() => history.push(\"/\"), 4000);\r\n            }}\r\n          >\r\n            Log in\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Git\\winter\\client\\src\\component\\Navigation.js",["111"],"import React, { useEffect, useState } from \"react\";\r\nimport { Navbar, Nav, Icon, Tooltip, Whisper, Modal } from \"rsuite\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Settings from \"./Setings\";\r\nimport NewTicket from \"./NewTicket\";\r\n\r\nconst Navigation = () => {\r\n  const history = useHistory();\r\n\r\n  const tooltip = <Tooltip>Create a new Ticket here</Tooltip>;\r\n\r\n  const [ticketmodalIsOpen, setTicketIsOpen] = useState(false);\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [checkAdmin, setCheckAdmin] = useState(false);\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  function openTicketModal() {\r\n    setTicketIsOpen(true);\r\n  }\r\n\r\n  function closeTicketModal() {\r\n    setTicketIsOpen(false);\r\n  }\r\n\r\n  function isAdmin() {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user && user.role === \"admin\") {\r\n      setCheckAdmin(true);\r\n    } else {\r\n      if (!user) {\r\n        history.push(\"/Login\");\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    isAdmin();\r\n  }, []);\r\n\r\n  const Render = () => {\r\n    if (checkAdmin) {\r\n      return (\r\n        <div>\r\n          <Navbar>\r\n            <Navbar.Header>\r\n              <p href=\"#\" className=\"navbar-brand logo\">\r\n                Project Winter\r\n              </p>\r\n            </Navbar.Header>\r\n            <Navbar.Body>\r\n              <Nav>\r\n                <Nav.Item\r\n                  icon={<Icon icon=\"home\" />}\r\n                  onClick={() => history.push(\"/\")}\r\n                >\r\n                  Home\r\n                </Nav.Item>\r\n\r\n                <Nav.Item onClick={() => history.push(\"/tickets\")}>\r\n                  Tickets\r\n                </Nav.Item>\r\n\r\n                <Nav.Item\r\n                  onClick={() => history.push(\"/timesheet\")}\r\n                  disabled={true}\r\n                >\r\n                  TimeSheet\r\n                </Nav.Item>\r\n\r\n                <Nav.Item\r\n                  onClick={() => history.push(\"/admin/dashboard\")}\r\n                  disabled={false}\r\n                >\r\n                  Admin\r\n                </Nav.Item>\r\n              </Nav>\r\n\r\n              <Nav pullRight>\r\n                <Whisper placement=\"bottom\" trigger=\"hover\" speaker={tooltip}>\r\n                  <Nav.Item\r\n                    icon={<Icon icon=\"plus\" />}\r\n                    onClick={openTicketModal}\r\n                  >\r\n                    <Modal\r\n                      show={ticketmodalIsOpen}\r\n                      onHide={closeTicketModal}\r\n                      keyboard={true}\r\n                    >\r\n                      <h2 style={{ textAlign: \"center\" }}>New ticket</h2>\r\n                      <Modal.Body>\r\n                        <NewTicket />\r\n                      </Modal.Body>\r\n                    </Modal>\r\n                  </Nav.Item>\r\n                </Whisper>\r\n\r\n                <Nav.Item icon={<Icon icon=\"cog\" />} onClick={openModal}>\r\n                  <Modal show={modalIsOpen} onHide={closeModal}>\r\n                    <h2>Settings</h2>\r\n                    <Modal.Body>\r\n                      <Settings />\r\n                    </Modal.Body>\r\n                  </Modal>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Navbar.Body>\r\n          </Navbar>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Navbar>\r\n            <Navbar.Header>\r\n              <p href=\"#\" className=\"navbar-brand logo\">\r\n                Project Winter\r\n              </p>\r\n            </Navbar.Header>\r\n            <Navbar.Body>\r\n              <Nav>\r\n                <Nav.Item\r\n                  icon={<Icon icon=\"home\" />}\r\n                  onClick={() => history.push(\"/\")}\r\n                >\r\n                  Home\r\n                </Nav.Item>\r\n\r\n                <Nav.Item onClick={() => history.push(\"/tickets\")}>\r\n                  Tickets\r\n                </Nav.Item>\r\n\r\n                <Nav.Item\r\n                  onClick={() => history.push(\"/timesheet\")}\r\n                  disabled={true}\r\n                >\r\n                  TimeSheet\r\n                </Nav.Item>\r\n              </Nav>\r\n\r\n              <Nav pullRight>\r\n                <Whisper placement=\"bottom\" trigger=\"hover\" speaker={tooltip}>\r\n                  <Nav.Item\r\n                    icon={<Icon icon=\"plus\" />}\r\n                    onClick={openTicketModal}\r\n                  >\r\n                    <Modal\r\n                      show={ticketmodalIsOpen}\r\n                      onHide={closeTicketModal}\r\n                      keyboard={true}\r\n                    >\r\n                      <h2 style={{ textAlign: \"center\" }}>New ticket</h2>\r\n                      <Modal.Body>\r\n                        <NewTicket />\r\n                      </Modal.Body>\r\n                    </Modal>\r\n                  </Nav.Item>\r\n                </Whisper>\r\n\r\n                <Nav.Item icon={<Icon icon=\"cog\" />} onClick={openModal}>\r\n                  <Modal show={modalIsOpen} onHide={closeModal}>\r\n                    <h2>Settings</h2>\r\n                    <Modal.Body>\r\n                      <Settings />\r\n                    </Modal.Body>\r\n                  </Modal>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Navbar.Body>\r\n          </Navbar>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Render />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","D:\\Git\\winter\\client\\src\\component\\admin\\SideNav.js",[],"D:\\Git\\winter\\client\\src\\pages\\admin\\Dash.js",[],"D:\\Git\\winter\\client\\src\\pages\\admin\\Analytics.js",[],"D:\\Git\\winter\\client\\src\\component\\OpenTicket.js",["112","113","114","115","116","117","118","119"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Tag, Space, Button } from \"antd\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nimport { baseUrl } from \"../utils.js\";\r\n\r\nconst OpenTicket = () => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const open = () => setModalOpen(true);\r\n  const close = () => setModalOpen(false);\r\n\r\n  const { Column, HeaderCell, Cell } = Table;\r\n\r\n  async function loadContent() {\r\n    await fetch(`${baseUrl}/api/v1/tickets/openedTickets`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        setData(result.tickets);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function resolve() {\r\n      await loadContent();\r\n    }\r\n    resolve();\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Company\",\r\n      dataIndex: \"company\",\r\n      key: \"company\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Priority\",\r\n      dataIndex: \"priority\",\r\n      key: \"priority\",\r\n      width: 50,\r\n    },\r\n    {\r\n      title: \"Issue\",\r\n      dataIndex: \"issue\",\r\n      key: \"issue\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      width: 200,\r\n      render: () => (\r\n        <Space size=\"middle\">\r\n          <Button size=\"small\">Show</Button>\r\n          <Button size=\"small\">Delete</Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ textAlign: \"center\" }}>Open Tickets - {null}</h3>\r\n      <Table columns={columns} dataSource={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenTicket;\r\n","D:\\Git\\winter\\client\\src\\component\\UnissuedTicket.js",["120","121"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Tag, Space, Button } from \"antd\";\r\n\r\nimport { baseUrl } from \"../utils.js\";\r\n\r\nconst UnissuedTicket = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  async function loadContent() {\r\n    await fetch(`${baseUrl}/api/v1/tickets/unissuedTickets`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setData(result.tickets);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function resolve() {\r\n      await loadContent();\r\n    }\r\n    resolve();\r\n  }, []);\r\n\r\n  const convert = () => {\r\n    fetch(`${baseUrl}/api/v1/tickets/convertTicket`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        data,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          window.location.reload();\r\n          console.log(\"Congrats it worked\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Company\",\r\n      dataIndex: \"company\",\r\n      key: \"company\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Priority\",\r\n      dataIndex: \"priority\",\r\n      key: \"priority\",\r\n      width: 50,\r\n    },\r\n    {\r\n      title: \"Issue\",\r\n      dataIndex: \"issue\",\r\n      key: \"issue\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      width: 200,\r\n      render: () => (\r\n        <Space size=\"middle\">\r\n          <Button size=\"small\">Convert</Button>\r\n          <Button size=\"small\"></Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ textAlign: \"center\" }}>Unissued Tickets - </h3>\r\n      <Table columns={columns} dataSource={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnissuedTicket;\r\n","D:\\Git\\winter\\client\\src\\component\\CreateTodo.js",[],"D:\\Git\\winter\\client\\src\\component\\ListTodo.js",[],"D:\\Git\\winter\\client\\src\\component\\TicketStats.js",[],"D:\\Git\\winter\\client\\src\\component\\ListNote.js",[],"D:\\Git\\winter\\client\\src\\component\\Setings.js",["122"],"import React, { useContext } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import {UserContext} from '../App'\r\n\r\nconst Setings = () => {\r\n  const history = useHistory();\r\n\r\n  function logout() {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={logout}>Logout</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Setings;\r\n","D:\\Git\\winter\\client\\src\\component\\admin\\CreateUser.js",["123","124","125"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Modal, Form, Input, Radio } from \"antd\";\r\n// import { GlobalContext } from '../Context/GlobalState';\r\n\r\nimport { baseUrl } from \"../../utils\";\r\n\r\nconst CreateUser = () => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [form] = Form.useForm();\r\n  \r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n  \r\n    const postData = async () => {\r\n      await fetch(`${baseUrl}/api/v1/auth/Signup`, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          email,\r\n          password,\r\n        }),\r\n      }).then((res) => res.json());\r\n    };\r\n  \r\n    const onCreate = async (values) => {\r\n      console.log(\"Received values of form: \", values);\r\n      setVisible(false);\r\n      await postData();\r\n    };\r\n  \r\n    const onCancel = () => {\r\n      setVisible(false);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <p\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            setVisible(true);\r\n          }}\r\n        >\r\n          Create new user\r\n        </p>\r\n        <Modal\r\n          visible={visible}\r\n          title=\"Create a new user\"\r\n          okText=\"Create\"\r\n          cancelText=\"Cancel\"\r\n          onCancel={onCancel}\r\n          onOk={() => {\r\n            form\r\n              .validateFields()\r\n              .then((values) => {\r\n                form.resetFields();\r\n                onCreate(values);\r\n              })\r\n              .catch((info) => {\r\n                console.log(\"Validate Failed:\", info);\r\n              });\r\n          }}\r\n        >\r\n          <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            name=\"form_in_modal\"\r\n            initialValues={{\r\n              modifier: \"public\",\r\n            }}\r\n          >\r\n            <Form.Item\r\n              name=\"name\"\r\n              label=\"Name\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input the name of your new user!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                placeholder=\"Enter name here...\"\r\n                name=\"name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"email\" label=\"Email\">\r\n              <Input\r\n                placeholder=\"Enter email here....\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"password\" label=\"Password\">\r\n              <Input\r\n                placeholder=\"Enter password here...\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"modifier\"\r\n              className=\"collection-create-form_last-form-item\"\r\n            >\r\n              <Radio.Group>\r\n                <Radio value=\"user\">User</Radio>\r\n                <Radio value=\"admin\">Admin</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default CreateUser;","D:\\Git\\winter\\client\\src\\component\\NewTicket.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"134","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":35},{"ruleId":"130","severity":1,"message":"135","line":17,"column":10,"nodeType":"132","messageId":"133","endLine":17,"endColumn":17},{"ruleId":"136","severity":1,"message":"137","line":24,"column":6,"nodeType":"138","endLine":24,"endColumn":8,"suggestions":"139"},{"ruleId":"136","severity":1,"message":"137","line":136,"column":6,"nodeType":"138","endLine":136,"endColumn":8,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":73,"column":11,"nodeType":"143","endLine":73,"endColumn":52},{"ruleId":"136","severity":1,"message":"144","line":46,"column":6,"nodeType":"138","endLine":46,"endColumn":8,"suggestions":"145"},{"ruleId":"130","severity":1,"message":"146","line":2,"column":17,"nodeType":"132","messageId":"133","endLine":2,"endColumn":20},{"ruleId":"130","severity":1,"message":"147","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":13},{"ruleId":"130","severity":1,"message":"148","line":8,"column":10,"nodeType":"132","messageId":"133","endLine":8,"endColumn":19},{"ruleId":"130","severity":1,"message":"149","line":11,"column":9,"nodeType":"132","messageId":"133","endLine":11,"endColumn":13},{"ruleId":"130","severity":1,"message":"150","line":12,"column":9,"nodeType":"132","messageId":"133","endLine":12,"endColumn":14},{"ruleId":"130","severity":1,"message":"151","line":14,"column":11,"nodeType":"132","messageId":"133","endLine":14,"endColumn":17},{"ruleId":"130","severity":1,"message":"152","line":14,"column":19,"nodeType":"132","messageId":"133","endLine":14,"endColumn":29},{"ruleId":"130","severity":1,"message":"153","line":14,"column":31,"nodeType":"132","messageId":"133","endLine":14,"endColumn":35},{"ruleId":"130","severity":1,"message":"146","line":2,"column":17,"nodeType":"132","messageId":"133","endLine":2,"endColumn":20},{"ruleId":"130","severity":1,"message":"154","line":30,"column":9,"nodeType":"132","messageId":"133","endLine":30,"endColumn":16},{"ruleId":"130","severity":1,"message":"155","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":27},{"ruleId":"130","severity":1,"message":"155","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":37},{"ruleId":"130","severity":1,"message":"156","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":20},{"ruleId":"130","severity":1,"message":"157","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":16},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'baseUrl' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["160"],["161"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'isAdmin'. Either include it or remove the dependency array.",["162"],"'Tag' is defined but never used.","'Popup' is defined but never used.","'modalOpen' is assigned a value but never used.","'open' is assigned a value but never used.","'close' is assigned a value but never used.","'Column' is assigned a value but never used.","'HeaderCell' is assigned a value but never used.","'Cell' is assigned a value but never used.","'convert' is assigned a value but never used.","'useContext' is defined but never used.","'useHistory' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"163","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [history]",{"range":"168","text":"169"},{"range":"170","text":"169"},"Update the dependencies array to be: [isAdmin]",{"range":"171","text":"172"},[645,647],"[history]",[3492,3494],[1087,1089],"[isAdmin]"]