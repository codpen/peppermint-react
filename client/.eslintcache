[{"D:\\Git\\winter\\client\\src\\index.js":"1","D:\\Git\\winter\\client\\src\\App.js":"2","D:\\Git\\winter\\client\\src\\Context\\GlobalState.js":"3","D:\\Git\\winter\\client\\src\\utils.js":"4","D:\\Git\\winter\\client\\src\\pages\\Monitor.js":"5","D:\\Git\\winter\\client\\src\\pages\\Home.js":"6","D:\\Git\\winter\\client\\src\\pages\\Ticket.js":"7","D:\\Git\\winter\\client\\src\\pages\\Admin.js":"8","D:\\Git\\winter\\client\\src\\component\\Navigation.js":"9","D:\\Git\\winter\\client\\src\\pages\\Reg.js":"10","D:\\Git\\winter\\client\\src\\Context\\AppReducer.js":"11","D:\\Git\\winter\\client\\src\\pages\\Login.js":"12","D:\\Git\\winter\\client\\src\\component\\CreateTodo.js":"13","D:\\Git\\winter\\client\\src\\component\\ListTodo.js":"14","D:\\Git\\winter\\client\\src\\component\\NewTicket.js":"15","D:\\Git\\winter\\client\\src\\component\\OpenTicket.js":"16","D:\\Git\\winter\\client\\src\\component\\TicketStats.js":"17","D:\\Git\\winter\\client\\src\\component\\UnissuedTicket.js":"18","D:\\Git\\winter\\client\\src\\component\\Setings.js":"19","D:\\Git\\winter\\client\\src\\component\\ListNote.js":"20"},{"size":675,"mtime":1607624399131,"results":"21","hashOfConfig":"22"},{"size":1984,"mtime":1607557419322,"results":"23","hashOfConfig":"22"},{"size":6183,"mtime":1607556476938,"results":"24","hashOfConfig":"22"},{"size":48,"mtime":1607284653162,"results":"25","hashOfConfig":"22"},{"size":1102,"mtime":1606939518254,"results":"26","hashOfConfig":"22"},{"size":3353,"mtime":1607557635582,"results":"27","hashOfConfig":"22"},{"size":790,"mtime":1607559013245,"results":"28","hashOfConfig":"22"},{"size":3121,"mtime":1607558316625,"results":"29","hashOfConfig":"22"},{"size":4834,"mtime":1607558128460,"results":"30","hashOfConfig":"22"},{"size":2694,"mtime":1606939727522,"results":"31","hashOfConfig":"22"},{"size":1288,"mtime":1607554855806,"results":"32","hashOfConfig":"22"},{"size":2243,"mtime":1607626277754,"results":"33","hashOfConfig":"22"},{"size":795,"mtime":1607417541437,"results":"34","hashOfConfig":"22"},{"size":1789,"mtime":1607552971271,"results":"35","hashOfConfig":"22"},{"size":3072,"mtime":1607284313343,"results":"36","hashOfConfig":"22"},{"size":4497,"mtime":1607284736645,"results":"37","hashOfConfig":"22"},{"size":2495,"mtime":1607284745081,"results":"38","hashOfConfig":"22"},{"size":2803,"mtime":1607284770381,"results":"39","hashOfConfig":"22"},{"size":426,"mtime":1607548146474,"results":"40","hashOfConfig":"22"},{"size":2377,"mtime":1607548146473,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1t8oi2s",{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"D:\\Git\\winter\\client\\src\\index.js",["89","90"],"D:\\Git\\winter\\client\\src\\App.js",["91","92","93"],"import React, {\r\n  useContext, useEffect, useState\r\n} from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport \"./app.css\";\r\nimport \"rsuite/dist/styles/rsuite-default.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Ticket from \"./pages/Ticket\";\r\nimport Navigation from \"./component/Navigation\";\r\nimport Login from \"./pages/Login\";\r\nimport Reg from \"./pages/Reg\";\r\nimport Monitor from \"./pages/Monitor\";\r\nimport Admin from \"./pages/Admin\";\r\n\r\nimport { baseUrl } from \"./utils\";\r\n\r\nimport { GlobalContext } from './Context/GlobalState';\r\n\r\n\r\nconst Routing = () => {\r\n\r\n  const { isLogged, auth } = useContext(GlobalContext);\r\n\r\n  const [data, setData] = useState();\r\n\r\n  useEffect(() => {\r\n    const call = async () => {\r\n      const res = await fetch(`${baseUrl}/api/v1/auth/token`, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\" : \"application/json\",\r\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n          \"x-auth-token\": localStorage.getItem(\"jwt\")\r\n        },\r\n      }).then((res) => res.json())\r\n      console.log(res)\r\n      setData(res)\r\n    }\r\n    call()\r\n  }, [])\r\n\r\n  console.log(data)\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/login\">\r\n          <div className=\"login-container\">\r\n            <Login />\r\n          </div>\r\n        </Route>\r\n\r\n        <Route path=\"/signup\">\r\n          <div className=\"login-container\">\r\n            <Reg />\r\n          </div>\r\n        </Route>\r\n          \r\n        \r\n\r\n        <Route exact path=\"/\" component={Home} /> \r\n\r\n        <Route>\r\n          <Navigation />\r\n          <Route exact path=\"/tickets\" component={Ticket} />\r\n          <Route exact path=\"/monitor\" component={Monitor} />\r\n          <Route exact path=\"/admin\" component={Admin} />\r\n        </Route>\r\n      </Switch>\r\n\r\n    </Router>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n      <Routing />\r\n  );\r\n};\r\n\r\nexport default App;\r\n",["94","95"],"D:\\Git\\winter\\client\\src\\Context\\GlobalState.js",[],"D:\\Git\\winter\\client\\src\\utils.js",[],"D:\\Git\\winter\\client\\src\\pages\\Monitor.js",[],"D:\\Git\\winter\\client\\src\\pages\\Home.js",["96","97","98"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Content,\r\n  Divider,\r\n  Button,\r\n  Icon,\r\n  Input,\r\n} from \"rsuite\";\r\nimport Popup from 'reactjs-popup';\r\nimport {useHistory } from 'react-router-dom'\r\n\r\n\r\nimport Navigation from \"../component/Navigation\";\r\nimport CreateTodo from \"../component/CreateTodo\";\r\nimport ListTodo from \"../component/ListTodo\";\r\nimport TicketStats from \"../component/TicketStats\";\r\nimport ListNote from \"../component/ListNote\";\r\n\r\nimport { baseUrl } from \"../utils\";\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\nconst Todo = () => {\r\n  return (\r\n    <div className=\"Todo-Container\">\r\n      <h3>Todo List</h3>\r\n      <Divider />\r\n      <CreateTodo />\r\n      <ListTodo />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Notes = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [title, setTitle] = useState('');\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const { notes, saveNote } = useContext(GlobalContext); \r\n\r\n  \r\n  const open = () => setModalIsOpen(true);\r\n  const close = () => setModalIsOpen(false);\r\n\r\n  return (\r\n    <div className=\"Notes-Container\">\r\n      <h3>\r\n        Notes\r\n        <Button onClick={open} style={{ float: \"right\" }}>\r\n        <Icon icon=\"plus\" />\r\n        <Popup modal open={modalIsOpen} nested={true}>\r\n        <div className=\"modal\">\r\n        <Button className=\"close\" onClick={close}>\r\n          &times;\r\n        </Button>\r\n        <div className=\"header\"> <Input placeholder=\"Enter Note title here...\" onChange={setTitle} /></div>\r\n        <div className=\"content\">\r\n          <Input placeholder=\"Enter Note here...\" rows={10} componentClass=\"textarea\" onChange={setText} />\r\n        </div>\r\n        <div className=\"actions\">\r\n        <Button\r\n            style={{marginRight: 20}}\r\n            className=\"button\"\r\n            onClick={() => {\r\n              console.log('Data sent');\r\n              saveNote(text, title)\r\n              close()\r\n            }}\r\n          >\r\n            Save Note\r\n          </Button>\r\n          <Button\r\n            className=\"button\"\r\n            onClick={() => {\r\n              console.log('modal closed ');\r\n              close();\r\n            }}\r\n          >\r\n            Close\r\n          </Button>\r\n        </div>\r\n      </div>\r\n        </Popup>\r\n        </Button>\r\n      </h3>\r\n      <Divider />\r\n      <ListNote />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Issues = () => {\r\n  return (\r\n    <div className=\"Issue-Container\">\r\n      <TicketStats />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Home = () => {\r\n\r\n  // const [data, setData] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const call = async () => {\r\n      const res = localStorage.getItem('jwt')\r\n      console.log(res)\r\n      if(!res) {\r\n        history.push('/login')\r\n      } else {\r\n        return console.log('logged in')\r\n      }\r\n    }\r\n    call()\r\n  }, [])\r\n\r\n  // console.log(data)\r\n  \r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Header>\r\n          <Navigation />\r\n        </Header>\r\n\r\n        <Container>\r\n          <Content>\r\n            <Todo />\r\n          </Content>\r\n        </Container>\r\n\r\n        <Container>\r\n          <Notes />\r\n        </Container>\r\n\r\n        <Container>\r\n          <Issues />\r\n        </Container>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\Git\\winter\\client\\src\\pages\\Ticket.js",["99"],"import React, { useEffect} from \"react\";\r\n//import { Grid, Col, Table, Modal, Button, Nav } from \"rsuite\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import { baseUrl } from \"../utils\";\r\n\r\nimport OpenTickets from \"../component/OpenTicket\";\r\nimport UnissuedTickets from \"../component/UnissuedTicket\";\r\n\r\nconst Ticket = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const call = async () => {\r\n      const res = localStorage.getItem('jwt')\r\n      console.log(res)\r\n      if(!res) {\r\n        history.push('/login')\r\n      } else {\r\n        return console.log('logged in')\r\n      }\r\n    }\r\n    call()\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{ margin: 25 }}>\r\n      <OpenTickets />\r\n      <UnissuedTickets />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ticket;\r\n","D:\\Git\\winter\\client\\src\\pages\\Admin.js",["100","101","102"],"import React, { useState,  } from \"react\";\r\nimport {\r\n  Container,\r\n  Content,\r\n  Form,\r\n  FormGroup,\r\n  ControlLabel,\r\n  ButtonToolbar,\r\n  Button,\r\n  Modal,\r\n} from \"rsuite\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import {UserContext} from '../App'\r\n\r\nimport { baseUrl } from \"../utils.js\";\r\n\r\nconst CreateUser = () => {\r\n  const history = useHistory();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n  const open = () => setIsOpen(true);\r\n  const close = () => setIsOpen(false);\r\n\r\n  const PostData = async () => {\r\n    await fetch(`${baseUrl}/api/v1/auth/Signup`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        email,\r\n        password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (!data.error) {\r\n          window.location.reload();\r\n        } else {\r\n          console.log(data.error);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"createUser-container\">\r\n      <h4>Add new user</h4>\r\n      <Container>\r\n        <Button onClick={open} >\r\n          Add User\r\n          <Modal\r\n          show={modalIsOpen}\r\n          onHide={close()}\r\n        >\r\n          <Modal.Header>Add a new User</Modal.Header>\r\n          <Modal.Body>\r\n          <Content>\r\n            <Form fluid>\r\n              <FormGroup>\r\n                <ControlLabel>Name</ControlLabel>\r\n                <input name=\"name\" onChange={(e) => setName(e.target.value)} />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <ControlLabel>Email</ControlLabel>\r\n                <input\r\n                  name=\"password\"\r\n                  type=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <ControlLabel>Password</ControlLabel>\r\n                <input\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <ButtonToolbar>\r\n                  <Button appearance=\"primary\" onClick={() => PostData(), close()}>\r\n                    Add\r\n                  </Button>\r\n                </ButtonToolbar>\r\n              </FormGroup>\r\n            </Form>\r\n          </Content>\r\n          </Modal.Body>\r\n          </Modal>\r\n        </Button>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Admin = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n  console.log(user.role)\r\n\r\n  const Render = () => {\r\n    if(user.role === \"admin\") {\r\n      return (\r\n        <div>\r\n          <h1>You are the admin now</h1>\r\n        </div>\r\n      ) \r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Render />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","D:\\Git\\winter\\client\\src\\component\\Navigation.js",["103"],"import React, { useEffect, useState } from \"react\";\r\nimport { Navbar, Nav, Icon, Tooltip, Whisper, Modal } from \"rsuite\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Settings from \"./Setings\";\r\nimport NewTicket from \"./NewTicket\";\r\n\r\nconst Navigation = () => {\r\n  const history = useHistory();\r\n\r\n  const tooltip = <Tooltip>Create a new Ticket here</Tooltip>;\r\n\r\n  const [ticketmodalIsOpen, setTicketIsOpen] = useState(false);\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [checkAdmin, setCheckAdmin] = useState(false);\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  function openTicketModal() {\r\n    setTicketIsOpen(true);\r\n  }\r\n\r\n  function closeTicketModal() {\r\n    setTicketIsOpen(false);\r\n  }\r\n\r\n  function isAdmin() {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    if(user && user.role === \"admin\") {\r\n      setCheckAdmin(true)\r\n    } else {\r\n      if(!user) {\r\n        history.push('/Login')\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    isAdmin()\r\n  },[])\r\n\r\n\r\n\r\n  const Render = () => {\r\n\r\n    if(checkAdmin) {\r\n      return(\r\n      <div>\r\n        <Navbar>\r\n        <Navbar.Header>\r\n          <p href=\"#\" className=\"navbar-brand logo\">\r\n            Project Winter\r\n          </p>\r\n        </Navbar.Header>\r\n        <Navbar.Body>\r\n          <Nav>\r\n            <Nav.Item\r\n              icon={<Icon icon=\"home\" />}\r\n              onClick={() => history.push(\"/\")}\r\n            >\r\n              Home\r\n            </Nav.Item>\r\n\r\n            <Nav.Item onClick={() => history.push(\"/tickets\")}>\r\n              Tickets\r\n            </Nav.Item>\r\n\r\n            <Nav.Item\r\n              onClick={() => history.push(\"/timesheet\")}\r\n              disabled={true}\r\n            >\r\n              TimeSheet\r\n            </Nav.Item>\r\n\r\n            <Nav.Item onClick={() => history.push(\"/admin\")} disabled={false}>\r\n              Admin\r\n            </Nav.Item>\r\n          </Nav>\r\n\r\n          <Nav pullRight>\r\n            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={tooltip}>\r\n              <Nav.Item icon={<Icon icon=\"plus\" />} onClick={openTicketModal}>\r\n                <Modal\r\n                  show={ticketmodalIsOpen}\r\n                  onHide={closeTicketModal}\r\n                  keyboard={true}\r\n                >\r\n                  <h2 style={{ textAlign: \"center\" }}>New ticket</h2>\r\n                  <Modal.Body>\r\n                    <NewTicket />\r\n                  </Modal.Body>\r\n                </Modal>\r\n              </Nav.Item>\r\n            </Whisper>\r\n\r\n            <Nav.Item icon={<Icon icon=\"cog\" />} onClick={openModal}>\r\n              <Modal show={modalIsOpen} onHide={closeModal}>\r\n                <h2>Settings</h2>\r\n                <Modal.Body>\r\n                  <Settings />\r\n                </Modal.Body>\r\n              </Modal>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Navbar.Body>\r\n      </Navbar>\r\n      </div>\r\n      )\r\n    } else {\r\n      return (\r\n      <div>\r\n        <Navbar>\r\n        <Navbar.Header>\r\n          <p href=\"#\" className=\"navbar-brand logo\">\r\n            Project Winter\r\n          </p>\r\n        </Navbar.Header>\r\n        <Navbar.Body>\r\n          <Nav>\r\n            <Nav.Item\r\n              icon={<Icon icon=\"home\" />}\r\n              onClick={() => history.push(\"/\")}\r\n            >\r\n              Home\r\n            </Nav.Item>\r\n\r\n            <Nav.Item onClick={() => history.push(\"/tickets\")}>\r\n              Tickets\r\n            </Nav.Item>\r\n\r\n            <Nav.Item\r\n              onClick={() => history.push(\"/timesheet\")}\r\n              disabled={true}\r\n            >\r\n              TimeSheet\r\n            </Nav.Item>\r\n          </Nav>\r\n\r\n          <Nav pullRight>\r\n            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={tooltip}>\r\n              <Nav.Item icon={<Icon icon=\"plus\" />} onClick={openTicketModal}>\r\n                <Modal\r\n                  show={ticketmodalIsOpen}\r\n                  onHide={closeTicketModal}\r\n                  keyboard={true}\r\n                >\r\n                  <h2 style={{ textAlign: \"center\" }}>New ticket</h2>\r\n                  <Modal.Body>\r\n                    <NewTicket />\r\n                  </Modal.Body>\r\n                </Modal>\r\n              </Nav.Item>\r\n            </Whisper>\r\n\r\n            <Nav.Item icon={<Icon icon=\"cog\" />} onClick={openModal}>\r\n              <Modal show={modalIsOpen} onHide={closeModal}>\r\n                <h2>Settings</h2>\r\n                <Modal.Body>\r\n                  <Settings />\r\n                </Modal.Body>\r\n              </Modal>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Navbar.Body>\r\n      </Navbar>\r\n        \r\n      </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Render />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","D:\\Git\\winter\\client\\src\\pages\\Reg.js",[],"D:\\Git\\winter\\client\\src\\Context\\AppReducer.js",[],"D:\\Git\\winter\\client\\src\\pages\\Login.js",[],"D:\\Git\\winter\\client\\src\\component\\CreateTodo.js",[],"D:\\Git\\winter\\client\\src\\component\\ListTodo.js",[],"D:\\Git\\winter\\client\\src\\component\\NewTicket.js",[],"D:\\Git\\winter\\client\\src\\component\\OpenTicket.js",[],"D:\\Git\\winter\\client\\src\\component\\TicketStats.js",[],"D:\\Git\\winter\\client\\src\\component\\UnissuedTicket.js",[],"D:\\Git\\winter\\client\\src\\component\\Setings.js",["104","105"],"import React,{useContext} from 'react'\r\nimport { Button } from \"rsuite\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GlobalProvider } from '../Context/GlobalState';\r\n\r\nconst Setings = () => {\r\n  const history = useHistory();\r\n\r\n  const { userData, setUserData } = useContext(GlobalProvider);\r\n\r\n  function logout() {\r\n    localStorage.clear();\r\n    setUserData({\r\n      token: undefined,\r\n      user: undefined,\r\n    });\r\n    history.push(\"/Login\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {userData.user ? (\r\n        <Button onClick={logout}>Logout</Button>\r\n      ) : (\r\n        history.push('/Login')\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Setings;\r\n","D:\\Git\\winter\\client\\src\\component\\ListNote.js",[],{"ruleId":"106","severity":1,"message":"107","line":8,"column":10,"nodeType":"108","messageId":"109","endLine":8,"endColumn":24},{"ruleId":"106","severity":1,"message":"110","line":8,"column":26,"nodeType":"108","messageId":"109","endLine":8,"endColumn":34},{"ruleId":"106","severity":1,"message":"111","line":8,"column":3,"nodeType":"108","messageId":"109","endLine":8,"endColumn":11},{"ruleId":"106","severity":1,"message":"112","line":28,"column":11,"nodeType":"108","messageId":"109","endLine":28,"endColumn":19},{"ruleId":"106","severity":1,"message":"113","line":28,"column":21,"nodeType":"108","messageId":"109","endLine":28,"endColumn":25},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"106","severity":1,"message":"118","line":21,"column":10,"nodeType":"108","messageId":"109","endLine":21,"endColumn":17},{"ruleId":"106","severity":1,"message":"119","line":40,"column":11,"nodeType":"108","messageId":"109","endLine":40,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":117,"column":6,"nodeType":"122","endLine":117,"endColumn":8,"suggestions":"123"},{"ruleId":"120","severity":1,"message":"121","line":25,"column":6,"nodeType":"122","endLine":25,"endColumn":8,"suggestions":"124"},{"ruleId":"106","severity":1,"message":"125","line":17,"column":7,"nodeType":"108","messageId":"109","endLine":17,"endColumn":17},{"ruleId":"106","severity":1,"message":"126","line":18,"column":9,"nodeType":"108","messageId":"109","endLine":18,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":89,"column":73,"nodeType":"129","messageId":"130","endLine":89,"endColumn":74},{"ruleId":"120","severity":1,"message":"131","line":46,"column":5,"nodeType":"122","endLine":46,"endColumn":7,"suggestions":"132"},{"ruleId":"106","severity":1,"message":"133","line":1,"column":15,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"134","line":4,"column":9,"nodeType":"108","messageId":"109","endLine":4,"endColumn":20},"no-unused-vars","'ChakraProvider' is defined but never used.","Identifier","unusedVar","'CSSReset' is defined but never used.","'Redirect' is defined but never used.","'isLogged' is assigned a value but never used.","'auth' is assigned a value but never used.","no-native-reassign",["135"],"no-negated-in-lhs",["136"],"'baseUrl' is defined but never used.","'notes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["137"],["138"],"'CreateUser' is assigned a value but never used.","'history' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'isAdmin'. Either include it or remove the dependency array.",["139"],"'useContext' is defined but never used.","'UserContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"140","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [history]",{"range":"145","text":"146"},{"range":"147","text":"146"},"Update the dependencies array to be: [isAdmin]",{"range":"148","text":"149"},[2904,2906],"[history]",[639,641],[1079,1081],"[isAdmin]"]