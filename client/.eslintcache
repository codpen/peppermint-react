[{"/Users/jack/Documents/GitHub/winter/client/src/index.js":"1","/Users/jack/Documents/GitHub/winter/client/src/App.js":"2","/Users/jack/Documents/GitHub/winter/client/src/utils.js":"3","/Users/jack/Documents/GitHub/winter/client/src/pages/Ticket.js":"4","/Users/jack/Documents/GitHub/winter/client/src/pages/Monitor.js":"5","/Users/jack/Documents/GitHub/winter/client/src/pages/Reset.js":"6","/Users/jack/Documents/GitHub/winter/client/src/pages/Home.js":"7","/Users/jack/Documents/GitHub/winter/client/src/pages/Reg.js":"8","/Users/jack/Documents/GitHub/winter/client/src/pages/Admin.js":"9","/Users/jack/Documents/GitHub/winter/client/src/pages/Login.js":"10","/Users/jack/Documents/GitHub/winter/client/src/component/Navigation.js":"11","/Users/jack/Documents/GitHub/winter/client/src/Context/GlobalState.js":"12","/Users/jack/Documents/GitHub/winter/client/src/component/CreateTodo.js":"13","/Users/jack/Documents/GitHub/winter/client/src/component/ListNote.js":"14","/Users/jack/Documents/GitHub/winter/client/src/component/UnissuedTicket.js":"15","/Users/jack/Documents/GitHub/winter/client/src/component/ListTodo.js":"16","/Users/jack/Documents/GitHub/winter/client/src/component/TicketStats.js":"17","/Users/jack/Documents/GitHub/winter/client/src/component/OpenTicket.js":"18","/Users/jack/Documents/GitHub/winter/client/src/Context/AppReducer.js":"19","/Users/jack/Documents/GitHub/winter/client/src/component/NewTicket.js":"20","/Users/jack/Documents/GitHub/winter/client/src/component/Setings.js":"21"},{"size":609,"mtime":1607464777489,"results":"22","hashOfConfig":"23"},{"size":1800,"mtime":1607474390950,"results":"24","hashOfConfig":"23"},{"size":47,"mtime":1607293607463,"results":"25","hashOfConfig":"23"},{"size":452,"mtime":1606942187183,"results":"26","hashOfConfig":"23"},{"size":1055,"mtime":1606948837448,"results":"27","hashOfConfig":"23"},{"size":134,"mtime":1607289465962,"results":"28","hashOfConfig":"23"},{"size":2807,"mtime":1607379945349,"results":"29","hashOfConfig":"23"},{"size":2595,"mtime":1606942187183,"results":"30","hashOfConfig":"23"},{"size":3045,"mtime":1607294765643,"results":"31","hashOfConfig":"23"},{"size":2582,"mtime":1607471562998,"results":"32","hashOfConfig":"23"},{"size":4680,"mtime":1607470866170,"results":"33","hashOfConfig":"23"},{"size":5620,"mtime":1607471566382,"results":"34","hashOfConfig":"23"},{"size":762,"mtime":1607374209450,"results":"35","hashOfConfig":"23"},{"size":2305,"mtime":1607464777486,"results":"36","hashOfConfig":"23"},{"size":2696,"mtime":1607293607460,"results":"37","hashOfConfig":"23"},{"size":1711,"mtime":1607376753833,"results":"38","hashOfConfig":"23"},{"size":2375,"mtime":1607293607457,"results":"39","hashOfConfig":"23"},{"size":4355,"mtime":1607293607456,"results":"40","hashOfConfig":"23"},{"size":1286,"mtime":1607464777484,"results":"41","hashOfConfig":"23"},{"size":2960,"mtime":1607293607454,"results":"42","hashOfConfig":"23"},{"size":408,"mtime":1607466184575,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"1q9gr7o",{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"47"},"/Users/jack/Documents/GitHub/winter/client/src/index.js",["94"],"import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nimport { GlobalProvider } from './Context/GlobalState';\n\nReactDOM.render(\n        <GlobalProvider>\n            <App />\n        </GlobalProvider>,\n    document.getElementById(\"root\")\n    );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals(console.log);\n",["95","96"],"/Users/jack/Documents/GitHub/winter/client/src/App.js",["97","98"],"/Users/jack/Documents/GitHub/winter/client/src/utils.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Ticket.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Monitor.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Reset.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Home.js",["99","100"],"import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Container,\n  Header,\n  Content,\n  Divider,\n  Button,\n  Icon,\n  Input,\n} from \"rsuite\";\nimport Popup from 'reactjs-popup';\n\n\nimport Navigation from \"../component/Navigation\";\nimport CreateTodo from \"../component/CreateTodo\";\nimport ListTodo from \"../component/ListTodo\";\nimport TicketStats from \"../component/TicketStats\";\nimport ListNote from \"../component/ListNote\";\n\n// import { baseUrl } from \"../utils\";\nimport { GlobalContext } from '../Context/GlobalState';\n\nconst Todo = () => {\n  return (\n    <div className=\"Todo-Container\">\n      <h3>Todo List</h3>\n      <Divider />\n      <CreateTodo />\n      <ListTodo />\n    </div>\n  );\n};\n\nconst Notes = () => {\n  const [text, setText] = useState(\"\");\n  const [title, setTitle] = useState('');\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const { notes, saveNote } = useContext(GlobalContext);  \n\n  \n  const open = () => setModalIsOpen(true);\n  const close = () => setModalIsOpen(false);\n\n  return (\n    <div className=\"Notes-Container\">\n      <h3>\n        Notes\n        <Button onClick={open} style={{ float: \"right\" }}>\n        <Icon icon=\"plus\" />\n        <Popup modal open={modalIsOpen} nested={true}>\n        <div className=\"modal\">\n        <Button className=\"close\" onClick={close}>\n          &times;\n        </Button>\n        <div className=\"header\"> <Input placeholder=\"Enter Note title here...\" onChange={setTitle} /></div>\n        <div className=\"content\">\n          <Input placeholder=\"Enter Note here...\" rows={10} componentClass=\"textarea\" onChange={setText} />\n        </div>\n        <div className=\"actions\">\n        <Button\n            style={{marginRight: 20}}\n            className=\"button\"\n            onClick={() => {\n              console.log('Data sent');\n              saveNote(text, title)\n              close()\n            }}\n          >\n            Save Note\n          </Button>\n          <Button\n            className=\"button\"\n            onClick={() => {\n              console.log('modal closed ');\n              close();\n            }}\n          >\n            Close\n          </Button>\n        </div>\n      </div>\n        </Popup>\n        </Button>\n      </h3>\n      <Divider />\n      <ListNote />\n    </div>\n  );\n};\n\nconst Issues = () => {\n  return (\n    <div className=\"Issue-Container\">\n      <TicketStats />\n    </div>\n  );\n};\n\nconst Home = () => {\n  return (\n    <div>\n      <Container>\n        <Header>\n          <Navigation />\n        </Header>\n\n        <Container>\n          <Content>\n            <Todo />\n          </Content>\n        </Container>\n\n        <Container>\n          <Notes />\n        </Container>\n\n        <Container>\n          <Issues />\n        </Container>\n      </Container>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/jack/Documents/GitHub/winter/client/src/pages/Reg.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Admin.js",["101"],"import React, { useState,  } from \"react\";\nimport {\n  Container,\n  Content,\n  Form,\n  FormGroup,\n  ControlLabel,\n  ButtonToolbar,\n  Button,\n  Modal,\n} from \"rsuite\";\n// import { useHistory } from \"react-router-dom\";\n// import {UserContext} from '../App'\n\nimport { baseUrl } from \"../utils.js\";\n\nconst CreateUser = () => {\n  // const history = useHistory();\n\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const open = () => setIsOpen(true);\n  const close = () => setIsOpen(false);\n\n  const PostData = async () => {\n    await fetch(`${baseUrl}/api/v1/auth/Signup`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (!data.error) {\n          window.location.reload();\n        } else {\n          console.log(data.error);\n        }\n      });\n  };\n\n  return (\n    <div className=\"createUser-container\">\n      <h4>Add new user</h4>\n      <Container>\n        <Button onClick={open} >\n          Add User\n          <Modal\n          show={modalIsOpen}\n          onHide={close()}\n        >\n          <Modal.Header>Add a new User</Modal.Header>\n          <Modal.Body>\n          <Content>\n            <Form fluid>\n              <FormGroup>\n                <ControlLabel>Name</ControlLabel>\n                <input name=\"name\" onChange={(e) => setName(e.target.value)} />\n              </FormGroup>\n\n              <FormGroup>\n                <ControlLabel>Email</ControlLabel>\n                <input\n                  name=\"password\"\n                  type=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <ControlLabel>Password</ControlLabel>\n                <input\n                  name=\"password\"\n                  type=\"password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <ButtonToolbar>\n                  <Button appearance=\"primary\" onClick={() => PostData(), close()}>\n                    Add\n                  </Button>\n                </ButtonToolbar>\n              </FormGroup>\n            </Form>\n          </Content>\n          </Modal.Body>\n          </Modal>\n        </Button>\n      </Container>\n    </div>\n  );\n};\n\nconst Admin = () => {\n\n  const user = JSON.parse(localStorage.getItem(\"user\"))\n\n  console.log(user.role)\n\n  const Render = () => {\n    if(user.role === \"admin\") {\n      return (\n        <div>\n          <CreateUser />\n        </div>\n      ) \n    } else {\n      return (\n        <div>\n          <h1>You do not have the permissions to view this Route</h1>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Render />\n    </div>\n  );\n};\n\nexport default Admin;\n","/Users/jack/Documents/GitHub/winter/client/src/pages/Login.js",["102","103"],"import React, { useState, useContext } from \"react\";\nimport {\n  Container,\n  Content,\n  FlexboxGrid,\n  Panel,\n  Form,\n  FormGroup,\n  ControlLabel,\n  ButtonToolbar,\n  Button,\n} from \"rsuite\";\nimport { useHistory } from \"react-router-dom\";\nimport { GlobalProvider } from '../Context/GlobalState';\n\nimport { baseUrl } from '../utils'\n\nconst Login = () => {\n  const history = useHistory();\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const PostData = async () => {\n    await fetch(`${baseUrl}/api/v1/auth/login`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data)\n        if (!data.error) {\n          localStorage.setItem(\"jwt\", data.token);\n          localStorage.setItem(\"user\", JSON.stringify(data.user))\n          history.push(\"/\");\n        } else {\n          console.log(data.error);\n        }\n      });\n  };\n\n  return (\n    <div>\n      <div>\n        <Container>\n          <Content>\n            <FlexboxGrid justify=\"center\">\n              <FlexboxGrid.Item colspan={12}>\n                <Panel header={<h3>Login</h3>} bordered>\n                  <Form fluid>\n                    <FormGroup>\n                      <ControlLabel>Email</ControlLabel>\n                      <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <ControlLabel>Password</ControlLabel>\n                      <input\n                        name=\"password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <ButtonToolbar>\n                        <Button appearance=\"primary\" onClick={() => {PostData();}}>\n                          Sign in\n                        </Button>\n                        <Button appearance=\"link\">Forgot password?</Button>\n                      </ButtonToolbar>\n                    </FormGroup>\n                  </Form>\n                </Panel>\n              </FlexboxGrid.Item>\n            </FlexboxGrid>\n          </Content>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/jack/Documents/GitHub/winter/client/src/component/Navigation.js",["104"],"import React, { useEffect, useState } from \"react\";\nimport { Navbar, Nav, Icon, Tooltip, Whisper, Modal } from \"rsuite\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Settings from \"./Setings\";\nimport NewTicket from \"./NewTicket\";\n\nconst Navigation = () => {\n  const history = useHistory();\n\n  const tooltip = <Tooltip>Create a new Ticket here</Tooltip>;\n\n  const [ticketmodalIsOpen, setTicketIsOpen] = useState(false);\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [checkAdmin, setCheckAdmin] = useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function openTicketModal() {\n    setTicketIsOpen(true);\n  }\n\n  function closeTicketModal() {\n    setTicketIsOpen(false);\n  }\n\n  function isAdmin() {\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n\n    if(!user) {\n      history.push('/login')\n    }\n\n    if(user.role === \"admin\") {\n      setCheckAdmin(true)\n    } else {\n      setCheckAdmin(false)\n      return;\n    }\n  };\n\n  useEffect(()=>{\n   // isAdmin()\n  },[])\n\n\n\n  const Render = () => {\n\n    if(checkAdmin) {\n      return(\n      <div>\n        <Navbar>\n        <Navbar.Header>\n          <p href=\"#\" className=\"navbar-brand logo\">\n            Project Winter\n          </p>\n        </Navbar.Header>\n        <Navbar.Body>\n          <Nav>\n            <Nav.Item\n              icon={<Icon icon=\"home\" />}\n              onClick={() => history.push(\"/\")}\n            >\n              Home\n            </Nav.Item>\n\n            <Nav.Item onClick={() => history.push(\"/tickets\")}>\n              Tickets\n            </Nav.Item>\n\n            <Nav.Item\n              onClick={() => history.push(\"/timesheet\")}\n              disabled={true}\n            >\n              TimeSheet\n            </Nav.Item>\n\n            <Nav.Item onClick={() => history.push(\"/admin\")} disabled={false}>\n              Admin\n            </Nav.Item>\n          </Nav>\n\n          <Nav pullRight>\n            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={tooltip}>\n              <Nav.Item icon={<Icon icon=\"plus\" />} onClick={openTicketModal}>\n                <Modal\n                  show={ticketmodalIsOpen}\n                  onHide={closeTicketModal}\n                  keyboard={true}\n                >\n                  <h2 style={{ textAlign: \"center\" }}>New ticket</h2>\n                  <Modal.Body>\n                    <NewTicket />\n                  </Modal.Body>\n                </Modal>\n              </Nav.Item>\n            </Whisper>\n\n            <Nav.Item icon={<Icon icon=\"cog\" />} onClick={openModal}>\n              <Modal show={modalIsOpen} onHide={closeModal}>\n                <h2>Settings</h2>\n                <Modal.Body>\n                  <Settings />\n                </Modal.Body>\n              </Modal>\n            </Nav.Item>\n          </Nav>\n        </Navbar.Body>\n      </Navbar>\n      </div>\n      )\n    } else {\n      return (\n      <div>\n        <Navbar>\n        <Navbar.Header>\n          <p href=\"#\" className=\"navbar-brand logo\">\n            Project Winter\n          </p>\n        </Navbar.Header>\n        <Navbar.Body>\n          <Nav>\n            <Nav.Item\n              icon={<Icon icon=\"home\" />}\n              onClick={() => history.push(\"/\")}\n            >\n              Home\n            </Nav.Item>\n\n            <Nav.Item onClick={() => history.push(\"/tickets\")}>\n              Tickets\n            </Nav.Item>\n\n            <Nav.Item\n              onClick={() => history.push(\"/timesheet\")}\n              disabled={true}\n            >\n              TimeSheet\n            </Nav.Item>\n          </Nav>\n\n          <Nav pullRight>\n            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={tooltip}>\n              <Nav.Item icon={<Icon icon=\"plus\" />} onClick={openTicketModal}>\n                <Modal\n                  show={ticketmodalIsOpen}\n                  onHide={closeTicketModal}\n                  keyboard={true}\n                >\n                  <h2 style={{ textAlign: \"center\" }}>New ticket</h2>\n                  <Modal.Body>\n                    <NewTicket />\n                  </Modal.Body>\n                </Modal>\n              </Nav.Item>\n            </Whisper>\n\n            <Nav.Item icon={<Icon icon=\"cog\" />} onClick={openModal}>\n              <Modal show={modalIsOpen} onHide={closeModal}>\n                <h2>Settings</h2>\n                <Modal.Body>\n                  <Settings />\n                </Modal.Body>\n              </Modal>\n            </Nav.Item>\n          </Nav>\n        </Navbar.Body>\n      </Navbar>\n        \n      </div>\n      )\n    }\n  }\n\n  return (\n    <div>\n        <Render />\n    </div>\n  );\n};\n\nexport default Navigation;\n","/Users/jack/Documents/GitHub/winter/client/src/Context/GlobalState.js",["105","106","107"],"/Users/jack/Documents/GitHub/winter/client/src/component/CreateTodo.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/ListNote.js",["108","109","110","111","112","113"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Button } from \"rsuite\";\nimport Popup from 'reactjs-popup';\n\n//import { baseUrl } from \"../utils\";\nimport { GlobalContext } from \"../Context/GlobalState\";\n\nconst ListNote = () => {\n  const { notes, getNotes, deleteNote } = useContext(GlobalContext);\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [isViewOpen, setIsViewOpen] = useState(false);\n\n  const open = () => setIsOpen(true);\n  const close = () => setIsOpen(false);\n\n  const openView = () => setIsViewOpen(true);\n  const viewClose = () => setIsViewOpen(false);\n\n  // console.log(notes)\n\n  useEffect(() => {\n    getNotes();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div>\n      {notes.map((item) => {\n        // console.log(item)\n        return (\n          <div key={item._id} className=\"todo-list\">\n            <ul>\n              <li style={{ marginLeft: -35 }}>\n                {item.title}\n                <Button size=\"xs\" style={{float: \"right\", marginLeft: 5}} onClick={() => deleteNote(item._id)}>Delete</Button>\n                <Button size=\"xs\" style={{float: \"right\", marginLeft: 5}} onClick={open}>\n                  Edit\n                  <Popup modal open={isOpen} closeOnEscape={true}>\n                  <div className=\"modal\">\n                    <Button className=\"close\" onClick={close}>\n                        &times;\n                    </Button>\n                  </div>\n                  </Popup>\n                  </Button>\n                <Button size=\"xs\" style={{float: \"right\", marginLeft: 5}} onClick={openView}>\n                  View\n                  <Popup modal open={isViewOpen} closeOnEscape={true}>\n                  <div className=\"modal\">\n                    <Button className=\"close\" onClick={viewClose}>\n                      &times;\n                    </Button>\n                      <div className=\"header\"> \n                        <h3>{item.title}</h3>\n                      </div>\n                      <div className=\"content\">\n                        <h5>{item.note}</h5>\n                      </div>\n                    </div>\n                  </Popup>\n                  </Button>\n              </li>\n            </ul>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ListNote;\n","/Users/jack/Documents/GitHub/winter/client/src/component/UnissuedTicket.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/ListTodo.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/TicketStats.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/OpenTicket.js",[],"/Users/jack/Documents/GitHub/winter/client/src/Context/AppReducer.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/NewTicket.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/Setings.js",["114"],"import React,{useContext} from 'react'\nimport { Button } from \"rsuite\";\nimport { useHistory } from \"react-router-dom\";\n// import {UserContext} from '../App'\n\nconst Setings = () => {\n  const history = useHistory();\n\n  function logout() {\n    localStorage.clear();\n    history.push(\"/login\");\n  }\n\n  return (\n    <div>\n      <Button onClick={logout}>Logout</Button>\n    </div>\n  );\n};\n\nexport default Setings;\n",{"ruleId":"115","severity":1,"message":"116","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"115","severity":1,"message":"123","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":27},{"ruleId":"115","severity":1,"message":"124","line":6,"column":3,"nodeType":"117","messageId":"118","endLine":6,"endColumn":11},{"ruleId":"115","severity":1,"message":"125","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"126","line":39,"column":11,"nodeType":"117","messageId":"118","endLine":39,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":89,"column":73,"nodeType":"129","messageId":"130","endLine":89,"endColumn":74},{"ruleId":"115","severity":1,"message":"123","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":37},{"ruleId":"115","severity":1,"message":"131","line":14,"column":10,"nodeType":"117","messageId":"118","endLine":14,"endColumn":24},{"ruleId":"115","severity":1,"message":"132","line":33,"column":12,"nodeType":"117","messageId":"118","endLine":33,"endColumn":19},{"ruleId":"115","severity":1,"message":"125","line":1,"column":44,"nodeType":"117","messageId":"118","endLine":1,"endColumn":53},{"ruleId":"115","severity":1,"message":"116","line":1,"column":55,"nodeType":"117","messageId":"118","endLine":1,"endColumn":63},{"ruleId":"115","severity":1,"message":"133","line":5,"column":10,"nodeType":"117","messageId":"118","endLine":5,"endColumn":20},{"ruleId":"115","severity":1,"message":"134","line":10,"column":10,"nodeType":"117","messageId":"118","endLine":10,"endColumn":16},{"ruleId":"115","severity":1,"message":"135","line":11,"column":10,"nodeType":"117","messageId":"118","endLine":11,"endColumn":20},{"ruleId":"115","severity":1,"message":"136","line":13,"column":9,"nodeType":"117","messageId":"118","endLine":13,"endColumn":13},{"ruleId":"115","severity":1,"message":"137","line":14,"column":9,"nodeType":"117","messageId":"118","endLine":14,"endColumn":14},{"ruleId":"115","severity":1,"message":"138","line":16,"column":9,"nodeType":"117","messageId":"118","endLine":16,"endColumn":17},{"ruleId":"115","severity":1,"message":"139","line":17,"column":9,"nodeType":"117","messageId":"118","endLine":17,"endColumn":18},{"ruleId":"115","severity":1,"message":"123","line":1,"column":15,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["140"],"no-negated-in-lhs",["141"],"'useContext' is defined but never used.","'Redirect' is defined but never used.","'useEffect' is defined but never used.","'notes' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'GlobalProvider' is defined but never used.","'isAdmin' is defined but never used.","'useHistory' is defined but never used.","'isOpen' is assigned a value but never used.","'isViewOpen' is assigned a value but never used.","'open' is assigned a value but never used.","'close' is assigned a value but never used.","'openView' is assigned a value but never used.","'viewClose' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]