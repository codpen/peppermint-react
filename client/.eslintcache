[{"/Users/jack/Documents/GitHub/winter/client/src/index.js":"1","/Users/jack/Documents/GitHub/winter/client/src/App.js":"2","/Users/jack/Documents/GitHub/winter/client/src/pages/Home.js":"3","/Users/jack/Documents/GitHub/winter/client/src/pages/Ticket.js":"4","/Users/jack/Documents/GitHub/winter/client/src/pages/Monitor.js":"5","/Users/jack/Documents/GitHub/winter/client/src/pages/Login.js":"6","/Users/jack/Documents/GitHub/winter/client/src/pages/Reg.js":"7","/Users/jack/Documents/GitHub/winter/client/src/pages/Admin.js":"8","/Users/jack/Documents/GitHub/winter/client/src/component/Navigation.js":"9","/Users/jack/Documents/GitHub/winter/client/src/utils.js":"10","/Users/jack/Documents/GitHub/winter/client/src/component/OpenTicket.js":"11","/Users/jack/Documents/GitHub/winter/client/src/component/Setings.js":"12","/Users/jack/Documents/GitHub/winter/client/src/component/NewTicket.js":"13","/Users/jack/Documents/GitHub/winter/client/src/component/TicketStats.js":"14","/Users/jack/Documents/GitHub/winter/client/src/component/UnissuedTicket.js":"15","/Users/jack/Documents/GitHub/winter/client/src/component/CreateTodo.js":"16","/Users/jack/Documents/GitHub/winter/client/src/component/ListTodo.js":"17","/Users/jack/Documents/GitHub/winter/client/src/component/ListNote.js":"18","/Users/jack/Documents/GitHub/winter/client/src/reducers/userReducer.js":"19","/Users/jack/Documents/GitHub/winter/client/src/pages/Reset.js":"20"},{"size":465,"mtime":1606942187182,"results":"21","hashOfConfig":"22"},{"size":2088,"mtime":1607293650582,"results":"23","hashOfConfig":"22"},{"size":3554,"mtime":1607293607463,"results":"24","hashOfConfig":"22"},{"size":452,"mtime":1606942187183,"results":"25","hashOfConfig":"22"},{"size":1055,"mtime":1606948837448,"results":"26","hashOfConfig":"22"},{"size":2670,"mtime":1607290526970,"results":"27","hashOfConfig":"22"},{"size":2595,"mtime":1606942187183,"results":"28","hashOfConfig":"22"},{"size":2567,"mtime":1607292167822,"results":"29","hashOfConfig":"22"},{"size":4620,"mtime":1607293607484,"results":"30","hashOfConfig":"22"},{"size":47,"mtime":1607293607463,"results":"31","hashOfConfig":"22"},{"size":4355,"mtime":1607293607456,"results":"32","hashOfConfig":"22"},{"size":485,"mtime":1607291157862,"results":"33","hashOfConfig":"22"},{"size":2960,"mtime":1607293607454,"results":"34","hashOfConfig":"22"},{"size":2375,"mtime":1607293607457,"results":"35","hashOfConfig":"22"},{"size":2696,"mtime":1607293607460,"results":"36","hashOfConfig":"22"},{"size":918,"mtime":1607293607446,"results":"37","hashOfConfig":"22"},{"size":3119,"mtime":1607293607451,"results":"38","hashOfConfig":"22"},{"size":1390,"mtime":1607293607448,"results":"39","hashOfConfig":"22"},{"size":215,"mtime":1607288474802,"results":"40","hashOfConfig":"22"},{"size":134,"mtime":1607289465962,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1q9gr7o",{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/jack/Documents/GitHub/winter/client/src/index.js",[],["89","90"],"/Users/jack/Documents/GitHub/winter/client/src/App.js",["91","92","93"],"/Users/jack/Documents/GitHub/winter/client/src/pages/Home.js",["94"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Header,\n  Content,\n  Divider,\n  Button,\n  Icon,\n  Input,\n} from \"rsuite\";\nimport Popup from 'reactjs-popup';\n\n\nimport Navigation from \"../component/Navigation\";\nimport CreateTodo from \"../component/CreateTodo\";\nimport ListTodo from \"../component/ListTodo\";\nimport TicketStats from \"../component/TicketStats\";\nimport ListNote from \"../component/ListNote\";\n// import TextEditor from \"../component/NotesEditor\";\n\nimport { baseUrl } from \"../utils\";\n\nconst Todo = () => {\n  return (\n    <div className=\"Todo-Container\">\n      <h3>Todo List</h3>\n      <Divider />\n      <CreateTodo />\n      <ListTodo />\n    </div>\n  );\n};\n\nconst Notes = () => {\n  const [text, setText] = useState(\"\");\n  const [title, setTitle] = useState('');\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  \n  const open = () => setModalIsOpen(true);\n  const close = () => setModalIsOpen(false);\n\n  const PostData = async () => {\n    await fetch(`${baseUrl}/api/v1/note/saveNote`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        text,\n        title\n      }),\n    }).then((res) => res.json());\n  };\n\n  return (\n    <div className=\"Notes-Container\">\n      <h3>\n        Notes\n        <Button onClick={open} style={{ float: \"right\" }}>\n        <Icon icon=\"plus\" />\n        <Popup modal open={modalIsOpen} nested={true}>\n        <div className=\"modal\">\n        <Button className=\"close\" onClick={close}>\n          &times;\n        </Button>\n        <div className=\"header\"> <Input placeholder=\"Enter Note title here...\" onChange={setTitle} /></div>\n        <div className=\"content\">\n          <Input placeholder=\"Enter Note here...\" rows={10} componentClass=\"textarea\" onChange={setText} />\n        </div>\n        <div className=\"actions\">\n        <Button\n            style={{marginRight: 20}}\n            className=\"button\"\n            onClick={() => {\n              console.log('Data sent');\n              PostData()\n              close()\n              window.location.reload();\n            }}\n          >\n            Save Note\n          </Button>\n          <Button\n            className=\"button\"\n            onClick={() => {\n              console.log('modal closed ');\n              close();\n              window.location.reload();\n            }}\n          >\n            close modal\n          </Button>\n        </div>\n      </div>\n        </Popup>\n        </Button>\n      </h3>\n      <Divider />\n      <ListNote />\n    </div>\n  );\n};\n\nconst Issues = () => {\n  return (\n    <div className=\"Issue-Container\">\n      <TicketStats />\n    </div>\n  );\n};\n\nconst Home = () => {\n  return (\n    <div>\n      <Container>\n        <Header>\n          <Navigation />\n        </Header>\n\n        <Container>\n          <Content>\n            <Todo />\n          </Content>\n        </Container>\n\n        <Container>\n          <Notes />\n        </Container>\n\n        <Container>\n          <Issues />\n        </Container>\n      </Container>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/jack/Documents/GitHub/winter/client/src/pages/Ticket.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Monitor.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Login.js",["95"],"import React, { useState, useContext } from \"react\";\nimport {\n  Container,\n  Content,\n  FlexboxGrid,\n  Panel,\n  Form,\n  FormGroup,\n  ControlLabel,\n  ButtonToolbar,\n  Button,\n} from \"rsuite\";\nimport { useHistory } from \"react-router-dom\";\nimport {UserContext} from '../App'\n\nimport { baseUrl } from '../utils'\n\nconst Login = () => {\n  const history = useHistory();\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const {state,dispatch} = useContext(UserContext)\n\n  const PostData = async () => {\n    await fetch(`${baseUrl}/api/v1/auth/login`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data)\n        if (!data.error) {\n          localStorage.setItem(\"jwt\", data.token);\n          localStorage.setItem(\"user\", JSON.stringify(data.user))\n          dispatch({type:\"USER\",  payload:data.user})\n          history.push(\"/dash\");\n        } else {\n          console.log(data.error);\n        }\n      });\n  };\n\n  return (\n    <div>\n      <div>\n        <Container>\n          <Content>\n            <FlexboxGrid justify=\"center\">\n              <FlexboxGrid.Item colspan={12}>\n                <Panel header={<h3>Login</h3>} bordered>\n                  <Form fluid>\n                    <FormGroup>\n                      <ControlLabel>Email</ControlLabel>\n                      <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <ControlLabel>Password</ControlLabel>\n                      <input\n                        name=\"password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <ButtonToolbar>\n                        <Button appearance=\"primary\" onClick={() => {PostData();}}>\n                          Sign in\n                        </Button>\n                        <Button appearance=\"link\">Forgot password?</Button>\n                      </ButtonToolbar>\n                    </FormGroup>\n                  </Form>\n                </Panel>\n              </FlexboxGrid.Item>\n            </FlexboxGrid>\n          </Content>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/jack/Documents/GitHub/winter/client/src/pages/Reg.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Admin.js",["96","97","98"],"import React, { useState, useContext, } from \"react\";\nimport {\n  Container,\n  Content,\n  Form,\n  FormGroup,\n  ControlLabel,\n  ButtonToolbar,\n  Button,\n} from \"rsuite\";\n// import { useHistory } from \"react-router-dom\";\nimport {UserContext} from '../App'\n\nimport { baseUrl } from \"../utils.js\";\n\nconst CreateUser = () => {\n  // const history = useHistory();\n\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  const PostData = async () => {\n    await fetch(`${baseUrl}/api/v1/auth/Signup`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (!data.error) {\n          window.location.reload();\n        } else {\n          console.log(data.error);\n        }\n      });\n  };\n\n  return (\n    <div className=\"createUser-container\">\n      <h4>Add new user</h4>\n      <Container>\n        <Content>\n          <Form fluid>\n            <FormGroup>\n              <ControlLabel>Name</ControlLabel>\n              <input name=\"name\" onChange={(e) => setName(e.target.value)} />\n            </FormGroup>\n\n            <FormGroup>\n              <ControlLabel>Email</ControlLabel>\n              <input\n                name=\"password\"\n                type=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <ControlLabel>Password</ControlLabel>\n              <input\n                name=\"password\"\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <ButtonToolbar>\n                <Button appearance=\"primary\" onClick={() => PostData()}>\n                  Sign Up\n                </Button>\n              </ButtonToolbar>\n            </FormGroup>\n          </Form>\n        </Content>\n      </Container>\n    </div>\n  );\n};\n\nconst Admin = () => {\n\n  const user = JSON.parse(localStorage.getItem(\"user\"))\n\n  console.log(user.role)\n\n  const Render = () => {\n    if(user == \"admin\") {\n      return (\n        <div>\n          <CreateUser />\n        </div>\n      ) \n    } else {\n      return (\n        <div>\n          <h1>You do not have the permissions to view this Route</h1>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Render />\n    </div>\n  );\n};\n\nexport default Admin;\n","/Users/jack/Documents/GitHub/winter/client/src/component/Navigation.js",["99"],"import React, { useEffect, useState } from \"react\";\nimport { Navbar, Nav, Icon, Tooltip, Whisper, Modal } from \"rsuite\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Settings from \"./Setings\";\nimport NewTicket from \"./NewTicket\";\n\nconst Navigation = () => {\n  const history = useHistory();\n\n  const tooltip = <Tooltip>Create a new Ticket here</Tooltip>;\n\n  const [ticketmodalIsOpen, setTicketIsOpen] = useState(false);\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [checkAdmin, setCheckAdmin] = useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function openTicketModal() {\n    setTicketIsOpen(true);\n  }\n\n  function closeTicketModal() {\n    setTicketIsOpen(false);\n  }\n\n  function isAdmin() {\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n\n    if(user == \"admin\") {\n      setCheckAdmin(true)\n    } else {\n      setCheckAdmin(false)\n      return;\n    }\n  };\n\n  useEffect(()=>{\n    isAdmin()\n  },[])\n\n\n\n  const Render = () => {\n\n    if(checkAdmin) {\n      return(\n      <div>\n        <Navbar>\n        <Navbar.Header>\n          <p href=\"#\" className=\"navbar-brand logo\">\n            Project Winter\n          </p>\n        </Navbar.Header>\n        <Navbar.Body>\n          <Nav>\n            <Nav.Item\n              icon={<Icon icon=\"home\" />}\n              onClick={() => history.push(\"/\")}\n            >\n              Home\n            </Nav.Item>\n\n            <Nav.Item onClick={() => history.push(\"/tickets\")}>\n              Tickets\n            </Nav.Item>\n\n            <Nav.Item\n              onClick={() => history.push(\"/timesheet\")}\n              disabled={true}\n            >\n              TimeSheet\n            </Nav.Item>\n\n            <Nav.Item onClick={() => history.push(\"/admin\")} disabled={false}>\n              Admin\n            </Nav.Item>\n          </Nav>\n\n          <Nav pullRight>\n            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={tooltip}>\n              <Nav.Item icon={<Icon icon=\"plus\" />} onClick={openTicketModal}>\n                <Modal\n                  show={ticketmodalIsOpen}\n                  onHide={closeTicketModal}\n                  keyboard={true}\n                >\n                  <h2 style={{ textAlign: \"center\" }}>New ticket</h2>\n                  <Modal.Body>\n                    <NewTicket />\n                  </Modal.Body>\n                </Modal>\n              </Nav.Item>\n            </Whisper>\n\n            <Nav.Item icon={<Icon icon=\"cog\" />} onClick={openModal}>\n              <Modal show={modalIsOpen} onHide={closeModal}>\n                <h2>Settings</h2>\n                <Modal.Body>\n                  <Settings />\n                </Modal.Body>\n              </Modal>\n            </Nav.Item>\n          </Nav>\n        </Navbar.Body>\n      </Navbar>\n      </div>\n      )\n    } else {\n      return (\n      <div>\n        <Navbar>\n        <Navbar.Header>\n          <p href=\"#\" className=\"navbar-brand logo\">\n            Project Winter\n          </p>\n        </Navbar.Header>\n        <Navbar.Body>\n          <Nav>\n            <Nav.Item\n              icon={<Icon icon=\"home\" />}\n              onClick={() => history.push(\"/\")}\n            >\n              Home\n            </Nav.Item>\n\n            <Nav.Item onClick={() => history.push(\"/tickets\")}>\n              Tickets\n            </Nav.Item>\n\n            <Nav.Item\n              onClick={() => history.push(\"/timesheet\")}\n              disabled={true}\n            >\n              TimeSheet\n            </Nav.Item>\n          </Nav>\n\n          <Nav pullRight>\n            <Whisper placement=\"bottom\" trigger=\"hover\" speaker={tooltip}>\n              <Nav.Item icon={<Icon icon=\"plus\" />} onClick={openTicketModal}>\n                <Modal\n                  show={ticketmodalIsOpen}\n                  onHide={closeTicketModal}\n                  keyboard={true}\n                >\n                  <h2 style={{ textAlign: \"center\" }}>New ticket</h2>\n                  <Modal.Body>\n                    <NewTicket />\n                  </Modal.Body>\n                </Modal>\n              </Nav.Item>\n            </Whisper>\n\n            <Nav.Item icon={<Icon icon=\"cog\" />} onClick={openModal}>\n              <Modal show={modalIsOpen} onHide={closeModal}>\n                <h2>Settings</h2>\n                <Modal.Body>\n                  <Settings />\n                </Modal.Body>\n              </Modal>\n            </Nav.Item>\n          </Nav>\n        </Navbar.Body>\n      </Navbar>\n        \n      </div>\n      )\n    }\n  }\n\n  return (\n    <div>\n        <Render />\n    </div>\n  );\n};\n\nexport default Navigation;\n","/Users/jack/Documents/GitHub/winter/client/src/utils.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/OpenTicket.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/Setings.js",["100"],"import React,{useContext} from 'react'\nimport { Button } from \"rsuite\";\nimport { useHistory } from \"react-router-dom\";\nimport {UserContext} from '../App'\n\nconst Setings = () => {\n  const history = useHistory();\n  const {state,dispatch} = useContext(UserContext)\n\n  function logout() {\n    localStorage.clear();\n    dispatch({type:\"CLEAR\"})\n    history.push(\"/Login\");\n  }\n\n  return (\n    <div>\n      <Button onClick={logout}>Logout</Button>\n    </div>\n  );\n};\n\nexport default Setings;\n","/Users/jack/Documents/GitHub/winter/client/src/component/NewTicket.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/TicketStats.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/UnissuedTicket.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/CreateTodo.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/ListTodo.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/ListNote.js",[],"/Users/jack/Documents/GitHub/winter/client/src/reducers/userReducer.js",["101","102"],"export const initialState = null\n\nexport const reducer = (state,action)=>{\n    if(action.type==\"USER\"){\n        return action.payload\n    }\n    if(action.type==\"CLEAR\"){\n        return null\n    }\n    return state\n} ","/Users/jack/Documents/GitHub/winter/client/src/pages/Reset.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":4,"column":3,"nodeType":"109","messageId":"110","endLine":4,"endColumn":13},{"ruleId":"107","severity":1,"message":"111","line":14,"column":3,"nodeType":"109","messageId":"110","endLine":14,"endColumn":14},{"ruleId":"107","severity":1,"message":"112","line":34,"column":9,"nodeType":"109","messageId":"110","endLine":34,"endColumn":16},{"ruleId":"107","severity":1,"message":"113","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"114","line":23,"column":10,"nodeType":"109","messageId":"110","endLine":23,"endColumn":15},{"ruleId":"107","severity":1,"message":"108","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":37},{"ruleId":"107","severity":1,"message":"115","line":12,"column":9,"nodeType":"109","messageId":"110","endLine":12,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":95,"column":13,"nodeType":"118","messageId":"119","endLine":95,"endColumn":15},{"ruleId":"116","severity":1,"message":"117","line":37,"column":13,"nodeType":"118","messageId":"119","endLine":37,"endColumn":15},{"ruleId":"107","severity":1,"message":"114","line":8,"column":10,"nodeType":"109","messageId":"110","endLine":8,"endColumn":15},{"ruleId":"116","severity":1,"message":"117","line":4,"column":19,"nodeType":"118","messageId":"119","endLine":4,"endColumn":21},{"ruleId":"116","severity":1,"message":"117","line":7,"column":19,"nodeType":"118","messageId":"119","endLine":7,"endColumn":21},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'history' is assigned a value but never used.","'useEffect' is defined but never used.","'state' is assigned a value but never used.","'UserContext' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]