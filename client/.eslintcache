[{"/Users/jack/Documents/GitHub/winter/client/src/index.js":"1","/Users/jack/Documents/GitHub/winter/client/src/App.js":"2","/Users/jack/Documents/GitHub/winter/client/src/Context/GlobalState.js":"3","/Users/jack/Documents/GitHub/winter/client/src/pages/Ticket.js":"4","/Users/jack/Documents/GitHub/winter/client/src/pages/Monitor.js":"5","/Users/jack/Documents/GitHub/winter/client/src/pages/Reset.js":"6","/Users/jack/Documents/GitHub/winter/client/src/utils.js":"7","/Users/jack/Documents/GitHub/winter/client/src/pages/Reg.js":"8","/Users/jack/Documents/GitHub/winter/client/src/pages/Login.js":"9","/Users/jack/Documents/GitHub/winter/client/src/pages/Admin.js":"10","/Users/jack/Documents/GitHub/winter/client/src/pages/Home.js":"11","/Users/jack/Documents/GitHub/winter/client/src/Context/AppReducer.js":"12","/Users/jack/Documents/GitHub/winter/client/src/component/Navigation.js":"13","/Users/jack/Documents/GitHub/winter/client/src/component/UnissuedTicket.js":"14","/Users/jack/Documents/GitHub/winter/client/src/component/OpenTicket.js":"15","/Users/jack/Documents/GitHub/winter/client/src/component/TicketStats.js":"16","/Users/jack/Documents/GitHub/winter/client/src/component/CreateTodo.js":"17","/Users/jack/Documents/GitHub/winter/client/src/component/ListTodo.js":"18","/Users/jack/Documents/GitHub/winter/client/src/component/ListNote.js":"19","/Users/jack/Documents/GitHub/winter/client/src/component/Setings.js":"20","/Users/jack/Documents/GitHub/winter/client/src/component/NewTicket.js":"21"},{"size":583,"mtime":1607374209453,"results":"22","hashOfConfig":"23"},{"size":1738,"mtime":1607374209449,"results":"24","hashOfConfig":"23"},{"size":4605,"mtime":1607382087267,"results":"25","hashOfConfig":"23"},{"size":452,"mtime":1606942187183,"results":"26","hashOfConfig":"23"},{"size":1055,"mtime":1606948837448,"results":"27","hashOfConfig":"23"},{"size":134,"mtime":1607289465962,"results":"28","hashOfConfig":"23"},{"size":47,"mtime":1607293607463,"results":"29","hashOfConfig":"23"},{"size":2595,"mtime":1606942187183,"results":"30","hashOfConfig":"23"},{"size":2564,"mtime":1607296026050,"results":"31","hashOfConfig":"23"},{"size":3045,"mtime":1607294765643,"results":"32","hashOfConfig":"23"},{"size":2807,"mtime":1607379945349,"results":"33","hashOfConfig":"23"},{"size":1298,"mtime":1607382233416,"results":"34","hashOfConfig":"23"},{"size":4626,"mtime":1607293791189,"results":"35","hashOfConfig":"23"},{"size":2696,"mtime":1607293607460,"results":"36","hashOfConfig":"23"},{"size":4355,"mtime":1607293607456,"results":"37","hashOfConfig":"23"},{"size":2375,"mtime":1607293607457,"results":"38","hashOfConfig":"23"},{"size":762,"mtime":1607374209450,"results":"39","hashOfConfig":"23"},{"size":1711,"mtime":1607376753833,"results":"40","hashOfConfig":"23"},{"size":1411,"mtime":1607381988139,"results":"41","hashOfConfig":"23"},{"size":405,"mtime":1607296036411,"results":"42","hashOfConfig":"23"},{"size":2960,"mtime":1607293607454,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1q9gr7o",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/jack/Documents/GitHub/winter/client/src/index.js",[],["91","92"],"/Users/jack/Documents/GitHub/winter/client/src/App.js",[],"/Users/jack/Documents/GitHub/winter/client/src/Context/GlobalState.js",["93"],"/Users/jack/Documents/GitHub/winter/client/src/pages/Ticket.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Monitor.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Reset.js",[],"/Users/jack/Documents/GitHub/winter/client/src/utils.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Reg.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Login.js",["94","95"],"import React, { useState, useContext } from \"react\";\nimport {\n  Container,\n  Content,\n  FlexboxGrid,\n  Panel,\n  Form,\n  FormGroup,\n  ControlLabel,\n  ButtonToolbar,\n  Button,\n} from \"rsuite\";\nimport { useHistory } from \"react-router-dom\";\nimport {UserContext} from '../App'\n\nimport { baseUrl } from '../utils'\n\nconst Login = () => {\n  const history = useHistory();\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const PostData = async () => {\n    await fetch(`${baseUrl}/api/v1/auth/login`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data)\n        if (!data.error) {\n          localStorage.setItem(\"jwt\", data.token);\n          localStorage.setItem(\"user\", JSON.stringify(data.user))\n          history.push(\"/dash\");\n        } else {\n          console.log(data.error);\n        }\n      });\n  };\n\n  return (\n    <div>\n      <div>\n        <Container>\n          <Content>\n            <FlexboxGrid justify=\"center\">\n              <FlexboxGrid.Item colspan={12}>\n                <Panel header={<h3>Login</h3>} bordered>\n                  <Form fluid>\n                    <FormGroup>\n                      <ControlLabel>Email</ControlLabel>\n                      <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <ControlLabel>Password</ControlLabel>\n                      <input\n                        name=\"password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <ButtonToolbar>\n                        <Button appearance=\"primary\" onClick={() => {PostData();}}>\n                          Sign in\n                        </Button>\n                        <Button appearance=\"link\">Forgot password?</Button>\n                      </ButtonToolbar>\n                    </FormGroup>\n                  </Form>\n                </Panel>\n              </FlexboxGrid.Item>\n            </FlexboxGrid>\n          </Content>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/jack/Documents/GitHub/winter/client/src/pages/Admin.js",["96"],"import React, { useState,  } from \"react\";\nimport {\n  Container,\n  Content,\n  Form,\n  FormGroup,\n  ControlLabel,\n  ButtonToolbar,\n  Button,\n  Modal,\n} from \"rsuite\";\n// import { useHistory } from \"react-router-dom\";\n// import {UserContext} from '../App'\n\nimport { baseUrl } from \"../utils.js\";\n\nconst CreateUser = () => {\n  // const history = useHistory();\n\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const open = () => setIsOpen(true);\n  const close = () => setIsOpen(false);\n\n  const PostData = async () => {\n    await fetch(`${baseUrl}/api/v1/auth/Signup`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (!data.error) {\n          window.location.reload();\n        } else {\n          console.log(data.error);\n        }\n      });\n  };\n\n  return (\n    <div className=\"createUser-container\">\n      <h4>Add new user</h4>\n      <Container>\n        <Button onClick={open} >\n          Add User\n          <Modal\n          show={modalIsOpen}\n          onHide={close()}\n        >\n          <Modal.Header>Add a new User</Modal.Header>\n          <Modal.Body>\n          <Content>\n            <Form fluid>\n              <FormGroup>\n                <ControlLabel>Name</ControlLabel>\n                <input name=\"name\" onChange={(e) => setName(e.target.value)} />\n              </FormGroup>\n\n              <FormGroup>\n                <ControlLabel>Email</ControlLabel>\n                <input\n                  name=\"password\"\n                  type=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <ControlLabel>Password</ControlLabel>\n                <input\n                  name=\"password\"\n                  type=\"password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <ButtonToolbar>\n                  <Button appearance=\"primary\" onClick={() => PostData(), close()}>\n                    Add\n                  </Button>\n                </ButtonToolbar>\n              </FormGroup>\n            </Form>\n          </Content>\n          </Modal.Body>\n          </Modal>\n        </Button>\n      </Container>\n    </div>\n  );\n};\n\nconst Admin = () => {\n\n  const user = JSON.parse(localStorage.getItem(\"user\"))\n\n  console.log(user.role)\n\n  const Render = () => {\n    if(user.role === \"admin\") {\n      return (\n        <div>\n          <CreateUser />\n        </div>\n      ) \n    } else {\n      return (\n        <div>\n          <h1>You do not have the permissions to view this Route</h1>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Render />\n    </div>\n  );\n};\n\nexport default Admin;\n","/Users/jack/Documents/GitHub/winter/client/src/pages/Home.js",["97","98"],"import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Container,\n  Header,\n  Content,\n  Divider,\n  Button,\n  Icon,\n  Input,\n} from \"rsuite\";\nimport Popup from 'reactjs-popup';\n\n\nimport Navigation from \"../component/Navigation\";\nimport CreateTodo from \"../component/CreateTodo\";\nimport ListTodo from \"../component/ListTodo\";\nimport TicketStats from \"../component/TicketStats\";\nimport ListNote from \"../component/ListNote\";\n\n// import { baseUrl } from \"../utils\";\nimport { GlobalContext } from '../Context/GlobalState';\n\nconst Todo = () => {\n  return (\n    <div className=\"Todo-Container\">\n      <h3>Todo List</h3>\n      <Divider />\n      <CreateTodo />\n      <ListTodo />\n    </div>\n  );\n};\n\nconst Notes = () => {\n  const [text, setText] = useState(\"\");\n  const [title, setTitle] = useState('');\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const { notes, saveNote } = useContext(GlobalContext);  \n\n  \n  const open = () => setModalIsOpen(true);\n  const close = () => setModalIsOpen(false);\n\n  return (\n    <div className=\"Notes-Container\">\n      <h3>\n        Notes\n        <Button onClick={open} style={{ float: \"right\" }}>\n        <Icon icon=\"plus\" />\n        <Popup modal open={modalIsOpen} nested={true}>\n        <div className=\"modal\">\n        <Button className=\"close\" onClick={close}>\n          &times;\n        </Button>\n        <div className=\"header\"> <Input placeholder=\"Enter Note title here...\" onChange={setTitle} /></div>\n        <div className=\"content\">\n          <Input placeholder=\"Enter Note here...\" rows={10} componentClass=\"textarea\" onChange={setText} />\n        </div>\n        <div className=\"actions\">\n        <Button\n            style={{marginRight: 20}}\n            className=\"button\"\n            onClick={() => {\n              console.log('Data sent');\n              saveNote(text, title)\n              close()\n            }}\n          >\n            Save Note\n          </Button>\n          <Button\n            className=\"button\"\n            onClick={() => {\n              console.log('modal closed ');\n              close();\n            }}\n          >\n            Close\n          </Button>\n        </div>\n      </div>\n        </Popup>\n        </Button>\n      </h3>\n      <Divider />\n      <ListNote />\n    </div>\n  );\n};\n\nconst Issues = () => {\n  return (\n    <div className=\"Issue-Container\">\n      <TicketStats />\n    </div>\n  );\n};\n\nconst Home = () => {\n  return (\n    <div>\n      <Container>\n        <Header>\n          <Navigation />\n        </Header>\n\n        <Container>\n          <Content>\n            <Todo />\n          </Content>\n        </Container>\n\n        <Container>\n          <Notes />\n        </Container>\n\n        <Container>\n          <Issues />\n        </Container>\n      </Container>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/jack/Documents/GitHub/winter/client/src/Context/AppReducer.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/Navigation.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/UnissuedTicket.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/OpenTicket.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/TicketStats.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/CreateTodo.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/ListTodo.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/ListNote.js",["99","100","101","102","103","104"],"/Users/jack/Documents/GitHub/winter/client/src/component/Setings.js",["105","106"],"import React,{useContext} from 'react'\nimport { Button } from \"rsuite\";\nimport { useHistory } from \"react-router-dom\";\nimport {UserContext} from '../App'\n\nconst Setings = () => {\n  const history = useHistory();\n\n  function logout() {\n    localStorage.clear();\n    history.push(\"/Login\");\n  }\n\n  return (\n    <div>\n      <Button onClick={logout}>Logout</Button>\n    </div>\n  );\n};\n\nexport default Setings;\n","/Users/jack/Documents/GitHub/winter/client/src/component/NewTicket.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":44,"nodeType":"113","messageId":"114","endLine":1,"endColumn":54},{"ruleId":"111","severity":1,"message":"112","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":37},{"ruleId":"111","severity":1,"message":"115","line":14,"column":9,"nodeType":"113","messageId":"114","endLine":14,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":89,"column":73,"nodeType":"118","messageId":"119","endLine":89,"endColumn":74},{"ruleId":"111","severity":1,"message":"120","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"121","line":39,"column":11,"nodeType":"113","messageId":"114","endLine":39,"endColumn":16},{"ruleId":"111","severity":1,"message":"122","line":10,"column":10,"nodeType":"113","messageId":"114","endLine":10,"endColumn":16},{"ruleId":"111","severity":1,"message":"123","line":11,"column":10,"nodeType":"113","messageId":"114","endLine":11,"endColumn":20},{"ruleId":"111","severity":1,"message":"124","line":13,"column":9,"nodeType":"113","messageId":"114","endLine":13,"endColumn":13},{"ruleId":"111","severity":1,"message":"125","line":14,"column":9,"nodeType":"113","messageId":"114","endLine":14,"endColumn":14},{"ruleId":"111","severity":1,"message":"126","line":16,"column":9,"nodeType":"113","messageId":"114","endLine":16,"endColumn":17},{"ruleId":"111","severity":1,"message":"127","line":17,"column":9,"nodeType":"113","messageId":"114","endLine":17,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":1,"column":15,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"115","line":4,"column":9,"nodeType":"113","messageId":"114","endLine":4,"endColumn":20},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'UserContext' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useEffect' is defined but never used.","'notes' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'isViewOpen' is assigned a value but never used.","'open' is assigned a value but never used.","'close' is assigned a value but never used.","'openView' is assigned a value but never used.","'viewClose' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]