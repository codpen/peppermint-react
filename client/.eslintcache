[{"D:\\Git\\Peppermint\\client\\src\\index.js":"1","D:\\Git\\Peppermint\\client\\src\\App.js":"2","D:\\Git\\Peppermint\\client\\src\\Context\\GlobalState.js":"3","D:\\Git\\Peppermint\\client\\src\\pages\\Home.js":"4","D:\\Git\\Peppermint\\client\\src\\pages\\Ticket.js":"5","D:\\Git\\Peppermint\\client\\src\\component\\Navigation.js":"6","D:\\Git\\Peppermint\\client\\src\\pages\\Reg.js":"7","D:\\Git\\Peppermint\\client\\src\\pages\\admin\\ClientList.js":"8","D:\\Git\\Peppermint\\client\\src\\pages\\admin\\Dash.js":"9","D:\\Git\\Peppermint\\client\\src\\pages\\admin\\Analytics.js":"10","D:\\Git\\Peppermint\\client\\src\\component\\admin\\SideNav.js":"11","D:\\Git\\Peppermint\\client\\src\\Context\\AppReducer.js":"12","D:\\Git\\Peppermint\\client\\src\\pages\\Login\\Login.js":"13","D:\\Git\\Peppermint\\client\\src\\utils.js":"14","D:\\Git\\Peppermint\\client\\src\\component\\ListNote.js":"15","D:\\Git\\Peppermint\\client\\src\\component\\CreateTodo.js":"16","D:\\Git\\Peppermint\\client\\src\\component\\ListTodo.js":"17","D:\\Git\\Peppermint\\client\\src\\component\\TicketStats.js":"18","D:\\Git\\Peppermint\\client\\src\\component\\UnissuedTicket.js":"19","D:\\Git\\Peppermint\\client\\src\\component\\OpenTicket.js":"20","D:\\Git\\Peppermint\\client\\src\\component\\NewTicket.js":"21","D:\\Git\\Peppermint\\client\\src\\component\\admin\\ResetPassword.js":"22","D:\\Git\\Peppermint\\client\\src\\component\\admin\\CreateUser.js":"23","D:\\Git\\Peppermint\\client\\src\\component\\admin\\ChangeRole.js":"24","D:\\Git\\Peppermint\\client\\src\\component\\admin\\CreateClient.js":"25","D:\\Git\\Peppermint\\client\\src\\pages\\Monitor.js":"26","D:\\Git\\Peppermint\\client\\src\\component\\admin\\EditInfo.js":"27","D:\\Git\\Peppermint\\client\\src\\pages\\admin\\EditUserInfo.js":"28"},{"size":614,"mtime":1607982662733,"results":"29","hashOfConfig":"30"},{"size":1984,"mtime":1608040782230,"results":"31","hashOfConfig":"30"},{"size":6183,"mtime":1607982662726,"results":"32","hashOfConfig":"30"},{"size":3940,"mtime":1607982662734,"results":"33","hashOfConfig":"30"},{"size":797,"mtime":1607982662737,"results":"34","hashOfConfig":"30"},{"size":5421,"mtime":1608026593076,"results":"35","hashOfConfig":"30"},{"size":2694,"mtime":1607982662737,"results":"36","hashOfConfig":"30"},{"size":2231,"mtime":1607982662738,"results":"37","hashOfConfig":"30"},{"size":937,"mtime":1607982662738,"results":"38","hashOfConfig":"30"},{"size":168,"mtime":1607982662738,"results":"39","hashOfConfig":"30"},{"size":1625,"mtime":1608031310675,"results":"40","hashOfConfig":"30"},{"size":1288,"mtime":1607982662726,"results":"41","hashOfConfig":"30"},{"size":2581,"mtime":1607982662736,"results":"42","hashOfConfig":"30"},{"size":48,"mtime":1607982662739,"results":"43","hashOfConfig":"30"},{"size":3005,"mtime":1608046708946,"results":"44","hashOfConfig":"30"},{"size":808,"mtime":1607982662728,"results":"45","hashOfConfig":"30"},{"size":1967,"mtime":1607982662728,"results":"46","hashOfConfig":"30"},{"size":2489,"mtime":1608026593076,"results":"47","hashOfConfig":"30"},{"size":2196,"mtime":1607982662730,"results":"48","hashOfConfig":"30"},{"size":1855,"mtime":1607982662729,"results":"49","hashOfConfig":"30"},{"size":4786,"mtime":1607982662729,"results":"50","hashOfConfig":"30"},{"size":2406,"mtime":1608034169955,"results":"51","hashOfConfig":"30"},{"size":3354,"mtime":1607982662731,"results":"52","hashOfConfig":"30"},{"size":2584,"mtime":1608042013306,"results":"53","hashOfConfig":"30"},{"size":3324,"mtime":1607982662731,"results":"54","hashOfConfig":"30"},{"size":1102,"mtime":1608026851603,"results":"55","hashOfConfig":"30"},{"size":2530,"mtime":1608044585460,"results":"56","hashOfConfig":"30"},{"size":2150,"mtime":1608040886359,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"segk0c",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"D:\\Git\\Peppermint\\client\\src\\index.js",[],["123","124"],"D:\\Git\\Peppermint\\client\\src\\App.js",[],"D:\\Git\\Peppermint\\client\\src\\Context\\GlobalState.js",[],"D:\\Git\\Peppermint\\client\\src\\pages\\Home.js",["125"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Content,\r\n  Divider,\r\n  Button,\r\n  Icon,\r\n  Input,\r\n} from \"rsuite\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../component/Navigation\";\r\nimport CreateTodo from \"../component/CreateTodo\";\r\nimport ListTodo from \"../component/ListTodo\";\r\nimport TicketStats from \"../component/TicketStats\";\r\nimport ListNote from \"../component/ListNote\";\r\n\r\n// import { baseUrl } from \"../utils\";\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\n\r\nconst Todo = () => {\r\n  return (\r\n    <div className=\"Todo-Container\">\r\n      <h3>Todo List</h3>\r\n      <Divider />\r\n      <CreateTodo />\r\n      <ListTodo />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Notes = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const { saveNote } = useContext(GlobalContext);\r\n\r\n  const open = () => setModalIsOpen(true);\r\n  const close = () => setModalIsOpen(false);\r\n\r\n  return (\r\n    <div className=\"Notes-Container\">\r\n      <h3>\r\n        Notes\r\n        <Button onClick={open} style={{ float: \"right\" }}>\r\n          <Icon icon=\"plus\" />\r\n          <Popup modal open={modalIsOpen} nested={true}>\r\n            <div className=\"modal\">\r\n              <Button className=\"close\" onClick={close}>\r\n                &times;\r\n              </Button>\r\n              <div className=\"header\">\r\n                {\" \"}\r\n                <Input\r\n                  placeholder=\"Enter Note title here...\"\r\n                  onChange={setTitle}\r\n                />\r\n              </div>\r\n              <div className=\"content\">\r\n                <Input\r\n                  placeholder=\"Enter Note here...\"\r\n                  rows={10}\r\n                  componentClass=\"textarea\"\r\n                  onChange={setText}\r\n                />\r\n              </div>\r\n              <div className=\"actions\">\r\n                <Button\r\n                  style={{ marginRight: 20 }}\r\n                  className=\"button\"\r\n                  onClick={() => {\r\n                    console.log(\"Data sent\");\r\n                    saveNote(text, title);\r\n                    close();\r\n                  }}\r\n                >\r\n                  Save Note\r\n                </Button>\r\n                <Button\r\n                  className=\"button\"\r\n                  onClick={() => {\r\n                    console.log(\"modal closed \");\r\n                    close();\r\n                  }}\r\n                >\r\n                  Close\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Popup>\r\n        </Button>\r\n      </h3>\r\n      <Divider />\r\n      <ListNote />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Issues = () => {\r\n  return (\r\n    <div className=\"Right-Container\">\r\n      <TicketStats />\r\n      <Divider />\r\n      <CompanyNews />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CompanyNews = () => {\r\n  return (\r\n    <div className=\"News-Container\">\r\n      <h4>Latest News</h4>\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Home = () => {\r\n  // const [data, setData] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const call = async () => {\r\n      const res = localStorage.getItem(\"jwt\");\r\n      console.log(res);\r\n      if (!res) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        return console.log(\"logged in\");\r\n      }\r\n    };\r\n    call();\r\n  }, []);\r\n\r\n  // console.log(data)\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Header>\r\n          <Navigation />\r\n        </Header>\r\n\r\n        <Container>\r\n          <Content>\r\n            <Todo />\r\n          </Content>\r\n        </Container>\r\n\r\n        <Container>\r\n          <Notes />\r\n        </Container>\r\n\r\n        <Container>\r\n          <Issues />\r\n        </Container>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\Git\\Peppermint\\client\\src\\pages\\Ticket.js",["126"],"import React, { useEffect } from \"react\";\r\n//import { Grid, Col, Table, Modal, Button, Nav } from \"rsuite\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import { baseUrl } from \"../utils\";\r\n\r\nimport OpenTickets from \"../component/OpenTicket\";\r\nimport UnissuedTickets from \"../component/UnissuedTicket\";\r\n\r\nconst Ticket = () => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const call = async () => {\r\n      const res = localStorage.getItem(\"jwt\");\r\n      console.log(res);\r\n      if (!res) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        return console.log(\"logged in\");\r\n      }\r\n    };\r\n    call();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ margin: 25 }}>\r\n      <OpenTickets />\r\n      <UnissuedTickets />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ticket;\r\n","D:\\Git\\Peppermint\\client\\src\\component\\Navigation.js",["127","128"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Menu, Switch, Button, Modal, Input  } from \"antd\";\r\nimport { EditTwoTone } from \"@ant-design/icons\";\r\n\r\nimport NewTicket from \"./NewTicket\";\r\n\r\nimport { baseUrl } from \"../utils\";\r\n\r\nconst Navigation = () => {\r\n  const history = useHistory();\r\n  const { SubMenu } = Menu;\r\n\r\n  const [checkAdmin, setCheckAdmin] = useState(false);\r\n  const [current, setCurrent] = useState();\r\n  const [isDark, setIsDark] = useState(\"light\");\r\n\r\n  const [visible, setVisible] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  function logout() {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  const changeTheme = (value) => {\r\n    setIsDark(value ? \"dark\" : \"light\");\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    //console.log('click ', e);\r\n    setCurrent(e.key);\r\n  };\r\n\r\n  function isAdmin() {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user && user.role === \"admin\") {\r\n      setCheckAdmin(true);\r\n    } else {\r\n      if (!user) {\r\n        history.push(\"/Login\");\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    isAdmin();\r\n  }, []);\r\n\r\n  const resetPassword = async () => {\r\n    await fetch(`${baseUrl}/api/v1/auth/resetPassword/user`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        password,\r\n      }),\r\n    }).then((res) => res.json);\r\n  };\r\n\r\n  const Render = () => {\r\n    if (checkAdmin) {\r\n      return (\r\n        <div>\r\n          <Menu\r\n            mode=\"horizontal\"\r\n            onClick={handleClick}\r\n            defaultSelectedKeys={[\"0\"]}\r\n            selectedKeys={current}\r\n            theme={isDark}\r\n          >\r\n            <Menu.Item key={6} disabled={true}>\r\n              Project Winter\r\n            </Menu.Item>\r\n            <Menu.Item key={0} onClick={() => history.push(\"/\")}>\r\n              Home\r\n            </Menu.Item>\r\n            <Menu.Item key={1} onClick={() => history.push(\"/tickets\")}>\r\n              Tickets\r\n            </Menu.Item>\r\n            <Menu.Item key={2} onClick={() => history.push(\"/timesheet\")}>\r\n              Timesheet\r\n            </Menu.Item>\r\n            <Menu.Item key={3} onClick={() => history.push(\"/admin/dashboard\")}>\r\n              Admin\r\n            </Menu.Item>\r\n            <Menu.Item key={5} style={{ float: \"right\" }} onClick={() => {\r\n                  setVisible(true);\r\n                }}>\r\n              Settings\r\n              <Modal\r\n                keyboard={true}\r\n                visible={visible}\r\n                mask={true}\r\n                title=\"Settings\"\r\n                okText=\"Exit\"\r\n                onOk={onCancel}\r\n                onCancel={onCancel}\r\n              >\r\n                <Input\r\n                  placeholder=\"Enter new Password ... \"\r\n                  style={{ width: 200 }}\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value);\r\n                  }}\r\n                />\r\n                <Button\r\n                  onClick={resetPassword}\r\n                  style={{ marginLeft: 10, margin: 5 }}\r\n                >\r\n                  <EditTwoTone />\r\n                </Button>\r\n                <Button onClick={logout}>Logout</Button>\r\n              </Modal>\r\n            </Menu.Item>\r\n            <Menu.Item key={4} style={{ float: \"right\" }} title=\"New Ticket\">\r\n              <NewTicket />\r\n            </Menu.Item>\r\n            <Switch\r\n              style={{ float: \"right\", marginTop: 13 }}\r\n              checked={isDark === \"dark\"}\r\n              onChange={changeTheme}\r\n              checkedChildren=\"Dark\"\r\n              unCheckedChildren=\"Light\"\r\n            />\r\n          </Menu>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Menu\r\n            mode=\"horizontal\"\r\n            onClick={handleClick}\r\n            selectedKeys={[current]}\r\n            theme={isDark}\r\n          >\r\n            <Menu.Item disabled={true}>Project Winter</Menu.Item>\r\n            <Menu.Item key={0} onClick={() => history.push(\"/\")}>\r\n              Home\r\n            </Menu.Item>\r\n            <Menu.Item key={1} onClick={() => history.push(\"/tickets\")}>\r\n              Tickets\r\n            </Menu.Item>\r\n            <Menu.Item key={2} onClick={() => history.push(\"/timesheet\")}>\r\n              Timesheet\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key={5}\r\n              onClick={() => history.push(\"/admin/dashboard\")}\r\n              style={{ float: \"right\" }}\r\n            >\r\n              Settings\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key={4}\r\n              onClick={() => history.push(\"/admin/dashboard\")}\r\n              style={{ float: \"right\" }}\r\n            >\r\n              <NewTicket />\r\n            </Menu.Item>\r\n            <Switch\r\n              style={{ float: \"right\", marginTop: 15 }}\r\n              checked={isDark === \"dark\"}\r\n              onChange={changeTheme}\r\n              checkedChildren=\"Dark\"\r\n              unCheckedChildren=\"Light\"\r\n            />\r\n          </Menu>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Render />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","D:\\Git\\Peppermint\\client\\src\\pages\\Reg.js",[],"D:\\Git\\Peppermint\\client\\src\\pages\\admin\\ClientList.js",[],"D:\\Git\\Peppermint\\client\\src\\pages\\admin\\Dash.js",[],"D:\\Git\\Peppermint\\client\\src\\pages\\admin\\Analytics.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\admin\\SideNav.js",[],"D:\\Git\\Peppermint\\client\\src\\Context\\AppReducer.js",[],"D:\\Git\\Peppermint\\client\\src\\pages\\Login\\Login.js",[],"D:\\Git\\Peppermint\\client\\src\\utils.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\ListNote.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\CreateTodo.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\ListTodo.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\TicketStats.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\UnissuedTicket.js",["129"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Tag, Space, Button } from \"antd\";\r\n\r\nimport { baseUrl } from \"../utils.js\";\r\n\r\nconst UnissuedTicket = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  async function loadContent() {\r\n    await fetch(`${baseUrl}/api/v1/tickets/unissuedTickets`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setData(result.tickets);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function resolve() {\r\n      await loadContent();\r\n    }\r\n    resolve();\r\n  }, []);\r\n\r\n  const convert = () => {\r\n    fetch(`${baseUrl}/api/v1/tickets/convertTicket`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        data,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          window.location.reload();\r\n          console.log(\"Congrats it worked\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Client\",\r\n      render: (data) => data.name,\r\n      key: \"client\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Priority\",\r\n      dataIndex: \"priority\",\r\n      key: \"priority\",\r\n      width: 50,\r\n    },\r\n    {\r\n      title: \"Issue\",\r\n      dataIndex: \"issue\",\r\n      key: \"issue\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      width: 200,\r\n      render: () => (\r\n        <Space size=\"middle\">\r\n          <Button size=\"small\" onClick={convert}>Convert</Button>\r\n          <Button size=\"small\"></Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ textAlign: \"center\" }}>Unissued Tickets - </h3>\r\n      <Table columns={columns} dataSource={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnissuedTicket;\r\n","D:\\Git\\Peppermint\\client\\src\\component\\OpenTicket.js",["130","131","132","133","134"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Tag, Space, Button } from \"antd\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nimport { baseUrl } from \"../utils.js\";\r\n\r\nconst OpenTicket = () => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const open = () => setModalOpen(true);\r\n  const close = () => setModalOpen(false);\r\n\r\n  async function loadContent() {\r\n    await fetch(`${baseUrl}/api/v1/tickets/openedTickets`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // console.log(result.tickets);\r\n        setData(result.tickets);\r\n      });\r\n  }\r\n\r\n  console.log(data)\r\n\r\n  useEffect(() => {\r\n    async function resolve() {\r\n      await loadContent();\r\n    }\r\n    resolve();\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Client\",\r\n      render: (data) => data.name,\r\n      key: \"client\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Priority\",\r\n      dataIndex: \"priority\",\r\n      key: \"priority\",\r\n      width: 50,\r\n    },\r\n    {\r\n      title: \"Issue\",\r\n      dataIndex: \"issue\",\r\n      key: \"issue\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      width: 200,\r\n      render: () => (\r\n        <Space size=\"middle\">\r\n          <Button size=\"small\">Show</Button>\r\n          <Button size=\"small\">Delete</Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ textAlign: \"center\" }}>Open Tickets - {null}</h3>\r\n      <Table columns={columns} dataSource={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenTicket;\r\n","D:\\Git\\Peppermint\\client\\src\\component\\NewTicket.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\admin\\ResetPassword.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\admin\\CreateUser.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\admin\\ChangeRole.js",["135"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Input, Select, Space, Radio } from \"antd\";\r\n\r\nimport { baseUrl } from \"../../utils\";\r\n\r\nconst ChangeRole = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [visible, setVisible] = useState(false);\r\n  const [user, setUser] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  const { Option } = Select;\r\n\r\n  const fetchUsers = async () => {\r\n    await fetch(`${baseUrl}/api/v1/auth/getAllUsers`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res) {\r\n          setUsers(res.users);\r\n        }\r\n      });\r\n  };\r\n\r\n  const postData = async () => {\r\n    await fetch(`${baseUrl}/api/v1/auth/changeRole`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        role,\r\n        user\r\n      }),\r\n    }).then((res) => res.json);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const onCreate = async () => {\r\n    setVisible(false);\r\n    await postData();\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const search = users.map((d) => <Option key={d._id}>{d.name}</Option>);\r\n\r\n  return (\r\n    <div>\r\n      <p\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          setVisible(true);\r\n        }}\r\n      >\r\n        Change users role\r\n      </p>\r\n      <Modal\r\n        visible={visible}\r\n        title=\"Change a users role\"\r\n        okText=\"Update\"\r\n        cancelText=\"Cancel\"\r\n        onCancel={onCancel}\r\n        onOk={onCreate}\r\n      >\r\n        <h3>Select a user below</h3>\r\n        <Space>\r\n        <Select\r\n          showSearch\r\n          style={{ width: 200 }}\r\n          placeholder=\"Select a client\"\r\n          optionFilterProp=\"children\"\r\n          onChange={setUser}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {search}\r\n        </Select>\r\n        <Radio.Group buttonStyle=\"solid\" onChange={(e) => setRole(e.target.value)}>\r\n            <Space>\r\n            <Radio.Button value=\"user\">User</Radio.Button>\r\n            <Radio.Button value=\"admin\">Admin</Radio.Button>\r\n            </Space>\r\n        </Radio.Group>\r\n        </Space>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeRole;\r\n",["136","137"],"D:\\Git\\Peppermint\\client\\src\\component\\admin\\CreateClient.js",[],"D:\\Git\\Peppermint\\client\\src\\pages\\Monitor.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\admin\\EditInfo.js",["138"],"import React, { useState } from \"react\";\r\nimport { Modal, Input, Space, Radio, Row } from \"antd\";\r\n\r\nimport { baseUrl } from \"../../utils\";\r\n\r\n/*\r\nShow info of selected user\r\nEdit Button or cancel - If edit is click show Update or cancel \r\n\r\nPostData fetch function which sends all the data. \r\n*/\r\n\r\nconst EditInfo = (props) => {\r\n  const [users, setUsers] = useState(props.user);\r\n  const [name, setName] = useState(props.user.name);\r\n  const [email, setEmail] = useState(props.user.email);\r\n  const [role, setRole] = useState(props.user.role);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const postData = async () => {\r\n    await fetch(`${baseUrl}/api/v1/auth/edit`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        id : users._id,\r\n        name,\r\n        email,\r\n        role\r\n      }),\r\n    }).then((res) => res.json);\r\n  };\r\n\r\n  const onCreate = async () => {\r\n    setVisible(false);\r\n    email.toString(email)\r\n    await postData()\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          setVisible(true);\r\n        }}\r\n      >\r\n        Edit User info & Role\r\n      </p>\r\n      <Modal\r\n        visible={visible}\r\n        title=\"Edit a users info\"\r\n        okText=\"Update\"\r\n        cancelText=\"Cancel\"\r\n        onCancel={onCancel}\r\n        onOk={onCreate}\r\n      >\r\n        <Row>\r\n          <h5>\r\n            Edit Name :{\" \"}\r\n            <Input\r\n              defaultValue={users.name}\r\n              onChange={(e) => setName(e.target.value) }\r\n              style={{ width: 300 }}\r\n            />\r\n          </h5>\r\n        </Row>\r\n        <Row>\r\n          <h5>\r\n            Edit Email :{\" \"}\r\n            <Input\r\n              defaultValue={users.email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              style={{ width: 300 }}\r\n            />\r\n          </h5>\r\n        </Row>\r\n        <Row>\r\n        <h5>Edit Role : </h5>\r\n        <Radio.Group buttonStyle=\"solid\" defaultValue={users.role} onChange={(e) => setRole(e.target.value)} style={ { marginLeft: 15}}>\r\n            <Space>\r\n            <Radio.Button value=\"user\">User</Radio.Button>\r\n            <Radio.Button value=\"admin\">Admin</Radio.Button>\r\n            </Space>\r\n        </Radio.Group>\r\n        </Row>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditInfo;\r\n","D:\\Git\\Peppermint\\client\\src\\pages\\admin\\EditUserInfo.js",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":136,"column":6,"nodeType":"145","endLine":136,"endColumn":8,"suggestions":"146"},{"ruleId":"143","severity":1,"message":"144","line":24,"column":6,"nodeType":"145","endLine":24,"endColumn":8,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":13,"column":11,"nodeType":"150","messageId":"151","endLine":13,"endColumn":18},{"ruleId":"143","severity":1,"message":"152","line":53,"column":6,"nodeType":"145","endLine":53,"endColumn":8,"suggestions":"153"},{"ruleId":"148","severity":1,"message":"154","line":2,"column":17,"nodeType":"150","messageId":"151","endLine":2,"endColumn":20},{"ruleId":"148","severity":1,"message":"154","line":2,"column":17,"nodeType":"150","messageId":"151","endLine":2,"endColumn":20},{"ruleId":"148","severity":1,"message":"155","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":13},{"ruleId":"148","severity":1,"message":"156","line":8,"column":10,"nodeType":"150","messageId":"151","endLine":8,"endColumn":19},{"ruleId":"148","severity":1,"message":"157","line":11,"column":9,"nodeType":"150","messageId":"151","endLine":11,"endColumn":13},{"ruleId":"148","severity":1,"message":"158","line":12,"column":9,"nodeType":"150","messageId":"151","endLine":12,"endColumn":14},{"ruleId":"148","severity":1,"message":"159","line":2,"column":17,"nodeType":"150","messageId":"151","endLine":2,"endColumn":22},{"ruleId":"139","replacedBy":"160"},{"ruleId":"141","replacedBy":"161"},{"ruleId":"148","severity":1,"message":"162","line":14,"column":17,"nodeType":"150","messageId":"151","endLine":14,"endColumn":25},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["165"],["166"],"no-unused-vars","'SubMenu' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'isAdmin'. Either include it or remove the dependency array.",["167"],"'Tag' is defined but never used.","'Popup' is defined but never used.","'modalOpen' is assigned a value but never used.","'open' is assigned a value but never used.","'close' is assigned a value but never used.","'Input' is defined but never used.",["163"],["164"],"'setUsers' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"168","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [history]",{"range":"173","text":"174"},{"range":"175","text":"174"},"Update the dependencies array to be: [isAdmin]",{"range":"176","text":"177"},[3492,3494],"[history]",[645,647],[1256,1258],"[isAdmin]"]