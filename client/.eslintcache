[{"D:\\Git\\Peppermint\\client\\src\\index.js":"1","D:\\Git\\Peppermint\\client\\src\\App.js":"2","D:\\Git\\Peppermint\\client\\src\\Context\\GlobalState.js":"3","D:\\Git\\Peppermint\\client\\src\\utils.js":"4","D:\\Git\\Peppermint\\client\\src\\Context\\AppReducer.js":"5","D:\\Git\\Peppermint\\client\\src\\pages\\Monitor.js":"6","D:\\Git\\Peppermint\\client\\src\\pages\\Ticket.js":"7","D:\\Git\\Peppermint\\client\\src\\pages\\Home.js":"8","D:\\Git\\Peppermint\\client\\src\\component\\Navigation.js":"9","D:\\Git\\Peppermint\\client\\src\\pages\\admin\\EditUserInfo.js":"10","D:\\Git\\Peppermint\\client\\src\\pages\\admin\\Dash.js":"11","D:\\Git\\Peppermint\\client\\src\\pages\\auth\\Reg.js":"12","D:\\Git\\Peppermint\\client\\src\\pages\\admin\\Analytics.js":"13","D:\\Git\\Peppermint\\client\\src\\pages\\auth\\Login.js":"14","D:\\Git\\Peppermint\\client\\src\\component\\admin\\SideNav.js":"15","D:\\Git\\Peppermint\\client\\src\\pages\\admin\\ClientList.js":"16","D:\\Git\\Peppermint\\client\\src\\pages\\History.js":"17","D:\\Git\\Peppermint\\client\\src\\component\\admin\\ResetPassword.js":"18","D:\\Git\\Peppermint\\client\\src\\component\\admin\\EditInfo.js":"19","D:\\Git\\Peppermint\\client\\src\\component\\admin\\CreateUser.js":"20","D:\\Git\\Peppermint\\client\\src\\component\\admin\\UpdateClient.js":"21","D:\\Git\\Peppermint\\client\\src\\component\\admin\\CreateClient.js":"22","D:\\Git\\Peppermint\\client\\src\\component\\ticket\\TicketStats.js":"23","D:\\Git\\Peppermint\\client\\src\\component\\ticket\\UnissuedTicket.js":"24","D:\\Git\\Peppermint\\client\\src\\component\\newsletter\\ListNewsletter.js":"25","D:\\Git\\Peppermint\\client\\src\\component\\note\\ListNote.js":"26","D:\\Git\\Peppermint\\client\\src\\component\\newsletter\\CreateNewsletter.js":"27","D:\\Git\\Peppermint\\client\\src\\component\\todo\\ListTodo.js":"28","D:\\Git\\Peppermint\\client\\src\\component\\todo\\CreateTodo.js":"29","D:\\Git\\Peppermint\\client\\src\\component\\ticket\\OpenTicket.js":"30","D:\\Git\\Peppermint\\client\\src\\component\\ticket\\NewTicket.js":"31","D:\\Git\\Peppermint\\client\\src\\component\\ticket\\ViewTicket.js":"32","D:\\Git\\Peppermint\\client\\src\\component\\newsletter\\ViewNewsletter.js":"33","D:\\Git\\Peppermint\\client\\src\\component\\note\\EditNote.js":"34","D:\\Git\\Peppermint\\client\\src\\component\\ticket\\Transfer.js":"35","D:\\Git\\Peppermint\\client\\src\\component\\newsletter\\AdminList.js":"36","D:\\Git\\Peppermint\\client\\src\\component\\newsletter\\Edit.js":"37"},{"size":614,"mtime":1607982662733,"results":"38","hashOfConfig":"39"},{"size":2227,"mtime":1608301476156,"results":"40","hashOfConfig":"39"},{"size":6183,"mtime":1607982662726,"results":"41","hashOfConfig":"39"},{"size":48,"mtime":1607982662739,"results":"42","hashOfConfig":"39"},{"size":1288,"mtime":1607982662726,"results":"43","hashOfConfig":"39"},{"size":1102,"mtime":1608026851603,"results":"44","hashOfConfig":"39"},{"size":811,"mtime":1608059126771,"results":"45","hashOfConfig":"39"},{"size":4058,"mtime":1608116848851,"results":"46","hashOfConfig":"39"},{"size":5878,"mtime":1608154141920,"results":"47","hashOfConfig":"39"},{"size":2150,"mtime":1608040886359,"results":"48","hashOfConfig":"39"},{"size":937,"mtime":1607982662738,"results":"49","hashOfConfig":"39"},{"size":2697,"mtime":1608122876353,"results":"50","hashOfConfig":"39"},{"size":168,"mtime":1607982662738,"results":"51","hashOfConfig":"39"},{"size":2581,"mtime":1607982662736,"results":"52","hashOfConfig":"39"},{"size":2066,"mtime":1608301514085,"results":"53","hashOfConfig":"39"},{"size":2339,"mtime":1608119001108,"results":"54","hashOfConfig":"39"},{"size":4472,"mtime":1608300830066,"results":"55","hashOfConfig":"39"},{"size":2406,"mtime":1608059397125,"results":"56","hashOfConfig":"39"},{"size":2530,"mtime":1608044585460,"results":"57","hashOfConfig":"39"},{"size":3354,"mtime":1607982662731,"results":"58","hashOfConfig":"39"},{"size":2714,"mtime":1608121933867,"results":"59","hashOfConfig":"39"},{"size":3324,"mtime":1607982662731,"results":"60","hashOfConfig":"39"},{"size":2495,"mtime":1608059172464,"results":"61","hashOfConfig":"39"},{"size":2199,"mtime":1608059090869,"results":"62","hashOfConfig":"39"},{"size":1273,"mtime":1608118612845,"results":"63","hashOfConfig":"39"},{"size":1261,"mtime":1608058851667,"results":"64","hashOfConfig":"39"},{"size":2157,"mtime":1608301968261,"results":"65","hashOfConfig":"39"},{"size":1970,"mtime":1608059034277,"results":"66","hashOfConfig":"39"},{"size":811,"mtime":1608059041275,"results":"67","hashOfConfig":"39"},{"size":1761,"mtime":1608304686788,"results":"68","hashOfConfig":"39"},{"size":4914,"mtime":1608300830064,"results":"69","hashOfConfig":"39"},{"size":3897,"mtime":1608301060241,"results":"70","hashOfConfig":"39"},{"size":858,"mtime":1608304829926,"results":"71","hashOfConfig":"39"},{"size":1709,"mtime":1608118748612,"results":"72","hashOfConfig":"39"},{"size":2309,"mtime":1608300830065,"results":"73","hashOfConfig":"39"},{"size":1399,"mtime":1608304821376,"results":"74","hashOfConfig":"39"},{"size":2277,"mtime":1608320331894,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"segk0c",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Git\\Peppermint\\client\\src\\index.js",[],"D:\\Git\\Peppermint\\client\\src\\App.js",[],"D:\\Git\\Peppermint\\client\\src\\Context\\GlobalState.js",[],"D:\\Git\\Peppermint\\client\\src\\utils.js",[],"D:\\Git\\Peppermint\\client\\src\\Context\\AppReducer.js",[],"D:\\Git\\Peppermint\\client\\src\\pages\\Monitor.js",[],["157","158"],"D:\\Git\\Peppermint\\client\\src\\pages\\Ticket.js",["159"],"import React, { useEffect } from \"react\";\r\n//import { Grid, Col, Table, Modal, Button, Nav } from \"rsuite\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import { baseUrl } from \"../utils\";\r\n\r\nimport OpenTickets from \"../component/ticket/OpenTicket\";\r\nimport UnissuedTickets from \"../component/ticket/UnissuedTicket\";\r\n\r\nconst Ticket = () => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const call = async () => {\r\n      const res = localStorage.getItem(\"jwt\");\r\n      console.log(res);\r\n      if (!res) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        return console.log(\"logged in\");\r\n      }\r\n    };\r\n    call();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ margin: 25 }}>\r\n      <OpenTickets />\r\n      <UnissuedTickets />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ticket;\r\n","D:\\Git\\Peppermint\\client\\src\\pages\\Home.js",["160"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Content,\r\n  Divider,\r\n  Button,\r\n  Icon,\r\n  Input,\r\n} from \"rsuite\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../component/Navigation\";\r\nimport CreateTodo from \"../component/todo/CreateTodo\";\r\nimport ListTodo from \"../component/todo/ListTodo\";\r\nimport TicketStats from \"../component/ticket/TicketStats\";\r\nimport ListNote from \"../component/note/ListNote\";\r\n\r\n// import { baseUrl } from \"../utils\";\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\nimport ListNewsletter from \"../component/newsletter/ListNewsletter\";\r\n\r\nconst Todo = () => {\r\n  return (\r\n    <div className=\"Todo-Container\">\r\n      <h3>Todo List</h3>\r\n      <Divider />\r\n      <CreateTodo />\r\n      <ListTodo />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Notes = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const { saveNote } = useContext(GlobalContext);\r\n\r\n  const open = () => setModalIsOpen(true);\r\n  const close = () => setModalIsOpen(false);\r\n\r\n  return (\r\n    <div className=\"Notes-Container\">\r\n      <h3>\r\n        Notes\r\n        <Button onClick={open} style={{ float: \"right\" }}>\r\n          <Icon icon=\"plus\" />\r\n          <Popup modal open={modalIsOpen} nested={true}>\r\n            <div className=\"modal\">\r\n              <Button className=\"close\" onClick={close}>\r\n                &times;\r\n              </Button>\r\n              <div className=\"header\">\r\n                {\" \"}\r\n                <Input\r\n                  placeholder=\"Enter Note title here...\"\r\n                  onChange={setTitle}\r\n                />\r\n              </div>\r\n              <div className=\"content\">\r\n                <Input\r\n                  placeholder=\"Enter Note here...\"\r\n                  rows={10}\r\n                  componentClass=\"textarea\"\r\n                  onChange={setText}\r\n                />\r\n              </div>\r\n              <div className=\"actions\">\r\n                <Button\r\n                  style={{ marginRight: 20 }}\r\n                  className=\"button\"\r\n                  onClick={() => {\r\n                    console.log(\"Data sent\");\r\n                    saveNote(text, title);\r\n                    close();\r\n                  }}\r\n                >\r\n                  Save Note\r\n                </Button>\r\n                <Button\r\n                  className=\"button\"\r\n                  onClick={() => {\r\n                    console.log(\"modal closed \");\r\n                    close();\r\n                  }}\r\n                >\r\n                  Close\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Popup>\r\n        </Button>\r\n      </h3>\r\n      <Divider />\r\n      <ListNote />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Issues = () => {\r\n  return (\r\n    <div className=\"Right-Container\">\r\n      <TicketStats />\r\n      <Divider />\r\n      <CompanyNews />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CompanyNews = () => {\r\n  return (\r\n    <div className=\"News-Container\">\r\n      <h4>Latest News</h4>\r\n      <Divider />\r\n      <ListNewsletter />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Home = () => {\r\n  // const [data, setData] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const call = async () => {\r\n      const res = localStorage.getItem(\"jwt\");\r\n      console.log(res);\r\n      if (!res) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        return console.log(\"logged in\");\r\n      }\r\n    };\r\n    call();\r\n  }, []);\r\n\r\n  // console.log(data)\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Header>\r\n          <Navigation />\r\n        </Header>\r\n\r\n        <Container>\r\n          <Content>\r\n            <Todo />\r\n          </Content>\r\n        </Container>\r\n\r\n        <Container>\r\n          <Notes />\r\n        </Container>\r\n\r\n        <Container>\r\n          <Issues />\r\n        </Container>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\Git\\Peppermint\\client\\src\\component\\Navigation.js",["161","162","163","164","165","166"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Menu, Switch, Button, Modal, Input, Layout } from \"antd\";\r\nimport { EditTwoTone } from \"@ant-design/icons\";\r\n\r\nimport NewTicket from \"./ticket/NewTicket\";\r\n\r\nimport { baseUrl } from \"../utils\";\r\n\r\nconst Navigation = () => {\r\n  const history = useHistory();\r\n  const { SubMenu } = Menu;\r\n  const { Header, Content, Footer, Sider } = Layout;\r\n\r\n  const [checkAdmin, setCheckAdmin] = useState(false);\r\n  const [current, setCurrent] = useState();\r\n  const [isDark, setIsDark] = useState(\"light\");\r\n\r\n  const [visible, setVisible] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  function logout() {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  const changeTheme = (value) => {\r\n    setIsDark(value ? \"dark\" : \"light\");\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    //console.log('click ', e);\r\n    setCurrent(e.key);\r\n  };\r\n\r\n  function isAdmin() {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user && user.role === \"admin\") {\r\n      setCheckAdmin(true);\r\n    } else {\r\n      if (!user) {\r\n        history.push(\"/Login\");\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    isAdmin();\r\n  }, []);\r\n\r\n  const resetPassword = async () => {\r\n    await fetch(`${baseUrl}/api/v1/auth/resetPassword/user`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        password,\r\n      }),\r\n    }).then((res) => res.json);\r\n  };\r\n\r\n  const Render = () => {\r\n    if (checkAdmin) {\r\n      return (\r\n        <div>\r\n          <Layout>\r\n            <Menu\r\n              mode=\"horizontal\"\r\n              onClick={handleClick}\r\n              defaultSelectedKeys={[\"0\"]}\r\n              selectedKeys={current}\r\n            >\r\n              <Menu.Item key=\"Home Page\">\r\n                <a\r\n                  href=\"https://pmint.dev/\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  Peppermint 🍵\r\n                </a>\r\n              </Menu.Item>\r\n              <Menu.Item key={0} onClick={() => history.push(\"/\")}>\r\n                Home\r\n              </Menu.Item>\r\n              <Menu.Item key={1} onClick={() => history.push(\"/tickets\")}>\r\n                Tickets\r\n              </Menu.Item>\r\n              <Menu.Item key={2} onClick={() => history.push(\"/timesheet\")}>\r\n                Timesheet\r\n              </Menu.Item>\r\n              <Menu.Item key={3} onClick={() => history.push(\"/history\")}>\r\n                History\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                key={6}\r\n                onClick={() => history.push(\"/admin/dashboard\")}\r\n              >\r\n                Admin\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                key={5}\r\n                style={{ float: \"right\" }}\r\n                onClick={() => {\r\n                  setVisible(true);\r\n                }}\r\n              >\r\n                Settings\r\n                <Modal\r\n                  keyboard={true}\r\n                  visible={visible}\r\n                  mask={true}\r\n                  title=\"Settings\"\r\n                  okText=\"Exit\"\r\n                  onOk={onCancel}\r\n                  onCancel={onCancel}\r\n                >\r\n                  <Input\r\n                    placeholder=\"Enter new Password ... \"\r\n                    style={{ width: 200 }}\r\n                    onChange={(e) => {\r\n                      setPassword(e.target.value);\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    onClick={resetPassword}\r\n                    style={{ marginLeft: 10, margin: 5 }}\r\n                  >\r\n                    <EditTwoTone />\r\n                  </Button>\r\n                  <Button onClick={logout}>Logout</Button>\r\n                </Modal>\r\n              </Menu.Item>\r\n              <Menu.Item key={4} style={{ float: \"right\" }} title=\"New Ticket\">\r\n                <NewTicket />\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Layout>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Menu\r\n            mode=\"horizontal\"\r\n            onClick={handleClick}\r\n            selectedKeys={[current]}\r\n          >\r\n            <Menu.Item disabled={true}>Project Winter</Menu.Item>\r\n            <Menu.Item key={0} onClick={() => history.push(\"/\")}>\r\n              Home\r\n            </Menu.Item>\r\n            <Menu.Item key={1} onClick={() => history.push(\"/tickets\")}>\r\n              Tickets\r\n            </Menu.Item>\r\n            <Menu.Item key={2} onClick={() => history.push(\"/timesheet\")}>\r\n              Timesheet\r\n            </Menu.Item>\r\n            <Menu.Item key={3} onClick={() => history.push(\"/history\")}>\r\n                History\r\n              </Menu.Item>\r\n            <Menu.Item\r\n              key={5}\r\n              onClick={() => history.push(\"/admin/dashboard\")}\r\n              style={{ float: \"right\" }}\r\n            >\r\n              Settings\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key={4}\r\n              onClick={() => history.push(\"/admin/dashboard\")}\r\n              style={{ float: \"right\" }}\r\n            >\r\n              <NewTicket />\r\n            </Menu.Item>\r\n            <Switch\r\n              style={{ float: \"right\", marginTop: 15 }}\r\n              checked={isDark === \"dark\"}\r\n              onChange={changeTheme}\r\n              checkedChildren=\"Dark\"\r\n              unCheckedChildren=\"Light\"\r\n            />\r\n          </Menu>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Render />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","D:\\Git\\Peppermint\\client\\src\\pages\\admin\\EditUserInfo.js",[],"D:\\Git\\Peppermint\\client\\src\\pages\\admin\\Dash.js",[],"D:\\Git\\Peppermint\\client\\src\\pages\\auth\\Reg.js",[],"D:\\Git\\Peppermint\\client\\src\\pages\\admin\\Analytics.js",[],"D:\\Git\\Peppermint\\client\\src\\pages\\auth\\Login.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\admin\\SideNav.js",["167"],"D:\\Git\\Peppermint\\client\\src\\pages\\admin\\ClientList.js",[],"D:\\Git\\Peppermint\\client\\src\\pages\\History.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\admin\\ResetPassword.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\admin\\EditInfo.js",["168"],"import React, { useState } from \"react\";\r\nimport { Modal, Input, Space, Radio, Row } from \"antd\";\r\n\r\nimport { baseUrl } from \"../../utils\";\r\n\r\n/*\r\nShow info of selected user\r\nEdit Button or cancel - If edit is click show Update or cancel \r\n\r\nPostData fetch function which sends all the data. \r\n*/\r\n\r\nconst EditInfo = (props) => {\r\n  const [users, setUsers] = useState(props.user);\r\n  const [name, setName] = useState(props.user.name);\r\n  const [email, setEmail] = useState(props.user.email);\r\n  const [role, setRole] = useState(props.user.role);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const postData = async () => {\r\n    await fetch(`${baseUrl}/api/v1/auth/edit`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        id : users._id,\r\n        name,\r\n        email,\r\n        role\r\n      }),\r\n    }).then((res) => res.json);\r\n  };\r\n\r\n  const onCreate = async () => {\r\n    setVisible(false);\r\n    email.toString(email)\r\n    await postData()\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          setVisible(true);\r\n        }}\r\n      >\r\n        Edit User info & Role\r\n      </p>\r\n      <Modal\r\n        visible={visible}\r\n        title=\"Edit a users info\"\r\n        okText=\"Update\"\r\n        cancelText=\"Cancel\"\r\n        onCancel={onCancel}\r\n        onOk={onCreate}\r\n      >\r\n        <Row>\r\n          <h5>\r\n            Edit Name :{\" \"}\r\n            <Input\r\n              defaultValue={users.name}\r\n              onChange={(e) => setName(e.target.value) }\r\n              style={{ width: 300 }}\r\n            />\r\n          </h5>\r\n        </Row>\r\n        <Row>\r\n          <h5>\r\n            Edit Email :{\" \"}\r\n            <Input\r\n              defaultValue={users.email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              style={{ width: 300 }}\r\n            />\r\n          </h5>\r\n        </Row>\r\n        <Row>\r\n        <h5>Edit Role : </h5>\r\n        <Radio.Group buttonStyle=\"solid\" defaultValue={users.role} onChange={(e) => setRole(e.target.value)} style={ { marginLeft: 15}}>\r\n            <Space>\r\n            <Radio.Button value=\"user\">User</Radio.Button>\r\n            <Radio.Button value=\"admin\">Admin</Radio.Button>\r\n            </Space>\r\n        </Radio.Group>\r\n        </Row>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditInfo;\r\n","D:\\Git\\Peppermint\\client\\src\\component\\admin\\CreateUser.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\admin\\UpdateClient.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\admin\\CreateClient.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\ticket\\TicketStats.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\ticket\\UnissuedTicket.js",["169"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Tag, Space, Button } from \"antd\";\r\n\r\nimport { baseUrl } from \"../../utils.js\";\r\n\r\nconst UnissuedTicket = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  async function loadContent() {\r\n    await fetch(`${baseUrl}/api/v1/tickets/unissuedTickets`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setData(result.tickets);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function resolve() {\r\n      await loadContent();\r\n    }\r\n    resolve();\r\n  }, []);\r\n\r\n  const convert = () => {\r\n    fetch(`${baseUrl}/api/v1/tickets/convertTicket`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        data,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          window.location.reload();\r\n          console.log(\"Congrats it worked\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Client\",\r\n      render: (data) => data.name,\r\n      key: \"client\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Priority\",\r\n      dataIndex: \"priority\",\r\n      key: \"priority\",\r\n      width: 50,\r\n    },\r\n    {\r\n      title: \"Issue\",\r\n      dataIndex: \"issue\",\r\n      key: \"issue\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      width: 200,\r\n      render: () => (\r\n        <Space size=\"middle\">\r\n          <Button size=\"small\" onClick={convert}>Convert</Button>\r\n          <Button size=\"small\"></Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ textAlign: \"center\" }}>Unissued Tickets - </h3>\r\n      <Table columns={columns} dataSource={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnissuedTicket;\r\n","D:\\Git\\Peppermint\\client\\src\\component\\newsletter\\ListNewsletter.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\note\\ListNote.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\newsletter\\CreateNewsletter.js",["170"],"D:\\Git\\Peppermint\\client\\src\\component\\todo\\ListTodo.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\todo\\CreateTodo.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\ticket\\OpenTicket.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\ticket\\NewTicket.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\ticket\\ViewTicket.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\newsletter\\ViewNewsletter.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\note\\EditNote.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\ticket\\Transfer.js",["171"],"import React, { useState, useEffect } from \"react\";\r\nimport { Select, Modal, Button } from \"antd\";\r\n\r\nimport { baseUrl } from \"../../utils.js\";\r\n\r\nconst Transfer = (props) => {\r\n  const { Option } = Select;\r\n  const [users, setUsers] = useState([]);\r\n  const [id, setId] = useState(\"\");\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  console.log(props)\r\n\r\n  const fetchUsers = async () => {\r\n    await fetch(`${baseUrl}/api/v1/auth/getAllUsers`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res) {\r\n          setUsers(res.users);\r\n        }\r\n      });\r\n  };\r\n\r\n  const postData = () => {\r\n    fetch(`${baseUrl}/api/v1/tickets/transfer`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        id,\r\n        find: props.ticket._id\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          console.log(\"Congrats it worked\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const onCreate = async () => {\r\n    setVisible(false);\r\n    await postData();\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const search = users.map((d) => <Option key={d._id}>{d.name}</Option>);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        key={0}\r\n        onClick={() => {\r\n          setVisible(true);\r\n        }}\r\n      >\r\n        Transfer\r\n      </Button>\r\n\r\n      <Modal visible={visible} onCancel={onCancel} onOk={onCreate}\r\n      width={300}\r\n      >\r\n        <Select\r\n          style={{ }}\r\n          showSearch\r\n          style={{ width: 200 }}\r\n          placeholder=\"Select a user\"\r\n          optionFilterProp=\"children\"\r\n          onChange={setId}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {search}\r\n        </Select>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transfer;\r\n","D:\\Git\\Peppermint\\client\\src\\component\\newsletter\\AdminList.js",[],"D:\\Git\\Peppermint\\client\\src\\component\\newsletter\\Edit.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":24,"column":6,"nodeType":"178","endLine":24,"endColumn":8,"suggestions":"179"},{"ruleId":"176","severity":1,"message":"177","line":138,"column":6,"nodeType":"178","endLine":138,"endColumn":8,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":13,"column":11,"nodeType":"183","messageId":"184","endLine":13,"endColumn":18},{"ruleId":"181","severity":1,"message":"185","line":14,"column":11,"nodeType":"183","messageId":"184","endLine":14,"endColumn":17},{"ruleId":"181","severity":1,"message":"186","line":14,"column":19,"nodeType":"183","messageId":"184","endLine":14,"endColumn":26},{"ruleId":"181","severity":1,"message":"187","line":14,"column":28,"nodeType":"183","messageId":"184","endLine":14,"endColumn":34},{"ruleId":"181","severity":1,"message":"188","line":14,"column":36,"nodeType":"183","messageId":"184","endLine":14,"endColumn":41},{"ruleId":"176","severity":1,"message":"189","line":54,"column":6,"nodeType":"178","endLine":54,"endColumn":8,"suggestions":"190"},{"ruleId":"181","severity":1,"message":"191","line":15,"column":8,"nodeType":"183","messageId":"184","endLine":15,"endColumn":17},{"ruleId":"181","severity":1,"message":"192","line":14,"column":17,"nodeType":"183","messageId":"184","endLine":14,"endColumn":25},{"ruleId":"181","severity":1,"message":"193","line":2,"column":17,"nodeType":"183","messageId":"184","endLine":2,"endColumn":20},{"ruleId":"181","severity":1,"message":"194","line":2,"column":17,"nodeType":"183","messageId":"184","endLine":2,"endColumn":21},{"ruleId":"195","severity":1,"message":"196","line":84,"column":11,"nodeType":"197","endLine":84,"endColumn":33},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["200"],["201"],"no-unused-vars","'SubMenu' is assigned a value but never used.","Identifier","unusedVar","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isAdmin'. Either include it or remove the dependency array.",["202"],"'AdminList' is defined but never used.","'setUsers' is assigned a value but never used.","'Tag' is defined but never used.","'Form' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"203","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [history]",{"range":"208","text":"209"},{"range":"210","text":"209"},"Update the dependencies array to be: [isAdmin]",{"range":"211","text":"212"},[659,661],"[history]",[3610,3612],[1324,1326],"[isAdmin]"]