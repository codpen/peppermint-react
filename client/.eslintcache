[{"D:\\Git\\winter\\client\\src\\index.js":"1","D:\\Git\\winter\\client\\src\\Context\\GlobalState.js":"2","D:\\Git\\winter\\client\\src\\App.js":"3","D:\\Git\\winter\\client\\src\\utils.js":"4","D:\\Git\\winter\\client\\src\\Context\\AppReducer.js":"5","D:\\Git\\winter\\client\\src\\pages\\Monitor.js":"6","D:\\Git\\winter\\client\\src\\pages\\Reg.js":"7","D:\\Git\\winter\\client\\src\\pages\\Ticket.js":"8","D:\\Git\\winter\\client\\src\\pages\\Home.js":"9","D:\\Git\\winter\\client\\src\\pages\\Login.js":"10","D:\\Git\\winter\\client\\src\\component\\Navigation.js":"11","D:\\Git\\winter\\client\\src\\component\\admin\\SideNav.js":"12","D:\\Git\\winter\\client\\src\\pages\\admin\\Dash.js":"13","D:\\Git\\winter\\client\\src\\pages\\admin\\Analytics.js":"14","D:\\Git\\winter\\client\\src\\component\\OpenTicket.js":"15","D:\\Git\\winter\\client\\src\\component\\UnissuedTicket.js":"16","D:\\Git\\winter\\client\\src\\component\\CreateTodo.js":"17","D:\\Git\\winter\\client\\src\\component\\ListTodo.js":"18","D:\\Git\\winter\\client\\src\\component\\TicketStats.js":"19","D:\\Git\\winter\\client\\src\\component\\ListNote.js":"20","D:\\Git\\winter\\client\\src\\component\\Setings.js":"21","D:\\Git\\winter\\client\\src\\component\\admin\\CreateUser.js":"22","D:\\Git\\winter\\client\\src\\component\\NewTicket.js":"23","D:\\Git\\winter\\client\\src\\component\\admin\\CreateClient.js":"24"},{"size":614,"mtime":1607724298113,"results":"25","hashOfConfig":"26"},{"size":6183,"mtime":1607693850678,"results":"27","hashOfConfig":"26"},{"size":1775,"mtime":1607735910390,"results":"28","hashOfConfig":"26"},{"size":48,"mtime":1607284653162,"results":"29","hashOfConfig":"26"},{"size":1288,"mtime":1607554855806,"results":"30","hashOfConfig":"26"},{"size":1102,"mtime":1606939518254,"results":"31","hashOfConfig":"26"},{"size":2694,"mtime":1606939727522,"results":"32","hashOfConfig":"26"},{"size":797,"mtime":1607710175551,"results":"33","hashOfConfig":"26"},{"size":3940,"mtime":1607718773010,"results":"34","hashOfConfig":"26"},{"size":2470,"mtime":1607710175551,"results":"35","hashOfConfig":"26"},{"size":5436,"mtime":1607710175545,"results":"36","hashOfConfig":"26"},{"size":1534,"mtime":1607739856180,"results":"37","hashOfConfig":"26"},{"size":937,"mtime":1607737177641,"results":"38","hashOfConfig":"26"},{"size":168,"mtime":1607737510893,"results":"39","hashOfConfig":"26"},{"size":1865,"mtime":1607710175546,"results":"40","hashOfConfig":"26"},{"size":2173,"mtime":1607710175548,"results":"41","hashOfConfig":"26"},{"size":797,"mtime":1607737059034,"results":"42","hashOfConfig":"26"},{"size":1967,"mtime":1607710175544,"results":"43","hashOfConfig":"26"},{"size":2489,"mtime":1607710175547,"results":"44","hashOfConfig":"26"},{"size":2918,"mtime":1607710175543,"results":"45","hashOfConfig":"26"},{"size":431,"mtime":1607710175547,"results":"46","hashOfConfig":"26"},{"size":3354,"mtime":1607738707056,"results":"47","hashOfConfig":"26"},{"size":3735,"mtime":1607740255350,"results":"48","hashOfConfig":"26"},{"size":3257,"mtime":1607740022912,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1t8oi2s",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Git\\winter\\client\\src\\index.js",[],["108","109"],"D:\\Git\\winter\\client\\src\\Context\\GlobalState.js",[],"D:\\Git\\winter\\client\\src\\App.js",["110","111","112"],"import React, {useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./app.css\";\r\nimport \"rsuite/dist/styles/rsuite-default.css\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Ticket from \"./pages/Ticket\";\r\nimport Navigation from \"./component/Navigation\";\r\nimport Login from \"./pages/Login\";\r\nimport Reg from \"./pages/Reg\";\r\nimport Monitor from \"./pages/Monitor\";\r\nimport Dash from './pages/admin/Dash';\r\nimport SideNav from './component/admin/SideNav'\r\nimport Analytics from './pages/admin/Analytics'\r\n\r\nimport { baseUrl } from \"./utils\";\r\n\r\n// import { GlobalContext } from \"./Context/GlobalState\";\r\n\r\nconst Routing = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      \r\n        <Route exact path=\"/login\">\r\n          <div className=\"login-container\">\r\n            <Login />\r\n          </div>\r\n        </Route>\r\n\r\n        <Route exact path=\"/signup\">\r\n          <div className=\"login-container\">\r\n            <Reg />\r\n          </div>\r\n        </Route>\r\n\r\n        <Route>\r\n          <Navigation />\r\n          <Route exact path=\"/tickets\" component={Ticket} />\r\n          <Route exact path=\"/monitor\" component={Monitor} />\r\n          <Route exact path=\"/admin/:path?\">\r\n            <div className=\"navbar\">\r\n              <SideNav />\r\n            </div>\r\n            <div className=\"admin-main\">\r\n              <Route exact path=\"/admin/dashboard\" component={Dash} />\r\n              <Route exact path=\"/admin/Analytics\" component={Analytics} />\r\n            </div>\r\n          </Route>\r\n        </Route>\r\n\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n\r\n  return <Routing />;\r\n};\r\n\r\nexport default App;\r\n","D:\\Git\\winter\\client\\src\\utils.js",[],"D:\\Git\\winter\\client\\src\\Context\\AppReducer.js",[],"D:\\Git\\winter\\client\\src\\pages\\Monitor.js",[],"D:\\Git\\winter\\client\\src\\pages\\Reg.js",[],"D:\\Git\\winter\\client\\src\\pages\\Ticket.js",["113"],"import React, { useEffect } from \"react\";\r\n//import { Grid, Col, Table, Modal, Button, Nav } from \"rsuite\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import { baseUrl } from \"../utils\";\r\n\r\nimport OpenTickets from \"../component/OpenTicket\";\r\nimport UnissuedTickets from \"../component/UnissuedTicket\";\r\n\r\nconst Ticket = () => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const call = async () => {\r\n      const res = localStorage.getItem(\"jwt\");\r\n      console.log(res);\r\n      if (!res) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        return console.log(\"logged in\");\r\n      }\r\n    };\r\n    call();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ margin: 25 }}>\r\n      <OpenTickets />\r\n      <UnissuedTickets />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ticket;\r\n","D:\\Git\\winter\\client\\src\\pages\\Home.js",["114"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Content,\r\n  Divider,\r\n  Button,\r\n  Icon,\r\n  Input,\r\n} from \"rsuite\";\r\nimport Popup from \"reactjs-popup\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Navigation from \"../component/Navigation\";\r\nimport CreateTodo from \"../component/CreateTodo\";\r\nimport ListTodo from \"../component/ListTodo\";\r\nimport TicketStats from \"../component/TicketStats\";\r\nimport ListNote from \"../component/ListNote\";\r\n\r\n// import { baseUrl } from \"../utils\";\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\n\r\nconst Todo = () => {\r\n  return (\r\n    <div className=\"Todo-Container\">\r\n      <h3>Todo List</h3>\r\n      <Divider />\r\n      <CreateTodo />\r\n      <ListTodo />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Notes = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const { saveNote } = useContext(GlobalContext);\r\n\r\n  const open = () => setModalIsOpen(true);\r\n  const close = () => setModalIsOpen(false);\r\n\r\n  return (\r\n    <div className=\"Notes-Container\">\r\n      <h3>\r\n        Notes\r\n        <Button onClick={open} style={{ float: \"right\" }}>\r\n          <Icon icon=\"plus\" />\r\n          <Popup modal open={modalIsOpen} nested={true}>\r\n            <div className=\"modal\">\r\n              <Button className=\"close\" onClick={close}>\r\n                &times;\r\n              </Button>\r\n              <div className=\"header\">\r\n                {\" \"}\r\n                <Input\r\n                  placeholder=\"Enter Note title here...\"\r\n                  onChange={setTitle}\r\n                />\r\n              </div>\r\n              <div className=\"content\">\r\n                <Input\r\n                  placeholder=\"Enter Note here...\"\r\n                  rows={10}\r\n                  componentClass=\"textarea\"\r\n                  onChange={setText}\r\n                />\r\n              </div>\r\n              <div className=\"actions\">\r\n                <Button\r\n                  style={{ marginRight: 20 }}\r\n                  className=\"button\"\r\n                  onClick={() => {\r\n                    console.log(\"Data sent\");\r\n                    saveNote(text, title);\r\n                    close();\r\n                  }}\r\n                >\r\n                  Save Note\r\n                </Button>\r\n                <Button\r\n                  className=\"button\"\r\n                  onClick={() => {\r\n                    console.log(\"modal closed \");\r\n                    close();\r\n                  }}\r\n                >\r\n                  Close\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Popup>\r\n        </Button>\r\n      </h3>\r\n      <Divider />\r\n      <ListNote />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Issues = () => {\r\n  return (\r\n    <div className=\"Right-Container\">\r\n      <TicketStats />\r\n      <Divider />\r\n      <CompanyNews />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CompanyNews = () => {\r\n  return (\r\n    <div className=\"News-Container\">\r\n      <h4>Latest News</h4>\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Home = () => {\r\n  // const [data, setData] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const call = async () => {\r\n      const res = localStorage.getItem(\"jwt\");\r\n      console.log(res);\r\n      if (!res) {\r\n        history.push(\"/login\");\r\n      } else {\r\n        return console.log(\"logged in\");\r\n      }\r\n    };\r\n    call();\r\n  }, []);\r\n\r\n  // console.log(data)\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Header>\r\n          <Navigation />\r\n        </Header>\r\n\r\n        <Container>\r\n          <Content>\r\n            <Todo />\r\n          </Content>\r\n        </Container>\r\n\r\n        <Container>\r\n          <Notes />\r\n        </Container>\r\n\r\n        <Container>\r\n          <Issues />\r\n        </Container>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\Git\\winter\\client\\src\\pages\\Login.js",["115"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  EyeInvisibleOutlined,\r\n  EyeTwoTone,\r\n} from \"@ant-design/icons\";\r\n\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\n\r\n// import { baseUrl } from '../utils'\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const { signin } = useContext(GlobalContext);\r\n\r\n  const onSubmit = async () => {\r\n    signin(email, password);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        name=\"normal_login\"\r\n        className=\"login-form\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n      >\r\n        <h1>Member Login</h1>\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Email!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            style={{ width: 300 }}\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            style={{ width: 300 }}\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            iconRender={(visible) =>\r\n              visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n            }\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <a className=\"login-form-forgot\" href=\"\">\r\n            Forgot password\r\n          </a>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n            onClick={() => {\r\n              onSubmit();\r\n              setTimeout(() => history.push(\"/\"), 4000);\r\n            }}\r\n          >\r\n            Log in\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Git\\winter\\client\\src\\component\\Navigation.js",["116"],"import React, { useEffect, useState } from \"react\";\r\nimport { Navbar, Nav, Icon, Tooltip, Whisper, Modal } from \"rsuite\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Settings from \"./Setings\";\r\nimport NewTicket from \"./NewTicket\";\r\n\r\nconst Navigation = () => {\r\n  const history = useHistory();\r\n\r\n  const tooltip = <Tooltip>Create a new Ticket here</Tooltip>;\r\n\r\n  const [ticketmodalIsOpen, setTicketIsOpen] = useState(false);\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [checkAdmin, setCheckAdmin] = useState(false);\r\n\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  function openTicketModal() {\r\n    setTicketIsOpen(true);\r\n  }\r\n\r\n  function closeTicketModal() {\r\n    setTicketIsOpen(false);\r\n  }\r\n\r\n  function isAdmin() {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user && user.role === \"admin\") {\r\n      setCheckAdmin(true);\r\n    } else {\r\n      if (!user) {\r\n        history.push(\"/Login\");\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    isAdmin();\r\n  }, []);\r\n\r\n  const Render = () => {\r\n    if (checkAdmin) {\r\n      return (\r\n        <div>\r\n          <Navbar>\r\n            <Navbar.Header>\r\n              <p href=\"#\" className=\"navbar-brand logo\">\r\n                Project Winter\r\n              </p>\r\n            </Navbar.Header>\r\n            <Navbar.Body>\r\n              <Nav>\r\n                <Nav.Item\r\n                  icon={<Icon icon=\"home\" />}\r\n                  onClick={() => history.push(\"/\")}\r\n                >\r\n                  Home\r\n                </Nav.Item>\r\n\r\n                <Nav.Item onClick={() => history.push(\"/tickets\")}>\r\n                  Tickets\r\n                </Nav.Item>\r\n\r\n                <Nav.Item\r\n                  onClick={() => history.push(\"/timesheet\")}\r\n                  disabled={true}\r\n                >\r\n                  TimeSheet\r\n                </Nav.Item>\r\n\r\n                <Nav.Item\r\n                  onClick={() => history.push(\"/admin/dashboard\")}\r\n                  disabled={false}\r\n                >\r\n                  Admin\r\n                </Nav.Item>\r\n              </Nav>\r\n\r\n              <Nav pullRight>\r\n                <Whisper placement=\"bottom\" trigger=\"hover\" speaker={tooltip}>\r\n                  <Nav.Item\r\n                    icon={<Icon icon=\"plus\" />}\r\n                    onClick={openTicketModal}\r\n                  >\r\n                    <Modal\r\n                      show={ticketmodalIsOpen}\r\n                      onHide={closeTicketModal}\r\n                      keyboard={true}\r\n                    >\r\n                      <h2 style={{ textAlign: \"center\" }}>New ticket</h2>\r\n                      <Modal.Body>\r\n                        <NewTicket />\r\n                      </Modal.Body>\r\n                    </Modal>\r\n                  </Nav.Item>\r\n                </Whisper>\r\n\r\n                <Nav.Item icon={<Icon icon=\"cog\" />} onClick={openModal}>\r\n                  <Modal show={modalIsOpen} onHide={closeModal}>\r\n                    <h2>Settings</h2>\r\n                    <Modal.Body>\r\n                      <Settings />\r\n                    </Modal.Body>\r\n                  </Modal>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Navbar.Body>\r\n          </Navbar>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Navbar>\r\n            <Navbar.Header>\r\n              <p href=\"#\" className=\"navbar-brand logo\">\r\n                Project Winter\r\n              </p>\r\n            </Navbar.Header>\r\n            <Navbar.Body>\r\n              <Nav>\r\n                <Nav.Item\r\n                  icon={<Icon icon=\"home\" />}\r\n                  onClick={() => history.push(\"/\")}\r\n                >\r\n                  Home\r\n                </Nav.Item>\r\n\r\n                <Nav.Item onClick={() => history.push(\"/tickets\")}>\r\n                  Tickets\r\n                </Nav.Item>\r\n\r\n                <Nav.Item\r\n                  onClick={() => history.push(\"/timesheet\")}\r\n                  disabled={true}\r\n                >\r\n                  TimeSheet\r\n                </Nav.Item>\r\n              </Nav>\r\n\r\n              <Nav pullRight>\r\n                <Whisper placement=\"bottom\" trigger=\"hover\" speaker={tooltip}>\r\n                  <Nav.Item\r\n                    icon={<Icon icon=\"plus\" />}\r\n                    onClick={openTicketModal}\r\n                  >\r\n                    <Modal\r\n                      show={ticketmodalIsOpen}\r\n                      onHide={closeTicketModal}\r\n                      keyboard={true}\r\n                    >\r\n                      <h2 style={{ textAlign: \"center\" }}>New ticket</h2>\r\n                      <Modal.Body>\r\n                        <NewTicket />\r\n                      </Modal.Body>\r\n                    </Modal>\r\n                  </Nav.Item>\r\n                </Whisper>\r\n\r\n                <Nav.Item icon={<Icon icon=\"cog\" />} onClick={openModal}>\r\n                  <Modal show={modalIsOpen} onHide={closeModal}>\r\n                    <h2>Settings</h2>\r\n                    <Modal.Body>\r\n                      <Settings />\r\n                    </Modal.Body>\r\n                  </Modal>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Navbar.Body>\r\n          </Navbar>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Render />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","D:\\Git\\winter\\client\\src\\component\\admin\\SideNav.js",[],"D:\\Git\\winter\\client\\src\\pages\\admin\\Dash.js",[],"D:\\Git\\winter\\client\\src\\pages\\admin\\Analytics.js",[],"D:\\Git\\winter\\client\\src\\component\\OpenTicket.js",["117","118","119","120","121","122","123","124"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Tag, Space, Button } from \"antd\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nimport { baseUrl } from \"../utils.js\";\r\n\r\nconst OpenTicket = () => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const open = () => setModalOpen(true);\r\n  const close = () => setModalOpen(false);\r\n\r\n  const { Column, HeaderCell, Cell } = Table;\r\n\r\n  async function loadContent() {\r\n    await fetch(`${baseUrl}/api/v1/tickets/openedTickets`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        setData(result.tickets);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function resolve() {\r\n      await loadContent();\r\n    }\r\n    resolve();\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Company\",\r\n      dataIndex: \"company\",\r\n      key: \"company\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Priority\",\r\n      dataIndex: \"priority\",\r\n      key: \"priority\",\r\n      width: 50,\r\n    },\r\n    {\r\n      title: \"Issue\",\r\n      dataIndex: \"issue\",\r\n      key: \"issue\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      width: 200,\r\n      render: () => (\r\n        <Space size=\"middle\">\r\n          <Button size=\"small\">Show</Button>\r\n          <Button size=\"small\">Delete</Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ textAlign: \"center\" }}>Open Tickets - {null}</h3>\r\n      <Table columns={columns} dataSource={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenTicket;\r\n","D:\\Git\\winter\\client\\src\\component\\UnissuedTicket.js",["125","126"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Tag, Space, Button } from \"antd\";\r\n\r\nimport { baseUrl } from \"../utils.js\";\r\n\r\nconst UnissuedTicket = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  async function loadContent() {\r\n    await fetch(`${baseUrl}/api/v1/tickets/unissuedTickets`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setData(result.tickets);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function resolve() {\r\n      await loadContent();\r\n    }\r\n    resolve();\r\n  }, []);\r\n\r\n  const convert = () => {\r\n    fetch(`${baseUrl}/api/v1/tickets/convertTicket`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        data,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          window.location.reload();\r\n          console.log(\"Congrats it worked\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Company\",\r\n      dataIndex: \"company\",\r\n      key: \"company\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Priority\",\r\n      dataIndex: \"priority\",\r\n      key: \"priority\",\r\n      width: 50,\r\n    },\r\n    {\r\n      title: \"Issue\",\r\n      dataIndex: \"issue\",\r\n      key: \"issue\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      width: 200,\r\n      render: () => (\r\n        <Space size=\"middle\">\r\n          <Button size=\"small\">Convert</Button>\r\n          <Button size=\"small\"></Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h3 style={{ textAlign: \"center\" }}>Unissued Tickets - </h3>\r\n      <Table columns={columns} dataSource={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnissuedTicket;\r\n","D:\\Git\\winter\\client\\src\\component\\CreateTodo.js",[],"D:\\Git\\winter\\client\\src\\component\\ListTodo.js",[],"D:\\Git\\winter\\client\\src\\component\\TicketStats.js",[],"D:\\Git\\winter\\client\\src\\component\\ListNote.js",[],"D:\\Git\\winter\\client\\src\\component\\Setings.js",["127"],"import React, { useContext } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import {UserContext} from '../App'\r\n\r\nconst Setings = () => {\r\n  const history = useHistory();\r\n\r\n  function logout() {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={logout}>Logout</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Setings;\r\n","D:\\Git\\winter\\client\\src\\component\\admin\\CreateUser.js",[],"D:\\Git\\winter\\client\\src\\component\\NewTicket.js",["128"],"import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  ControlLabel,\r\n  HelpBlock,\r\n  Button,\r\n  ButtonToolbar,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"rsuite\";\r\nimport { Select } from 'antd';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { baseUrl } from \"../utils\";\r\n\r\nconst NewTicket = () => {\r\n  const history = useHistory();\r\n\r\n  const { Option } = Select;\r\n  \r\n  const [name, setName] = useState(\"\");\r\n  const [company, setCompany] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [issue, setIssue] = useState(\"\");\r\n  const [priority, setPriority] = useState(\"\");\r\n\r\n  const postData = () => {\r\n    fetch(`${baseUrl}/api/v1/tickets/createTicket`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        email,\r\n        company,\r\n        issue,\r\n        priority,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          console.log(\"Congrats it worked\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form layout=\"horizontal\">\r\n        <FormGroup>\r\n          <ControlLabel>Name</ControlLabel>\r\n          <input name=\"name\" onChange={(e) => setName(e.target.value)} />\r\n          <HelpBlock tooltip>Required</HelpBlock>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <ControlLabel>Email</ControlLabel>\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <HelpBlock tooltip>Required</HelpBlock>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <ControlLabel>Company</ControlLabel>\r\n          <Select\r\n            showSearch\r\n            style={{ width: 200 }}\r\n            placeholder=\"Select a person\"\r\n            optionFilterProp=\"children\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            <Option value=\"jack\">Jack</Option>\r\n            <Option value=\"lucy\">Lucy</Option>\r\n            <Option value=\"tom\">Tom</Option>\r\n          </Select>,\r\n          <HelpBlock tooltip>Required</HelpBlock>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <ControlLabel>Issue</ControlLabel>\r\n          <input\r\n            name=\"textarea\"\r\n            rows={3}\r\n            componentClass=\"textarea\"\r\n            onChange={(e) => setIssue(e.target.value)}\r\n          />\r\n          <HelpBlock tooltip>Required</HelpBlock>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <ControlLabel>Priority</ControlLabel>\r\n          <RadioGroup\r\n            name=\"radioList\"\r\n            inline\r\n            appearance=\"picker\"\r\n            defaultValue=\"A\"\r\n            onChange={setPriority}\r\n          >\r\n            <Radio value=\"Low\">Low</Radio>\r\n            <Radio value=\"Normal\">Normal</Radio>\r\n            <Radio value=\"High\">High</Radio>\r\n          </RadioGroup>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <ButtonToolbar>\r\n            <Button\r\n              appearance=\"primary\"\r\n              onClick={() => {\r\n                postData();\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              appearance=\"default\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </ButtonToolbar>\r\n        </FormGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewTicket;\r\n","D:\\Git\\winter\\client\\src\\component\\admin\\CreateClient.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":1,"column":16,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"137","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":35},{"ruleId":"133","severity":1,"message":"138","line":17,"column":10,"nodeType":"135","messageId":"136","endLine":17,"endColumn":17},{"ruleId":"139","severity":1,"message":"140","line":24,"column":6,"nodeType":"141","endLine":24,"endColumn":8,"suggestions":"142"},{"ruleId":"139","severity":1,"message":"140","line":136,"column":6,"nodeType":"141","endLine":136,"endColumn":8,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":73,"column":11,"nodeType":"146","endLine":73,"endColumn":52},{"ruleId":"139","severity":1,"message":"147","line":46,"column":6,"nodeType":"141","endLine":46,"endColumn":8,"suggestions":"148"},{"ruleId":"133","severity":1,"message":"149","line":2,"column":17,"nodeType":"135","messageId":"136","endLine":2,"endColumn":20},{"ruleId":"133","severity":1,"message":"150","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":13},{"ruleId":"133","severity":1,"message":"151","line":8,"column":10,"nodeType":"135","messageId":"136","endLine":8,"endColumn":19},{"ruleId":"133","severity":1,"message":"152","line":11,"column":9,"nodeType":"135","messageId":"136","endLine":11,"endColumn":13},{"ruleId":"133","severity":1,"message":"153","line":12,"column":9,"nodeType":"135","messageId":"136","endLine":12,"endColumn":14},{"ruleId":"133","severity":1,"message":"154","line":14,"column":11,"nodeType":"135","messageId":"136","endLine":14,"endColumn":17},{"ruleId":"133","severity":1,"message":"155","line":14,"column":19,"nodeType":"135","messageId":"136","endLine":14,"endColumn":29},{"ruleId":"133","severity":1,"message":"156","line":14,"column":31,"nodeType":"135","messageId":"136","endLine":14,"endColumn":35},{"ruleId":"133","severity":1,"message":"149","line":2,"column":17,"nodeType":"135","messageId":"136","endLine":2,"endColumn":20},{"ruleId":"133","severity":1,"message":"157","line":30,"column":9,"nodeType":"135","messageId":"136","endLine":30,"endColumn":16},{"ruleId":"133","severity":1,"message":"158","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":27},{"ruleId":"133","severity":1,"message":"159","line":23,"column":19,"nodeType":"135","messageId":"136","endLine":23,"endColumn":29},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'baseUrl' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["162"],["163"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'isAdmin'. Either include it or remove the dependency array.",["164"],"'Tag' is defined but never used.","'Popup' is defined but never used.","'modalOpen' is assigned a value but never used.","'open' is assigned a value but never used.","'close' is assigned a value but never used.","'Column' is assigned a value but never used.","'HeaderCell' is assigned a value but never used.","'Cell' is assigned a value but never used.","'convert' is assigned a value but never used.","'useContext' is defined but never used.","'setCompany' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [history]",{"range":"170","text":"171"},{"range":"172","text":"171"},"Update the dependencies array to be: [isAdmin]",{"range":"173","text":"174"},[645,647],"[history]",[3492,3494],[1087,1089],"[isAdmin]"]