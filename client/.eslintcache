[{"D:\\Git\\winter\\client\\src\\index.js":"1","D:\\Git\\winter\\client\\src\\App.js":"2","D:\\Git\\winter\\client\\src\\pages\\Home.js":"3","D:\\Git\\winter\\client\\src\\pages\\Ticket.js":"4","D:\\Git\\winter\\client\\src\\pages\\Monitor.js":"5","D:\\Git\\winter\\client\\src\\pages\\Reg.js":"6","D:\\Git\\winter\\client\\src\\pages\\Admin.js":"7","D:\\Git\\winter\\client\\src\\pages\\Login.js":"8","D:\\Git\\winter\\client\\src\\pages\\Reset.js":"9","D:\\Git\\winter\\client\\src\\component\\Navigation.js":"10","D:\\Git\\winter\\client\\src\\utils.js":"11","D:\\Git\\winter\\client\\src\\component\\ListTodo.js":"12","D:\\Git\\winter\\client\\src\\component\\CreateTodo.js":"13","D:\\Git\\winter\\client\\src\\component\\TicketStats.js":"14","D:\\Git\\winter\\client\\src\\component\\ListNote.js":"15","D:\\Git\\winter\\client\\src\\component\\UnissuedTicket.js":"16","D:\\Git\\winter\\client\\src\\component\\OpenTicket.js":"17","D:\\Git\\winter\\client\\src\\component\\NewTicket.js":"18","D:\\Git\\winter\\client\\src\\component\\Setings.js":"19","D:\\Git\\winter\\client\\src\\Context\\GlobalState.js":"20","D:\\Git\\winter\\client\\src\\Context\\AppReducer.js":"21"},{"size":602,"mtime":1607345270321,"results":"22","hashOfConfig":"23"},{"size":1824,"mtime":1607345232442,"results":"24","hashOfConfig":"23"},{"size":3771,"mtime":1607350465052,"results":"25","hashOfConfig":"23"},{"size":471,"mtime":1606939540302,"results":"26","hashOfConfig":"23"},{"size":1102,"mtime":1606939518254,"results":"27","hashOfConfig":"23"},{"size":2694,"mtime":1606939727522,"results":"28","hashOfConfig":"23"},{"size":3178,"mtime":1607335749292,"results":"29","hashOfConfig":"23"},{"size":2656,"mtime":1607335749293,"results":"30","hashOfConfig":"23"},{"size":145,"mtime":1607335749293,"results":"31","hashOfConfig":"23"},{"size":4811,"mtime":1607335749291,"results":"32","hashOfConfig":"23"},{"size":48,"mtime":1607284653162,"results":"33","hashOfConfig":"23"},{"size":3042,"mtime":1607358297444,"results":"34","hashOfConfig":"23"},{"size":828,"mtime":1607354119112,"results":"35","hashOfConfig":"23"},{"size":2495,"mtime":1607284745081,"results":"36","hashOfConfig":"23"},{"size":1468,"mtime":1607347494418,"results":"37","hashOfConfig":"23"},{"size":2803,"mtime":1607284770381,"results":"38","hashOfConfig":"23"},{"size":4497,"mtime":1607284736645,"results":"39","hashOfConfig":"23"},{"size":3072,"mtime":1607284313343,"results":"40","hashOfConfig":"23"},{"size":426,"mtime":1607335749292,"results":"41","hashOfConfig":"23"},{"size":2012,"mtime":1607358371128,"results":"42","hashOfConfig":"23"},{"size":452,"mtime":1607352296046,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1t8oi2s",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\Git\\winter\\client\\src\\index.js",[],["92","93"],"D:\\Git\\winter\\client\\src\\App.js",[],"D:\\Git\\winter\\client\\src\\pages\\Home.js",["94"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Content,\r\n  Divider,\r\n  Button,\r\n  Icon,\r\n  Input,\r\n} from \"rsuite\";\r\nimport Popup from 'reactjs-popup';\r\n\r\n\r\nimport Navigation from \"../component/Navigation\";\r\nimport CreateTodo from \"../component/CreateTodo\";\r\nimport ListTodo from \"../component/ListTodo\";\r\nimport TicketStats from \"../component/TicketStats\";\r\nimport ListNote from \"../component/ListNote\";\r\n\r\nimport { baseUrl } from \"../utils\";\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\nconst Todo = () => {\r\n  return (\r\n    <div className=\"Todo-Container\">\r\n      <h3>Todo List</h3>\r\n      <Divider />\r\n      <CreateTodo />\r\n      <ListTodo />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Notes = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [title, setTitle] = useState('');\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  \r\n  const open = () => setModalIsOpen(true);\r\n  const close = () => setModalIsOpen(false);\r\n\r\n  async function loadContent() {\r\n    await fetch(`${baseUrl}/api/v1/todo/getNotes`, {\r\n      method: \"get\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        ContentType: \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setText(result);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function resolve() {\r\n      await loadContent();\r\n    }\r\n    resolve();\r\n  }, []);\r\n\r\n\r\n  const PostData = async () => {\r\n    await fetch(`${baseUrl}/api/v1/note/saveNote`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        text,\r\n        title\r\n      }),\r\n    }).then((res) => res.json());\r\n  };\r\n\r\n  return (\r\n    <div className=\"Notes-Container\">\r\n      <h3>\r\n        Notes\r\n        <Button onClick={open} style={{ float: \"right\" }}>\r\n        <Icon icon=\"plus\" />\r\n        <Popup modal open={modalIsOpen} nested={true}>\r\n        <div className=\"modal\">\r\n        <Button className=\"close\" onClick={close}>\r\n          &times;\r\n        </Button>\r\n        <div className=\"header\"> <Input placeholder=\"Enter Note title here...\" onChange={setTitle} /></div>\r\n        <div className=\"content\">\r\n          <Input placeholder=\"Enter Note here...\" rows={10} componentClass=\"textarea\" onChange={setText} />\r\n        </div>\r\n        <div className=\"actions\">\r\n        <Button\r\n            style={{marginRight: 20}}\r\n            className=\"button\"\r\n            onClick={() => {\r\n              console.log('Data sent');\r\n              PostData()\r\n              close()\r\n              window.location.reload();\r\n            }}\r\n          >\r\n            Save Note\r\n          </Button>\r\n          <Button\r\n            className=\"button\"\r\n            onClick={() => {\r\n              console.log('modal closed ');\r\n              close();\r\n              window.location.reload();\r\n            }}\r\n          >\r\n            close modal\r\n          </Button>\r\n        </div>\r\n      </div>\r\n        </Popup>\r\n        </Button>\r\n      </h3>\r\n      <Divider />\r\n      <ListNote />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Issues = () => {\r\n  return (\r\n    <div className=\"Issue-Container\">\r\n      <TicketStats />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Header>\r\n          <Navigation />\r\n        </Header>\r\n\r\n        <Container>\r\n          <Content>\r\n            <Todo />\r\n          </Content>\r\n        </Container>\r\n\r\n        <Container>\r\n          <Notes />\r\n        </Container>\r\n\r\n        <Container>\r\n          <Issues />\r\n        </Container>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\Git\\winter\\client\\src\\pages\\Ticket.js",[],"D:\\Git\\winter\\client\\src\\pages\\Monitor.js",[],"D:\\Git\\winter\\client\\src\\pages\\Reg.js",[],"D:\\Git\\winter\\client\\src\\pages\\Admin.js",["95"],"import React, { useState,  } from \"react\";\r\nimport {\r\n  Container,\r\n  Content,\r\n  Form,\r\n  FormGroup,\r\n  ControlLabel,\r\n  ButtonToolbar,\r\n  Button,\r\n  Modal,\r\n} from \"rsuite\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import {UserContext} from '../App'\r\n\r\nimport { baseUrl } from \"../utils.js\";\r\n\r\nconst CreateUser = () => {\r\n  // const history = useHistory();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n  const open = () => setIsOpen(true);\r\n  const close = () => setIsOpen(false);\r\n\r\n  const PostData = async () => {\r\n    await fetch(`${baseUrl}/api/v1/auth/Signup`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        email,\r\n        password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (!data.error) {\r\n          window.location.reload();\r\n        } else {\r\n          console.log(data.error);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"createUser-container\">\r\n      <h4>Add new user</h4>\r\n      <Container>\r\n        <Button onClick={open} >\r\n          Add User\r\n          <Modal\r\n          show={modalIsOpen}\r\n          onHide={close()}\r\n        >\r\n          <Modal.Header>Add a new User</Modal.Header>\r\n          <Modal.Body>\r\n          <Content>\r\n            <Form fluid>\r\n              <FormGroup>\r\n                <ControlLabel>Name</ControlLabel>\r\n                <input name=\"name\" onChange={(e) => setName(e.target.value)} />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <ControlLabel>Email</ControlLabel>\r\n                <input\r\n                  name=\"password\"\r\n                  type=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <ControlLabel>Password</ControlLabel>\r\n                <input\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <ButtonToolbar>\r\n                  <Button appearance=\"primary\" onClick={() => PostData(), close()}>\r\n                    Add\r\n                  </Button>\r\n                </ButtonToolbar>\r\n              </FormGroup>\r\n            </Form>\r\n          </Content>\r\n          </Modal.Body>\r\n          </Modal>\r\n        </Button>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Admin = () => {\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n  console.log(user.role)\r\n\r\n  const Render = () => {\r\n    if(user.role === \"admin\") {\r\n      return (\r\n        <div>\r\n          <CreateUser />\r\n        </div>\r\n      ) \r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1>You do not have the permissions to view this Route</h1>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Render />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","D:\\Git\\winter\\client\\src\\pages\\Login.js",["96","97"],"import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Content,\r\n  FlexboxGrid,\r\n  Panel,\r\n  Form,\r\n  FormGroup,\r\n  ControlLabel,\r\n  ButtonToolbar,\r\n  Button,\r\n} from \"rsuite\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {UserContext} from '../App'\r\n\r\nimport { baseUrl } from '../utils'\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const PostData = async () => {\r\n    await fetch(`${baseUrl}/api/v1/auth/login`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data)\r\n        if (!data.error) {\r\n          localStorage.setItem(\"jwt\", data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(data.user))\r\n          history.push(\"/dash\");\r\n        } else {\r\n          console.log(data.error);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Container>\r\n          <Content>\r\n            <FlexboxGrid justify=\"center\">\r\n              <FlexboxGrid.Item colspan={12}>\r\n                <Panel header={<h3>Login</h3>} bordered>\r\n                  <Form fluid>\r\n                    <FormGroup>\r\n                      <ControlLabel>Email</ControlLabel>\r\n                      <input\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <ControlLabel>Password</ControlLabel>\r\n                      <input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <ButtonToolbar>\r\n                        <Button appearance=\"primary\" onClick={() => {PostData();}}>\r\n                          Sign in\r\n                        </Button>\r\n                        <Button appearance=\"link\">Forgot password?</Button>\r\n                      </ButtonToolbar>\r\n                    </FormGroup>\r\n                  </Form>\r\n                </Panel>\r\n              </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n          </Content>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Git\\winter\\client\\src\\pages\\Reset.js",[],"D:\\Git\\winter\\client\\src\\component\\Navigation.js",[],"D:\\Git\\winter\\client\\src\\utils.js",[],"D:\\Git\\winter\\client\\src\\component\\ListTodo.js",["98"],"D:\\Git\\winter\\client\\src\\component\\CreateTodo.js",["99"],"import React, { useState, useContext } from 'react';\r\nimport { Input, InputGroup, Icon } from \"rsuite\";\r\n\r\n// import { baseUrl } from \"../utils\";\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\nconst CreateTodo = () => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const { addTodo } = useContext(GlobalContext);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    addTodo(text);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <InputGroup>\r\n        <input\r\n          style={{ width: 300 }}\r\n          placeholder=\"Enter Todo... \"\r\n          value={text} \r\n          onChange={(e) => {setText(e.target.value)}}\r\n        />\r\n        <InputGroup.Button>\r\n          <Icon icon=\"check-square-o\" onClick={onSubmit} />\r\n        </InputGroup.Button>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTodo;\r\n","D:\\Git\\winter\\client\\src\\component\\TicketStats.js",[],"D:\\Git\\winter\\client\\src\\component\\ListNote.js",[],"D:\\Git\\winter\\client\\src\\component\\UnissuedTicket.js",[],"D:\\Git\\winter\\client\\src\\component\\OpenTicket.js",[],"D:\\Git\\winter\\client\\src\\component\\NewTicket.js",[],"D:\\Git\\winter\\client\\src\\component\\Setings.js",["100","101"],"import React,{useContext} from 'react'\r\nimport { Button } from \"rsuite\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {UserContext} from '../App'\r\n\r\nconst Setings = () => {\r\n  const history = useHistory();\r\n\r\n  function logout() {\r\n    localStorage.clear();\r\n    history.push(\"/Login\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={logout}>Logout</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Setings;\r\n","D:\\Git\\winter\\client\\src\\Context\\GlobalState.js",[],"D:\\Git\\winter\\client\\src\\Context\\AppReducer.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":21,"column":10,"nodeType":"108","messageId":"109","endLine":21,"endColumn":23},{"ruleId":"110","severity":1,"message":"111","line":89,"column":73,"nodeType":"112","messageId":"113","endLine":89,"endColumn":74},{"ruleId":"106","severity":1,"message":"114","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":37},{"ruleId":"106","severity":1,"message":"115","line":14,"column":9,"nodeType":"108","messageId":"109","endLine":14,"endColumn":20},{"ruleId":"106","severity":1,"message":"116","line":1,"column":40,"nodeType":"108","messageId":"109","endLine":1,"endColumn":48},{"ruleId":"106","severity":1,"message":"117","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":15},{"ruleId":"106","severity":1,"message":"114","line":1,"column":15,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"115","line":4,"column":9,"nodeType":"108","messageId":"109","endLine":4,"endColumn":20},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'GlobalContext' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useContext' is defined but never used.","'UserContext' is defined but never used.","'useState' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]