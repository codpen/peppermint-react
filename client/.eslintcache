[{"/Users/jack/Documents/GitHub/winter/client/src/index.js":"1","/Users/jack/Documents/GitHub/winter/client/src/App.js":"2","/Users/jack/Documents/GitHub/winter/client/src/pages/Home.js":"3","/Users/jack/Documents/GitHub/winter/client/src/pages/Ticket.js":"4","/Users/jack/Documents/GitHub/winter/client/src/pages/Monitor.js":"5","/Users/jack/Documents/GitHub/winter/client/src/pages/Login.js":"6","/Users/jack/Documents/GitHub/winter/client/src/pages/Reg.js":"7","/Users/jack/Documents/GitHub/winter/client/src/pages/Admin.js":"8","/Users/jack/Documents/GitHub/winter/client/src/component/Navigation.js":"9","/Users/jack/Documents/GitHub/winter/client/src/utils.js":"10","/Users/jack/Documents/GitHub/winter/client/src/component/OpenTicket.js":"11","/Users/jack/Documents/GitHub/winter/client/src/component/Setings.js":"12","/Users/jack/Documents/GitHub/winter/client/src/component/NewTicket.js":"13","/Users/jack/Documents/GitHub/winter/client/src/component/TicketStats.js":"14","/Users/jack/Documents/GitHub/winter/client/src/component/UnissuedTicket.js":"15","/Users/jack/Documents/GitHub/winter/client/src/component/CreateTodo.js":"16","/Users/jack/Documents/GitHub/winter/client/src/component/ListTodo.js":"17","/Users/jack/Documents/GitHub/winter/client/src/component/ListNote.js":"18","/Users/jack/Documents/GitHub/winter/client/src/pages/Reset.js":"19"},{"size":465,"mtime":1606942187182,"results":"20","hashOfConfig":"21"},{"size":1770,"mtime":1607299835726,"results":"22","hashOfConfig":"21"},{"size":3554,"mtime":1607299835730,"results":"23","hashOfConfig":"21"},{"size":452,"mtime":1606942187183,"results":"24","hashOfConfig":"21"},{"size":1055,"mtime":1606948837448,"results":"25","hashOfConfig":"21"},{"size":2564,"mtime":1607296026050,"results":"26","hashOfConfig":"21"},{"size":2595,"mtime":1606942187183,"results":"27","hashOfConfig":"21"},{"size":3045,"mtime":1607294765643,"results":"28","hashOfConfig":"21"},{"size":4626,"mtime":1607293791189,"results":"29","hashOfConfig":"21"},{"size":47,"mtime":1607293607463,"results":"30","hashOfConfig":"21"},{"size":4355,"mtime":1607293607456,"results":"31","hashOfConfig":"21"},{"size":405,"mtime":1607296036411,"results":"32","hashOfConfig":"21"},{"size":2960,"mtime":1607293607454,"results":"33","hashOfConfig":"21"},{"size":2375,"mtime":1607293607457,"results":"34","hashOfConfig":"21"},{"size":2696,"mtime":1607293607460,"results":"35","hashOfConfig":"21"},{"size":918,"mtime":1607293607446,"results":"36","hashOfConfig":"21"},{"size":3119,"mtime":1607299835728,"results":"37","hashOfConfig":"21"},{"size":1390,"mtime":1607293607448,"results":"38","hashOfConfig":"21"},{"size":134,"mtime":1607289465962,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1q9gr7o",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/jack/Documents/GitHub/winter/client/src/index.js",[],["83","84"],"/Users/jack/Documents/GitHub/winter/client/src/App.js",["85","86"],"/Users/jack/Documents/GitHub/winter/client/src/pages/Home.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Ticket.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Monitor.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Login.js",["87","88"],"import React, { useState, useContext } from \"react\";\nimport {\n  Container,\n  Content,\n  FlexboxGrid,\n  Panel,\n  Form,\n  FormGroup,\n  ControlLabel,\n  ButtonToolbar,\n  Button,\n} from \"rsuite\";\nimport { useHistory } from \"react-router-dom\";\nimport {UserContext} from '../App'\n\nimport { baseUrl } from '../utils'\n\nconst Login = () => {\n  const history = useHistory();\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const PostData = async () => {\n    await fetch(`${baseUrl}/api/v1/auth/login`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data)\n        if (!data.error) {\n          localStorage.setItem(\"jwt\", data.token);\n          localStorage.setItem(\"user\", JSON.stringify(data.user))\n          history.push(\"/dash\");\n        } else {\n          console.log(data.error);\n        }\n      });\n  };\n\n  return (\n    <div>\n      <div>\n        <Container>\n          <Content>\n            <FlexboxGrid justify=\"center\">\n              <FlexboxGrid.Item colspan={12}>\n                <Panel header={<h3>Login</h3>} bordered>\n                  <Form fluid>\n                    <FormGroup>\n                      <ControlLabel>Email</ControlLabel>\n                      <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <ControlLabel>Password</ControlLabel>\n                      <input\n                        name=\"password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <ButtonToolbar>\n                        <Button appearance=\"primary\" onClick={() => {PostData();}}>\n                          Sign in\n                        </Button>\n                        <Button appearance=\"link\">Forgot password?</Button>\n                      </ButtonToolbar>\n                    </FormGroup>\n                  </Form>\n                </Panel>\n              </FlexboxGrid.Item>\n            </FlexboxGrid>\n          </Content>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/jack/Documents/GitHub/winter/client/src/pages/Reg.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Admin.js",["89"],"import React, { useState,  } from \"react\";\nimport {\n  Container,\n  Content,\n  Form,\n  FormGroup,\n  ControlLabel,\n  ButtonToolbar,\n  Button,\n  Modal,\n} from \"rsuite\";\n// import { useHistory } from \"react-router-dom\";\n// import {UserContext} from '../App'\n\nimport { baseUrl } from \"../utils.js\";\n\nconst CreateUser = () => {\n  // const history = useHistory();\n\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const open = () => setIsOpen(true);\n  const close = () => setIsOpen(false);\n\n  const PostData = async () => {\n    await fetch(`${baseUrl}/api/v1/auth/Signup`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (!data.error) {\n          window.location.reload();\n        } else {\n          console.log(data.error);\n        }\n      });\n  };\n\n  return (\n    <div className=\"createUser-container\">\n      <h4>Add new user</h4>\n      <Container>\n        <Button onClick={open} >\n          Add User\n          <Modal\n          show={modalIsOpen}\n          onHide={close()}\n        >\n          <Modal.Header>Add a new User</Modal.Header>\n          <Modal.Body>\n          <Content>\n            <Form fluid>\n              <FormGroup>\n                <ControlLabel>Name</ControlLabel>\n                <input name=\"name\" onChange={(e) => setName(e.target.value)} />\n              </FormGroup>\n\n              <FormGroup>\n                <ControlLabel>Email</ControlLabel>\n                <input\n                  name=\"password\"\n                  type=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <ControlLabel>Password</ControlLabel>\n                <input\n                  name=\"password\"\n                  type=\"password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <ButtonToolbar>\n                  <Button appearance=\"primary\" onClick={() => PostData(), close()}>\n                    Add\n                  </Button>\n                </ButtonToolbar>\n              </FormGroup>\n            </Form>\n          </Content>\n          </Modal.Body>\n          </Modal>\n        </Button>\n      </Container>\n    </div>\n  );\n};\n\nconst Admin = () => {\n\n  const user = JSON.parse(localStorage.getItem(\"user\"))\n\n  console.log(user.role)\n\n  const Render = () => {\n    if(user.role === \"admin\") {\n      return (\n        <div>\n          <CreateUser />\n        </div>\n      ) \n    } else {\n      return (\n        <div>\n          <h1>You do not have the permissions to view this Route</h1>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Render />\n    </div>\n  );\n};\n\nexport default Admin;\n","/Users/jack/Documents/GitHub/winter/client/src/component/Navigation.js",[],"/Users/jack/Documents/GitHub/winter/client/src/utils.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/OpenTicket.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/Setings.js",["90","91"],"import React,{useContext} from 'react'\nimport { Button } from \"rsuite\";\nimport { useHistory } from \"react-router-dom\";\nimport {UserContext} from '../App'\n\nconst Setings = () => {\n  const history = useHistory();\n\n  function logout() {\n    localStorage.clear();\n    history.push(\"/Login\");\n  }\n\n  return (\n    <div>\n      <Button onClick={logout}>Logout</Button>\n    </div>\n  );\n};\n\nexport default Setings;\n","/Users/jack/Documents/GitHub/winter/client/src/component/NewTicket.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/TicketStats.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/UnissuedTicket.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/CreateTodo.js",[],"/Users/jack/Documents/GitHub/winter/client/src/component/ListTodo.js",["92","93"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Divider, Icon, Tooltip, Whisper } from \"rsuite\";\n\nimport { baseUrl } from \"../utils\";\nimport { GlobalContext } from '../reducers/GlobalState';\n\nconst ListTodo = () => {\n  const [data, setData] = useState([]);\n\n  const { getTodos,  } = useContext(GlobalContext)\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  const allDone = () => {\n    fetch(`${baseUrl}/api/v1/todo/markAllAsDone`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        ContentType: \"application/json\",\n        Accept: \"application/json\",\n      },\n    }).then((response) => response.json());\n  };\n\n  const oneDone = (item) => {\n    fetch(`${baseUrl}/api/v1/todo/markOneAsDone/${item._id}`, {\n      method: \"PUT\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        ContentType: \"application/json\",\n        Accept: \"application/json\",\n      },\n    }).then((response) => response.json());\n  };\n\n  const removeTodo = (id) => {\n    fetch(`${baseUrl}/api/v1/todo/deleteTodo/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (!data.error) {\n          window.location.reload();\n          return;\n        } else {\n          console.log(data.error);\n        }\n      });\n  };\n\n  const tooltip1 = <Tooltip>Remove Todo</Tooltip>;\n  const tooltip2 = <Tooltip>Mark as done</Tooltip>;\n\n  return (\n    <div>\n      <button style={{ marginTop: 10 }} onClick={allDone}>\n        Mark All Done\n      </button>\n      <Divider orientation=\"left\" style={{ width: \"auto\" }}></Divider>\n      {data.map((item) => {\n        // console.log(item)\n        return (\n          <div key={item._id} className=\"todo-list\">\n            <ul>\n              <li style={{ marginLeft: -35 }}>\n                <span className={item.done ? \"done\" : \"\"}>{item.text}</span>\n                <Whisper placement=\"bottom\" trigger=\"hover\" speaker={tooltip1}>\n                  <button onClick={() => {removeTodo(item._id); window.location.reload()}} style={{ float: \"right\"}}><Icon icon=\"close\" /></button>\n                </Whisper>\n                <Whisper placement=\"bottom\" trigger=\"hover\" speaker={tooltip2}>\n                  <button\n                    onClick={() => {oneDone(item); window.location.reload()}}\n                    style={{ float: \"right\", marginRight: 5 }}\n                  >\n                    <Icon icon=\"check\" />\n                  </button>\n                </Whisper>\n              </li>\n            </ul>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ListTodo;\n","/Users/jack/Documents/GitHub/winter/client/src/component/ListNote.js",[],"/Users/jack/Documents/GitHub/winter/client/src/pages/Reset.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":2,"column":3,"nodeType":"100","messageId":"101","endLine":2,"endColumn":16},{"ruleId":"98","severity":1,"message":"102","line":4,"column":3,"nodeType":"100","messageId":"101","endLine":4,"endColumn":13},{"ruleId":"98","severity":1,"message":"103","line":1,"column":27,"nodeType":"100","messageId":"101","endLine":1,"endColumn":37},{"ruleId":"98","severity":1,"message":"104","line":14,"column":9,"nodeType":"100","messageId":"101","endLine":14,"endColumn":20},{"ruleId":"105","severity":1,"message":"106","line":89,"column":73,"nodeType":"107","messageId":"108","endLine":89,"endColumn":74},{"ruleId":"98","severity":1,"message":"103","line":1,"column":15,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"104","line":4,"column":9,"nodeType":"100","messageId":"101","endLine":4,"endColumn":20},{"ruleId":"98","severity":1,"message":"109","line":8,"column":16,"nodeType":"100","messageId":"101","endLine":8,"endColumn":23},{"ruleId":"110","severity":1,"message":"111","line":14,"column":6,"nodeType":"112","endLine":14,"endColumn":8,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'useReducer' is defined but never used.","'useContext' is defined but never used.","'UserContext' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTodos'. Either include it or remove the dependency array.","ArrayExpression",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},"Update the dependencies array to be: [getTodos]",{"range":"119","text":"120"},[376,378],"[getTodos]"]