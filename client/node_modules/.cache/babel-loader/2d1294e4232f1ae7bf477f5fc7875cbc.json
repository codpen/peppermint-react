{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\japot\\\\Desktop\\\\Peppermint\\\\Peppermint\\\\client\\\\src\\\\components\\\\ticket\\\\Transfer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Select, Modal, Button } from \"antd\";\nimport { GlobalContext } from \"../../Context/GlobalState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transfer = props => {\n  _s();\n\n  const {\n    Option\n  } = Select;\n  const [users, setUsers] = useState([]);\n  const [id, setId] = useState();\n  const [visible, setVisible] = useState(false);\n  const ticket = props.ticket.id;\n  const {\n    transferTicket\n  } = useContext(GlobalContext);\n\n  const fetchUsers = async () => {\n    await fetch(`/api/v1/auth/getAllUsers`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(res => {\n      if (res) {\n        setUsers(res.users);\n      }\n    });\n  };\n\n  const onCreate = async () => {\n    setVisible(false);\n    await transferTicket(id, ticket);\n  };\n\n  const onCancel = () => {\n    setVisible(false);\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const search = users.map(d => /*#__PURE__*/_jsxDEV(Option, {\n    children: [d.firstName, \" \", d.lastName]\n  }, d.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"inline-flex justify-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-900\",\n      onClick: () => {\n        setVisible(true);\n      },\n      children: \"Transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visible,\n      onCancel: onCancel,\n      onOk: onCreate,\n      width: 300,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        style: {\n          width: 200\n        },\n        showSearch: true,\n        placeholder: \"Select a user\",\n        optionFilterProp: \"children\",\n        onChange: setId,\n        filterOption: (input, option) => option.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n        children: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transfer, \"fd5IDws0ObxUWWHds9MsA82geoM=\");\n\n_c = Transfer;\nexport default Transfer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"sources":["C:/Users/japot/Desktop/Peppermint/Peppermint/client/src/components/ticket/Transfer.js"],"names":["React","useState","useEffect","useContext","Select","Modal","Button","GlobalContext","Transfer","props","Option","users","setUsers","id","setId","visible","setVisible","ticket","transferTicket","fetchUsers","fetch","method","headers","then","res","json","onCreate","onCancel","search","map","d","firstName","lastName","width","input","option","toLowerCase","indexOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,QAAsC,MAAtC;AAEA,SAASC,aAAT,QAA8B,2BAA9B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAaN,MAAnB;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,EAAD,EAAKC,KAAL,IAAcb,QAAQ,EAA5B;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMgB,MAAM,GAAGR,KAAK,CAACQ,MAAN,CAAaJ,EAA5B;AAEA,QAAM;AAAEK,IAAAA;AAAF,MAAqBf,UAAU,CAACI,aAAD,CAArC;;AAEA,QAAMY,UAAU,GAAG,YAAY;AAC7B,UAAMC,KAAK,CAAE,0BAAF,EAA6B;AACtCC,MAAAA,MAAM,EAAE,KAD8B;AAEtCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAF6B,KAA7B,CAAL,CAMHC,IANG,CAMGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANX,EAOHF,IAPG,CAOGC,GAAD,IAAS;AACb,UAAIA,GAAJ,EAAS;AACPZ,QAAAA,QAAQ,CAACY,GAAG,CAACb,KAAL,CAAR;AACD;AACF,KAXG,CAAN;AAYD,GAbD;;AAeA,QAAMe,QAAQ,GAAG,YAAY;AAC3BV,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,UAAME,cAAc,CAACL,EAAD,EAAKI,MAAL,CAApB;AACD,GAHD;;AAKA,QAAMU,QAAQ,GAAG,MAAM;AACrBX,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMS,MAAM,GAAGjB,KAAK,CAACkB,GAAN,CAAWC,CAAD,iBACvB,QAAC,MAAD;AAAA,eACGA,CAAC,CAACC,SADL,OACiBD,CAAC,CAACE,QADnB;AAAA,KAAaF,CAAC,CAACjB,EAAf;AAAA;AAAA;AAAA;AAAA,UADa,CAAf;AAMA,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,sNADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbG,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAED,OAAhB;AAAyB,MAAA,QAAQ,EAAEY,QAAnC;AAA6C,MAAA,IAAI,EAAED,QAAnD;AAA6D,MAAA,KAAK,EAAE,GAApE;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEO,UAAAA,KAAK,EAAE;AAAT,SADT;AAEE,QAAA,UAAU,MAFZ;AAGE,QAAA,WAAW,EAAC,eAHd;AAIE,QAAA,gBAAgB,EAAC,UAJnB;AAKE,QAAA,QAAQ,EAAEnB,KALZ;AAME,QAAA,YAAY,EAAE,CAACoB,KAAD,EAAQC,MAAR,KACZA,MAAM,CAACC,WAAP,GAAqBC,OAArB,CAA6BH,KAAK,CAACE,WAAN,EAA7B,KAAqD,CAPzD;AAAA,kBAUGR;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAtED;;GAAMpB,Q;;KAAAA,Q;AAwEN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Select, Modal, Button } from \"antd\";\r\n\r\nimport { GlobalContext } from \"../../Context/GlobalState\";\r\n\r\nconst Transfer = (props) => {\r\n  const { Option } = Select;\r\n  const [users, setUsers] = useState([]);\r\n  const [id, setId] = useState();\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const ticket = props.ticket.id;\r\n\r\n  const { transferTicket } = useContext(GlobalContext);\r\n\r\n  const fetchUsers = async () => {\r\n    await fetch(`/api/v1/auth/getAllUsers`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res) {\r\n          setUsers(res.users);\r\n        }\r\n      });\r\n  };\r\n\r\n  const onCreate = async () => {\r\n    setVisible(false);\r\n    await transferTicket(id, ticket);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const search = users.map((d) => (\r\n    <Option key={d.id}>\r\n      {d.firstName} {d.lastName}\r\n    </Option>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"inline-flex justify-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-900\"\r\n        onClick={() => {\r\n          setVisible(true);\r\n        }}\r\n      >\r\n        Transfer\r\n      </button>\r\n      <Modal visible={visible} onCancel={onCancel} onOk={onCreate} width={300}>\r\n        <Select\r\n          style={{ width: 200 }}\r\n          showSearch\r\n          placeholder=\"Select a user\"\r\n          optionFilterProp=\"children\"\r\n          onChange={setId}\r\n          filterOption={(input, option) =>\r\n            option.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          {search}\r\n        </Select>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transfer;\r\n"]},"metadata":{},"sourceType":"module"}