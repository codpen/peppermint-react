{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\japot\\\\Desktop\\\\Peppermint\\\\Peppermint\\\\client\\\\src\\\\components\\\\users\\\\Reset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Modal, Button, message } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reset = props => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [user, setUser] = useState(props.user._id);\n  const [password, setPassword] = useState(\"\");\n\n  const success = () => {\n    message.success(\"Password updated\");\n  };\n\n  const fail = f => {\n    message.error(`${f}`);\n  };\n\n  const postData = async () => {\n    const id = user;\n    await fetch(`/api/v1/auth/resetPassword/${id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        password\n      })\n    }).then(res => res.json()).then(res => {\n      if (res.failed === false) {\n        success();\n      } else {\n        fail(res.message);\n      }\n    });\n  };\n\n  const onCreate = async () => {\n    setVisible(false);\n    await postData();\n  };\n\n  const onCancel = () => {\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        setVisible(true);\n      },\n      children: \"Reset password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visible,\n      title: \"Reset users password\",\n      okText: \"Update\",\n      cancelText: \"Cancel\",\n      onCancel: onCancel,\n      onOk: onCreate,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\",\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Enter users new password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reset, \"7NyUWp1SJhOMPCjsOdMegbNmF+k=\");\n\n_c = Reset;\nexport default Reset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["C:/Users/japot/Desktop/Peppermint/Peppermint/client/src/components/users/Reset.js"],"names":["React","useState","Modal","Button","message","Reset","props","visible","setVisible","user","setUser","_id","password","setPassword","success","fail","f","error","postData","id","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","then","res","json","failed","onCreate","onCancel","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,QAAuC,MAAvC;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACK,KAAK,CAACG,IAAN,CAAWE,GAAZ,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMa,OAAO,GAAG,MAAM;AACpBV,IAAAA,OAAO,CAACU,OAAR,CAAgB,kBAAhB;AACD,GAFD;;AAIA,QAAMC,IAAI,GAAIC,CAAD,IAAO;AAClBZ,IAAAA,OAAO,CAACa,KAAR,CAAe,GAAED,CAAE,EAAnB;AACD,GAFD;;AAIA,QAAME,QAAQ,GAAG,YAAY;AAC3B,UAAMC,EAAE,GAAGV,IAAX;AACA,UAAMW,KAAK,CAAE,8BAA6BD,EAAG,EAAlC,EAAqC;AAC9CE,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAFpB,OAFqC;AAM9CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBhB,QAAAA;AADmB,OAAf;AANwC,KAArC,CAAL,CAUHiB,IAVG,CAUGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAVX,EAWHF,IAXG,CAWGC,GAAD,IAAS;AACb,UAAIA,GAAG,CAACE,MAAJ,KAAe,KAAnB,EAA0B;AACxBlB,QAAAA,OAAO;AACR,OAFD,MAEO;AACLC,QAAAA,IAAI,CAACe,GAAG,CAAC1B,OAAL,CAAJ;AACD;AACF,KAjBG,CAAN;AAkBD,GApBD;;AAsBA,QAAM6B,QAAQ,GAAG,YAAY;AAC3BzB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,UAAMU,QAAQ,EAAd;AACD,GAHD;;AAKA,QAAMgB,QAAQ,GAAG,MAAM;AACrB1B,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACbA,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,KAAD;AACE,MAAA,OAAO,EAAED,OADX;AAEE,MAAA,KAAK,EAAC,sBAFR;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,UAAU,EAAC,QAJb;AAKE,MAAA,QAAQ,EAAE2B,QALZ;AAME,MAAA,IAAI,EAAED,QANR;AAAA,6BAQE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAC,4GAFZ;AAGE,QAAA,QAAQ,EAAGE,CAAD,IAAOtB,WAAW,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAH9B;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAtED;;GAAMhC,K;;KAAAA,K;AAwEN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, Button, message } from \"antd\";\r\n\r\nconst Reset = (props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [user, setUser] = useState(props.user._id);\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const success = () => {\r\n    message.success(\"Password updated\");\r\n  };\r\n\r\n  const fail = (f) => {\r\n    message.error(`${f}`);\r\n  };\r\n\r\n  const postData = async () => {\r\n    const id = user;\r\n    await fetch(`/api/v1/auth/resetPassword/${id}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.failed === false) {\r\n          success();\r\n        } else {\r\n          fail(res.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  const onCreate = async () => {\r\n    setVisible(false);\r\n    await postData();\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={() => {\r\n          setVisible(true);\r\n        }}\r\n      >\r\n        Reset password\r\n      </Button>\r\n      <Modal\r\n        visible={visible}\r\n        title=\"Reset users password\"\r\n        okText=\"Update\"\r\n        cancelText=\"Cancel\"\r\n        onCancel={onCancel}\r\n        onOk={onCreate}\r\n      >\r\n        <input\r\n          type=\"password\"\r\n          className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Enter users new password\"\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n"]},"metadata":{},"sourceType":"module"}