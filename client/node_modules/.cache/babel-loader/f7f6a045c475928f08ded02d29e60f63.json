{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\japot\\\\Desktop\\\\Peppermint\\\\Peppermint\\\\client\\\\src\\\\Context\\\\GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\"; // Initial State\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  todos: [],\n  notes: [],\n  unissuedTicket: [],\n  openTicket: [],\n  newsletters: [],\n  clients: [],\n  user: [],\n  users: []\n}; // Create context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState); // action\n\n  async function getTodos() {\n    const config = {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        ContentType: \"application/json\",\n        Accept: \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.get(`/api/v1/todo/getTodo`, config);\n      dispatch({\n        type: \"GET_TODOS\",\n        payload: res.data.todos\n      });\n    } catch (error) {}\n  }\n\n  async function addTodo(todo) {\n    try {\n      const res = await fetch(`/api/v1/todo/createTodo`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n        },\n        body: JSON.stringify({\n          todo\n        })\n      }).then(res => res.json());\n      dispatch({\n        type: \"ADD_TODO\",\n        payload: res.todo\n      });\n    } catch (error) {}\n  }\n\n  async function deleteTodo(id) {\n    try {\n      await fetch(`/api/v1/todo/deleteTodo/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(response => response.json());\n      dispatch({\n        type: \"DELETE_TODO\",\n        payload: id\n      });\n    } catch (error) {}\n  }\n\n  async function allDone() {\n    try {\n      const res = await fetch(`/api/v1/todo/markAllAsDone`, {\n        method: \"PUT\",\n        headers: {\n          ContentType: \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json());\n      await dispatch({\n        type: \"ALLDONE_TODO\",\n        payload: res.todos\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function markDone(id) {\n    try {\n      const res = await fetch(`/api/v1/todo/markOneAsDone/${id}`, {\n        method: \"PUT\",\n        headers: {\n          ContentType: \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(response => response.json());\n      await dispatch({\n        type: \"MARK_TODO\",\n        payload: res.todos\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function markUndone(id) {\n    try {\n      const res = await fetch(`/api/v1/todo/markUndone/${id}`, {\n        method: \"PUT\",\n        headers: {\n          ContentType: \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(response => response.json());\n      await dispatch({\n        type: \"UNMARK_TODO\",\n        payload: res.todos\n      });\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getNotes() {\n    try {\n      const res = await fetch(`/api/v1/note/getNotes`, {\n        method: \"get\",\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n          ContentType: \"application/json\"\n        }\n      }).then(res => res.json());\n      await dispatch({\n        type: \"GET_NOTES\",\n        payload: res.notes\n      });\n    } catch (error) {}\n  }\n\n  async function saveNote(text, title) {\n    try {\n      const res = await await fetch(`/api/v1/note/saveNote`, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text,\n          title\n        })\n      }).then(res => res.json());\n      await dispatch({\n        type: \"ADD_NOTE\",\n        payload: res.note\n      });\n    } catch (error) {}\n  }\n\n  async function deleteNote(id) {\n    try {\n      await fetch(`/api/v1/note/deleteNote/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json());\n      dispatch({\n        type: \"DELETE_NOTE\",\n        payload: id\n      });\n    } catch (error) {}\n  }\n\n  async function signin(email, password) {\n    try {\n      await fetch(`/api/v1/auth/login`, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      }).then(res => res.json()).then(data => {\n        if (!data.error) {\n          localStorage.setItem(\"user\", JSON.stringify(data.user));\n          dispatch({\n            type: \"USER_LOGGED\",\n            payload: data.user\n          });\n        } else {\n          console.log(data.error);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function createTicket(name, email, company, issue, priority, engineer) {\n    try {\n      const res = await fetch(`/api/v1/tickets/createTicket`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          company,\n          issue,\n          priority,\n          engineer\n        })\n      }).then(res => res.json());\n\n      if (res.failed === true) {\n        console.log(res.error);\n      } else {\n        dispatch({\n          type: \"ADD_TICKET\",\n          payload: res.ticket\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getUnissuedTicket() {\n    try {\n      const res = await fetch(`/api/v1/tickets/unissuedTickets`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n        }\n      }).then(res => res.json());\n      dispatch({\n        type: \"GET_UNISSUEDTICKETS\",\n        payload: res.tickets\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function convertTicket(data) {\n    try {\n      const res = await fetch(`/api/v1/tickets/convertTicket`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          data\n        })\n      }).then(res => res.json());\n      dispatch({\n        type: \"CONVERT_TICKET\",\n        payload: res.ticket\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getOpenTicket() {\n    try {\n      const res = await fetch(`/api/v1/tickets/openedTickets`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json());\n      dispatch({\n        type: \"GET_OPENTICKET\",\n        payload: res.tickets\n      });\n    } catch (error) {}\n  }\n\n  async function completeTicket(id) {\n    const res = await fetch(`/api/v1/tickets/complete/${id}`, {\n      method: \"Post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json());\n    dispatch({\n      type: \"COMPLETE_TICKET\",\n      payload: res.tickets\n    });\n  }\n\n  async function unCompleteTicket(id) {\n    const res = await fetch(`/api/v1/tickets/uncomplete/${id}`, {\n      method: \"Post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json());\n    dispatch({\n      type: \"COMPLETE_TICKET\",\n      payload: res.tickets\n    });\n    console.log(res);\n  }\n\n  async function transferTicket(id, ticket) {\n    try {\n      const res = await fetch(`/api/v1/tickets/transfer`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id,\n          find: ticket\n        })\n      }).then(res => res.json());\n      dispatch({\n        type: \"TRANSFER_TICKET\",\n        payload: res.tickets\n      });\n    } catch (error) {}\n  }\n\n  async function createNewsletter(title, text, active) {\n    try {\n      const res = await fetch(`/api/v1/newsletter/create`, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          text,\n          active\n        })\n      }).then(async res => await res.json());\n      await dispatch({\n        type: \"CREATE_NEWSLETTER\",\n        payload: res.newsletter\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getNewsletter() {\n    try {\n      const res = await fetch(`/api/v1/newsletter/get`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json());\n      await dispatch({\n        type: \"GET_NEWSLETTER\",\n        payload: res.newsletters\n      });\n    } catch (error) {}\n  }\n\n  async function deleteNewsletter(id) {\n    try {\n      const res = await fetch(`/api/v1/newsletter/delete/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json());\n      await dispatch({\n        type: \"DELETE_NEWSLETTER\",\n        payload: res.newsletters\n      });\n    } catch (error) {}\n  }\n\n  async function getClients() {\n    try {\n      const res = await fetch(`/api/v1/client/allclients`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json());\n      await dispatch({\n        type: \"GET_CLIENTS\",\n        payload: res.clients\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function createClient(name, contactName, number, email) {\n    try {\n      const res = await fetch(`/api/v1/client/create`, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          contactName,\n          number,\n          email\n        })\n      }).then(res => res.json());\n      dispatch({\n        type: \"CREATE_CLIENT\",\n        payload: res.client\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function createUser(firstName, lastName, email, password) {\n    try {\n      await fetch(`/api/v1/auth/Signup`, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          firstName,\n          lastName,\n          email,\n          password\n        })\n      }).then(res => res.json());\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async function getUsers() {\n    try {\n      const res = await fetch(`/api/v1/auth/getAllUsers`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json());\n      console.log(res);\n      dispatch({\n        type: \"GET_USERS\",\n        payload: res.users\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // This allows us to use in any component by use usecontext\n    // Which is the react hook\n    _jsxDEV(GlobalContext.Provider, {\n      value: {\n        todos: state.todos,\n        notes: state.notes,\n        auth: state.auth,\n        user: state.user,\n        users: state.users,\n        unissuedTicket: state.unissuedTicket,\n        openTicket: state.openTicket,\n        newsletters: state.newsletters,\n        clients: state.clients,\n        getTodos,\n        addTodo,\n        deleteTodo,\n        allDone,\n        markDone,\n        getNotes,\n        saveNote,\n        deleteNote,\n        signin,\n        getUnissuedTicket,\n        convertTicket,\n        getOpenTicket,\n        completeTicket,\n        transferTicket,\n        markUndone,\n        createNewsletter,\n        getNewsletter,\n        deleteNewsletter,\n        createTicket,\n        getClients,\n        createClient,\n        createUser,\n        getUsers,\n        unCompleteTicket\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["C:/Users/japot/Desktop/Peppermint/Peppermint/client/src/Context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","todos","notes","unissuedTicket","openTicket","newsletters","clients","user","users","GlobalContext","GlobalProvider","children","state","dispatch","getTodos","config","headers","Authorization","localStorage","getItem","ContentType","Accept","res","get","type","payload","data","error","addTodo","todo","fetch","method","body","JSON","stringify","then","json","deleteTodo","id","response","allDone","console","log","markDone","markUndone","getNotes","saveNote","text","title","note","deleteNote","signin","email","password","setItem","createTicket","name","company","issue","priority","engineer","failed","ticket","getUnissuedTicket","tickets","convertTicket","getOpenTicket","completeTicket","unCompleteTicket","transferTicket","find","createNewsletter","active","newsletter","getNewsletter","deleteNewsletter","getClients","createClient","contactName","number","client","createUser","firstName","lastName","getUsers","auth"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\nimport axios from \"axios\";\r\n\r\n// Initial State\r\nconst initialState = {\r\n  todos: [],\r\n  notes: [],\r\n  unissuedTicket: [],\r\n  openTicket: [],\r\n  newsletters: [],\r\n  clients: [],\r\n  user: [],\r\n  users: [],\r\n};\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // action\r\n  async function getTodos() {\r\n    const config = {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        ContentType: \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.get(`/api/v1/todo/getTodo`, config);\r\n      dispatch({\r\n        type: \"GET_TODOS\",\r\n        payload: res.data.todos,\r\n      });\r\n    } catch (error) {}\r\n  }\r\n\r\n  async function addTodo(todo) {\r\n    try {\r\n      const res = await fetch(`/api/v1/todo/createTodo`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        },\r\n        body: JSON.stringify({\r\n          todo,\r\n        }),\r\n      }).then((res) => res.json());\r\n\r\n      dispatch({\r\n        type: \"ADD_TODO\",\r\n        payload: res.todo,\r\n      });\r\n    } catch (error) {}\r\n  }\r\n\r\n  async function deleteTodo(id) {\r\n    try {\r\n      await fetch(`/api/v1/todo/deleteTodo/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }).then((response) => response.json());\r\n      dispatch({ type: \"DELETE_TODO\", payload: id });\r\n    } catch (error) {}\r\n  }\r\n\r\n  async function allDone() {\r\n    try {\r\n      const res = await fetch(`/api/v1/todo/markAllAsDone`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          ContentType: \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }).then((res) => res.json());\r\n      await dispatch({ type: \"ALLDONE_TODO\", payload: res.todos });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function markDone(id) {\r\n    try {\r\n      const res = await fetch(`/api/v1/todo/markOneAsDone/${id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          ContentType: \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }).then((response) => response.json());\r\n      await dispatch({ type: \"MARK_TODO\", payload: res.todos });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function markUndone(id) {\r\n    try {\r\n      const res = await fetch(`/api/v1/todo/markUndone/${id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          ContentType: \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }).then((response) => response.json());\r\n      await dispatch({ type: \"UNMARK_TODO\", payload: res.todos });\r\n      console.log(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function getNotes() {\r\n    try {\r\n      const res = await fetch(`/api/v1/note/getNotes`, {\r\n        method: \"get\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n          ContentType: \"application/json\",\r\n        },\r\n      }).then((res) => res.json());\r\n      await dispatch({ type: \"GET_NOTES\", payload: res.notes });\r\n    } catch (error) {}\r\n  }\r\n\r\n  async function saveNote(text, title) {\r\n    try {\r\n      const res = await await fetch(`/api/v1/note/saveNote`, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          text,\r\n          title,\r\n        }),\r\n      }).then((res) => res.json());\r\n      await dispatch({ type: \"ADD_NOTE\", payload: res.note });\r\n    } catch (error) {}\r\n  }\r\n\r\n  async function deleteNote(id) {\r\n    try {\r\n      await fetch(`/api/v1/note/deleteNote/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }).then((res) => res.json());\r\n      dispatch({ type: \"DELETE_NOTE\", payload: id });\r\n    } catch (error) {}\r\n  }\r\n\r\n  async function signin(email, password) {\r\n    try {\r\n      await fetch(`/api/v1/auth/login`, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (!data.error) {\r\n            localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n            dispatch({ type: \"USER_LOGGED\", payload: data.user });\r\n          } else {\r\n            console.log(data.error);\r\n          }\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function createTicket(name, email, company, issue, priority, engineer) {\r\n    try {\r\n      const res = await fetch(`/api/v1/tickets/createTicket`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          email,\r\n          company,\r\n          issue,\r\n          priority,\r\n          engineer\r\n        }),\r\n      }).then((res) => res.json());\r\n      if (res.failed === true) {\r\n        console.log(res.error);\r\n      } else {\r\n        dispatch({ type: \"ADD_TICKET\", payload: res.ticket });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function getUnissuedTicket() {\r\n    try {\r\n      const res = await fetch(`/api/v1/tickets/unissuedTickets`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        },\r\n      }).then((res) => res.json());\r\n      dispatch({ type: \"GET_UNISSUEDTICKETS\", payload: res.tickets });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function convertTicket(data) {\r\n    try {\r\n      const res = await fetch(`/api/v1/tickets/convertTicket`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          data,\r\n        }),\r\n      }).then((res) => res.json());\r\n      dispatch({ type: \"CONVERT_TICKET\", payload: res.ticket });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function getOpenTicket() {\r\n    try {\r\n      const res = await fetch(`/api/v1/tickets/openedTickets`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then((res) => res.json());\r\n      dispatch({ type: \"GET_OPENTICKET\", payload: res.tickets });\r\n    } catch (error) {}\r\n  }\r\n\r\n  async function completeTicket(id) {\r\n    const res = await fetch(`/api/v1/tickets/complete/${id}`, {\r\n      method: \"Post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => res.json());\r\n    dispatch({ type: \"COMPLETE_TICKET\", payload: res.tickets });\r\n  }\r\n\r\n  async function unCompleteTicket(id) {\r\n    const res = await fetch(`/api/v1/tickets/uncomplete/${id}`, {\r\n      method: \"Post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then((res) => res.json());\r\n    dispatch({ type: \"COMPLETE_TICKET\", payload: res.tickets });\r\n    console.log(res);\r\n  }\r\n\r\n  async function transferTicket(id, ticket) {\r\n    try {\r\n      const res = await fetch(`/api/v1/tickets/transfer`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id,\r\n          find: ticket,\r\n        }),\r\n      }).then((res) => res.json());\r\n      dispatch({ type: \"TRANSFER_TICKET\", payload: res.tickets });\r\n    } catch (error) {}\r\n  }\r\n\r\n  async function createNewsletter(title, text, active) {\r\n    try {\r\n      const res = await fetch(`/api/v1/newsletter/create`, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          title,\r\n          text,\r\n          active,\r\n        }),\r\n      }).then(async (res) => await res.json());\r\n      await dispatch({ type: \"CREATE_NEWSLETTER\", payload: res.newsletter });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function getNewsletter() {\r\n    try {\r\n      const res = await fetch(`/api/v1/newsletter/get`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then((res) => res.json());\r\n      await dispatch({ type: \"GET_NEWSLETTER\", payload: res.newsletters });\r\n    } catch (error) {}\r\n  }\r\n\r\n  async function deleteNewsletter(id) {\r\n    try {\r\n      const res = await fetch(`/api/v1/newsletter/delete/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then((res) => res.json());\r\n      await dispatch({ type: \"DELETE_NEWSLETTER\", payload: res.newsletters });\r\n    } catch (error) {}\r\n  }\r\n\r\n  async function getClients() {\r\n    try {\r\n      const res = await fetch(`/api/v1/client/allclients`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then((res) => res.json());\r\n      await dispatch({ type: \"GET_CLIENTS\", payload: res.clients });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function createClient(name, contactName, number, email) {\r\n    try {\r\n      const res = await fetch(`/api/v1/client/create`, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          contactName,\r\n          number,\r\n          email,\r\n        }),\r\n      }).then((res) => res.json());\r\n      dispatch({ type: \"CREATE_CLIENT\", payload: res.client });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function createUser(firstName, lastName, email, password) {\r\n    try {\r\n      await fetch(`/api/v1/auth/Signup`, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          firstName,\r\n          lastName,\r\n          email,\r\n          password,\r\n        }),\r\n      }).then((res) => res.json());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function getUsers() {\r\n    try {\r\n      const res = await fetch(`/api/v1/auth/getAllUsers`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then((res) => res.json());\r\n      console.log(res)\r\n      dispatch({ type: \"GET_USERS\", payload: res.users });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    // This allows us to use in any component by use usecontext\r\n    // Which is the react hook\r\n    <GlobalContext.Provider\r\n      value={{\r\n        todos: state.todos,\r\n        notes: state.notes,\r\n        auth: state.auth,\r\n        user: state.user,\r\n        users: state.users,\r\n        unissuedTicket: state.unissuedTicket,\r\n        openTicket: state.openTicket,\r\n        newsletters: state.newsletters,\r\n        clients: state.clients,\r\n        getTodos,\r\n        addTodo,\r\n        deleteTodo,\r\n        allDone,\r\n        markDone,\r\n        getNotes,\r\n        saveNote,\r\n        deleteNote,\r\n        signin,\r\n        getUnissuedTicket,\r\n        convertTicket,\r\n        getOpenTicket,\r\n        completeTicket,\r\n        transferTicket,\r\n        markUndone,\r\n        createNewsletter,\r\n        getNewsletter,\r\n        deleteNewsletter,\r\n        createTicket,\r\n        getClients,\r\n        createClient,\r\n        createUser,\r\n        getUsers,\r\n        unCompleteTicket,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}